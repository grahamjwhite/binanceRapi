% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wallet_api.R
\docType{class}
\name{WalletApi}
\alias{WalletApi}
\title{Wallet operations}
\format{
An \code{R6Class} generator object
}
\description{
binanceRapi.Wallet
}
\section{Methods}{

\describe{
\strong{ SapiV1AccountApiRestrictionsGet } \emph{ Get API Key Permission (USER_DATA) }
Weight(IP): 1

\itemize{
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{InlineResponse20048} \cr


\item status code : 200 | API Key permissions

\item return type : InlineResponse20048 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1AccountApiTradingStatusGet } \emph{ Account API Trading Status (USER_DATA) }
Fetch account API trading status with details.  Weight(IP): 1

\itemize{
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{InlineResponse20039} \cr


\item status code : 200 | Account API trading status

\item return type : InlineResponse20039 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1AccountDisableFastWithdrawSwitchPost } \emph{ Disable Fast Withdraw Switch (USER_DATA) }
- This request will disable fastwithdraw switch under your account. - You need to enable \&quot;trade\&quot; option for the api key which requests this endpoint.  Weight(IP): 1

\itemize{
\item \emph{ @param } recv.window integer


\item status code : 200 | OK

\item return type : object 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1AccountEnableFastWithdrawSwitchPost } \emph{ Enable Fast Withdraw Switch (USER_DATA) }
- This request will enable fastwithdraw switch under your account. You need to enable \&quot;trade\&quot; option for the api key which requests this endpoint. - When Fast Withdraw Switch is on, transferring funds to a Binance account will be done instantly. There is no on-chain transaction, no transaction ID and no withdrawal fee.  Weight(IP): 1

\itemize{
\item \emph{ @param } recv.window integer


\item status code : 200 | OK

\item return type : object 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1AccountSnapshotGet } \emph{ Daily Account Snapshot (USER_DATA) }
- The query time period must be less than 30 days - Support query within the last 6 months only - If startTime and endTime not sent, return records of the last 7 days by default  Weight(IP): 2400

\itemize{
\item \emph{ @param } type Enum < [SPOT, MARGIN, FUTURES] >
\item \emph{ @param } start.time integer
\item \emph{ @param } end.time integer
\item \emph{ @param } limit integer
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{OneOfsnapshotSpotsnapshotMarginsnapshotFutures} \cr


\item status code : 200 | Account Snapshot

\item return type : OneOfsnapshotSpotsnapshotMarginsnapshotFutures 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1AccountStatusGet } \emph{ Account Status (USER_DATA) }
Fetch account status detail.  Weight(IP): 1

\itemize{
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{InlineResponse20038} \cr


\item status code : 200 | OK

\item return type : InlineResponse20038 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1AssetAssetDetailGet } \emph{ Asset Detail (USER_DATA) }
Fetch details of assets supported on Binance.  - Please get network and other deposit or withdraw details from &#x60;GET /sapi/v1/capital/config/getall&#x60;.  Weight(IP): 1

\itemize{
\item \emph{ @param } asset character
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{InlineResponse20043} \cr


\item status code : 200 | Asset detail

\item return type : InlineResponse20043 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1AssetAssetDividendGet } \emph{ Asset Dividend Record (USER_DATA) }
Query asset Dividend Record  Weight(IP): 10

\itemize{
\item \emph{ @param } limit character
\item \emph{ @param } asset character
\item \emph{ @param } start.time integer
\item \emph{ @param } end.time integer
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{InlineResponse20042} \cr


\item status code : 200 | Records of asset dividend

\item return type : InlineResponse20042 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1AssetDribbletGet } \emph{ DustLog(USER_DATA) }
Weight(IP): 1

\itemize{
\item \emph{ @param } start.time integer
\item \emph{ @param } end.time integer
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{InlineResponse20040} \cr


\item status code : 200 | Dust log records

\item return type : InlineResponse20040 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1AssetDustPost } \emph{ Dust Transfer (USER_DATA) }
Convert dust assets to BNB.  Weight(UID): 10

\itemize{
\item \emph{ @param } asset character
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{InlineResponse20041} \cr


\item status code : 200 | Dust log records

\item return type : InlineResponse20041 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1AssetGetFundingAssetPost } \emph{ Funding Wallet (USER_DATA) }
- Currently supports querying the following business assetsï¼šBinance Pay, Binance Card, Binance Gift Card, Stock Token  Weight(IP): 1

\itemize{
\item \emph{ @param } asset character
\item \emph{ @param } need.btc.valuation Enum < [true, false] >
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } list( \link{inline_response_200_47} ) \cr


\item status code : 200 | Funding asset detail

\item return type : array[InlineResponse20047] 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1AssetTradeFeeGet } \emph{ Trade Fee (USER_DATA) }
Fetch trade fee  Weight(IP): 1

\itemize{
\item \emph{ @param } symbol character
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } list( \link{inline_response_200_44} ) \cr


\item status code : 200 | Trade fee info per symbol

\item return type : array[InlineResponse20044] 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1AssetTransferGet } \emph{ Query User Universal Transfer History (USER_DATA) }
- &#x60;fromSymbol&#x60; must be sent when type are ISOLATEDMARGIN_MARGIN and ISOLATEDMARGIN_ISOLATEDMARGIN - &#x60;toSymbol&#x60; must be sent when type are MARGIN_ISOLATEDMARGIN and ISOLATEDMARGIN_ISOLATEDMARGIN - Support query within the last 6 months only - If &#x60;startTime&#x60; and &#x60;endTime&#x60; not sent, return records of the last 7 days by default  Weight(IP): 1

\itemize{
\item \emph{ @param } type Enum < [MAIN_C2C, MAIN_UMFUTURE, MAIN_CMFUTURE, MAIN_MARGIN, MAIN_MINING, C2C_MAIN, C2C_UMFUTURE, C2C_MINING, C2C_MARGIN, UMFUTURE_MAIN, UMFUTURE_C2C, UMFUTURE_MARGIN, CMFUTURE_MAIN, CMFUTURE_MARGIN, MARGIN_MAIN, MARGIN_UMFUTURE, MARGIN_CMFUTURE, MARGIN_MINING, MARGIN_C2C, MINING_MAIN, MINING_UMFUTURE, MINING_C2C, MINING_MARGIN, MAIN_PAY, PAY_MAIN, ISOLATEDMARGIN_MARGIN, MARGIN_ISOLATEDMARGIN, ISOLATEDMARGIN_ISOLATEDMARGIN] >
\item \emph{ @param } start.time integer
\item \emph{ @param } end.time integer
\item \emph{ @param } current integer
\item \emph{ @param } size integer
\item \emph{ @param } from.symbol character
\item \emph{ @param } to.symbol character
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{InlineResponse20045} \cr


\item status code : 200 | Universal transfer history

\item return type : InlineResponse20045 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1AssetTransferPost } \emph{ User Universal Transfer (USER_DATA) }
You need to enable &#x60;Permits Universal Transfer&#x60; option for the api key which requests this endpoint.  - &#x60;fromSymbol&#x60; must be sent when type are ISOLATEDMARGIN_MARGIN and ISOLATEDMARGIN_ISOLATEDMARGIN - &#x60;toSymbol&#x60; must be sent when type are MARGIN_ISOLATEDMARGIN and ISOLATEDMARGIN_ISOLATEDMARGIN  ENUM of transfer types: - MAIN_UMFUTURE Spot account transfer to USDâ“ˆ-M Futures account - MAIN_CMFUTURE Spot account transfer to COIN-M Futures account - MAIN_MARGIN Spot account transfer to Marginï¼ˆcrossï¼‰account - MAIN_MINING Spot account transfer to Mining account - UMFUTURE_MAIN USDâ“ˆ-M Futures account transfer to Spot account - UMFUTURE_MARGIN USDâ“ˆ-M Futures account transfer to Marginï¼ˆcrossï¼‰account - CMFUTURE_MAIN COIN-M Futures account transfer to Spot account - CMFUTURE_MARGIN COIN-M Futures account transfer to Margin(cross) account - MARGIN_MAIN Marginï¼ˆcrossï¼‰account transfer to Spot account - MARGIN_UMFUTURE Marginï¼ˆcrossï¼‰account transfer to USDâ“ˆ-M Futures - MARGIN_CMFUTURE Marginï¼ˆcrossï¼‰account transfer to COIN-M Futures - MARGIN_MINING Marginï¼ˆcrossï¼‰account transfer to Mining account - MINING_MAIN Mining account transfer to Spot account - MINING_UMFUTURE Mining account transfer to USDâ“ˆ-M Futures account - MINING_MARGIN Mining account transfer to Margin(cross) account - ISOLATEDMARGIN_MARGIN Isolated margin account transfer to Margin(cross) account - MARGIN_ISOLATEDMARGIN Margin(cross) account transfer to Isolated margin account - ISOLATEDMARGIN_ISOLATEDMARGIN Isolated margin account transfer to Isolated margin account - MAIN_FUNDING Spot account transfer to Funding account - FUNDING_MAIN Funding account transfer to Spot account - FUNDING_UMFUTURE Funding account transfer to UMFUTURE account - UMFUTURE_FUNDING UMFUTURE account transfer to Funding account - MARGIN_FUNDING MARGIN account transfer to Funding account - FUNDING_MARGIN Funding account transfer to Margin account - FUNDING_CMFUTURE Funding account transfer to CMFUTURE account - CMFUTURE_FUNDING CMFUTURE account transfer to Funding account  Weight(IP): 1

\itemize{
\item \emph{ @param } type Enum < [MAIN_C2C, MAIN_UMFUTURE, MAIN_CMFUTURE, MAIN_MARGIN, MAIN_MINING, C2C_MAIN, C2C_UMFUTURE, C2C_MINING, C2C_MARGIN, UMFUTURE_MAIN, UMFUTURE_C2C, UMFUTURE_MARGIN, CMFUTURE_MAIN, CMFUTURE_MARGIN, MARGIN_MAIN, MARGIN_UMFUTURE, MARGIN_CMFUTURE, MARGIN_MINING, MARGIN_C2C, MINING_MAIN, MINING_UMFUTURE, MINING_C2C, MINING_MARGIN, MAIN_PAY, PAY_MAIN, ISOLATEDMARGIN_MARGIN, MARGIN_ISOLATEDMARGIN, ISOLATEDMARGIN_ISOLATEDMARGIN] >
\item \emph{ @param } asset character
\item \emph{ @param } amount numeric
\item \emph{ @param } from.symbol character
\item \emph{ @param } to.symbol character
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{InlineResponse20046} \cr


\item status code : 200 | Transfer id

\item return type : InlineResponse20046 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1CapitalConfigGetallGet } \emph{ All Coins&#39; Information (USER_DATA) }
Get information of coins (available for deposit and withdraw) for user.  Weight(IP): 10

\itemize{
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } list( \link{inline_response_200_33} ) \cr


\item status code : 200 | All coins details information

\item return type : array[InlineResponse20033] 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1CapitalDepositAddressGet } \emph{ Deposit Address (supporting network) (USER_DATA) }
Fetch deposit address with network.  - If network is not send, return with default network of the coin. - You can get network and isDefault in networkList in the response of Get /sapi/v1/capital/config/getall (HMAC SHA256).  Weight(IP): 10

\itemize{
\item \emph{ @param } coin character
\item \emph{ @param } network character
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{InlineResponse20037} \cr


\item status code : 200 | Deposit address info

\item return type : InlineResponse20037 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1CapitalDepositHisrecGet } \emph{ Deposit Historyï¼ˆsupporting networkï¼‰ (USER_DATA) }
Fetch deposit history.  - Please notice the default &#x60;startTime&#x60; and &#x60;endTime&#x60; to make sure that time interval is within 0-90 days. - If both &#x60;startTime&#x60; and &#x60;endTime&#x60; are sent, time between &#x60;startTime&#x60; and &#x60;endTime&#x60; must be less than 90 days.  Weight(IP): 1

\itemize{
\item \emph{ @param } coin character
\item \emph{ @param } status Enum < [0, 6, 1] >
\item \emph{ @param } start.time integer
\item \emph{ @param } end.time integer
\item \emph{ @param } offset integer
\item \emph{ @param } limit integer
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } list( \link{inline_response_200_35} ) \cr


\item status code : 200 | List of deposits

\item return type : array[InlineResponse20035] 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1CapitalWithdrawApplyPost } \emph{ Withdraw (USER_DATA) }
Submit a withdraw request.  - If &#x60;network&#x60; not send, return with default network of the coin. - You can get &#x60;network&#x60; and &#x60;isDefault&#x60; in &#x60;networkList&#x60; of a coin in the response of &#x60;Get /sapi/v1/capital/config/getall (HMAC SHA256)&#x60;.  Weight(IP): 1

\itemize{
\item \emph{ @param } coin character
\item \emph{ @param } address character
\item \emph{ @param } amount numeric
\item \emph{ @param } withdraw.order.id character
\item \emph{ @param } network character
\item \emph{ @param } address.tag character
\item \emph{ @param } transaction.fee.flag character
\item \emph{ @param } name character
\item \emph{ @param } wallet.type integer
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{InlineResponse20034} \cr


\item status code : 200 | Transafer Id

\item return type : InlineResponse20034 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1CapitalWithdrawHistoryGet } \emph{ Withdraw History (supporting network) (USER_DATA) }
Fetch withdraw history.  - &#x60;network&#x60; may not be in the response for old withdraw. - Please notice the default &#x60;startTime&#x60; and &#x60;endTime&#x60; to make sure that time interval is within 0-90 days. - If both &#x60;startTime&#x60; and &#x60;endTime&#x60; are sent, time between &#x60;startTime&#x60; and &#x60;endTime&#x60; must be less than 90 days  Weight(IP): 1

\itemize{
\item \emph{ @param } coin character
\item \emph{ @param } withdraw.order.id character
\item \emph{ @param } status Enum < [0, 1, 2, 3, 4, 5, 6] >
\item \emph{ @param } start.time integer
\item \emph{ @param } end.time integer
\item \emph{ @param } offset integer
\item \emph{ @param } limit integer
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } list( \link{inline_response_200_36} ) \cr


\item status code : 200 | List of withdraw history

\item return type : array[InlineResponse20036] 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1SystemStatusGet } \emph{ System Status (System) }
Fetch system status.  Weight(IP): 1

\itemize{
\item \emph{ @returnType } \link{InlineResponse20032} \cr


\item status code : 200 | OK

\item return type : InlineResponse20032 
\item response headers :

\tabular{ll}{
}
}

}
}

\examples{
\dontrun{
####################  SapiV1AccountApiRestrictionsGet  ####################

library(binanceRapi)
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Get API Key Permission (USER_DATA)
api.instance <- WalletApi$new()

result <- api.instance$SapiV1AccountApiRestrictionsGet(recv.window=var.recv.window)


####################  SapiV1AccountApiTradingStatusGet  ####################

library(binanceRapi)
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Account API Trading Status (USER_DATA)
api.instance <- WalletApi$new()

result <- api.instance$SapiV1AccountApiTradingStatusGet(recv.window=var.recv.window)


####################  SapiV1AccountDisableFastWithdrawSwitchPost  ####################

library(binanceRapi)
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Disable Fast Withdraw Switch (USER_DATA)
api.instance <- WalletApi$new()

result <- api.instance$SapiV1AccountDisableFastWithdrawSwitchPost(recv.window=var.recv.window)


####################  SapiV1AccountEnableFastWithdrawSwitchPost  ####################

library(binanceRapi)
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Enable Fast Withdraw Switch (USER_DATA)
api.instance <- WalletApi$new()

result <- api.instance$SapiV1AccountEnableFastWithdrawSwitchPost(recv.window=var.recv.window)


####################  SapiV1AccountSnapshotGet  ####################

library(binanceRapi)
var.type <- 'type_example' # character | 
var.start.time <- 56 # integer | UTC timestamp in ms
var.end.time <- 56 # integer | UTC timestamp in ms
var.limit <- 5 # integer | 
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Daily Account Snapshot (USER_DATA)
api.instance <- WalletApi$new()

result <- api.instance$SapiV1AccountSnapshotGet(var.type, start.time=var.start.time, end.time=var.end.time, limit=var.limit, recv.window=var.recv.window)


####################  SapiV1AccountStatusGet  ####################

library(binanceRapi)
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Account Status (USER_DATA)
api.instance <- WalletApi$new()

result <- api.instance$SapiV1AccountStatusGet(recv.window=var.recv.window)


####################  SapiV1AssetAssetDetailGet  ####################

library(binanceRapi)
var.asset <- 'BNB' # character | 
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Asset Detail (USER_DATA)
api.instance <- WalletApi$new()

result <- api.instance$SapiV1AssetAssetDetailGet(asset=var.asset, recv.window=var.recv.window)


####################  SapiV1AssetAssetDividendGet  ####################

library(binanceRapi)
var.limit <- '20' # character | 
var.asset <- 'BNB' # character | 
var.start.time <- 56 # integer | UTC timestamp in ms
var.end.time <- 56 # integer | UTC timestamp in ms
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Asset Dividend Record (USER_DATA)
api.instance <- WalletApi$new()

result <- api.instance$SapiV1AssetAssetDividendGet(var.limit, asset=var.asset, start.time=var.start.time, end.time=var.end.time, recv.window=var.recv.window)


####################  SapiV1AssetDribbletGet  ####################

library(binanceRapi)
var.start.time <- 56 # integer | UTC timestamp in ms
var.end.time <- 56 # integer | UTC timestamp in ms
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#DustLog(USER_DATA)
api.instance <- WalletApi$new()

result <- api.instance$SapiV1AssetDribbletGet(start.time=var.start.time, end.time=var.end.time, recv.window=var.recv.window)


####################  SapiV1AssetDustPost  ####################

library(binanceRapi)
var.asset <- 'asset=BTC&asset=USDT' # character | The asset being converted. For example, asset=BTC&asset=USDT
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Dust Transfer (USER_DATA)
api.instance <- WalletApi$new()

result <- api.instance$SapiV1AssetDustPost(var.asset, recv.window=var.recv.window)


####################  SapiV1AssetGetFundingAssetPost  ####################

library(binanceRapi)
var.asset <- 'BNB' # character | 
var.need.btc.valuation <- 'need.btc.valuation_example' # character | 
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Funding Wallet (USER_DATA)
api.instance <- WalletApi$new()

result <- api.instance$SapiV1AssetGetFundingAssetPost(asset=var.asset, need.btc.valuation=var.need.btc.valuation, recv.window=var.recv.window)


####################  SapiV1AssetTradeFeeGet  ####################

library(binanceRapi)
var.symbol <- 'BNBUSDT' # character | Trading symbol, e.g. BNBUSDT
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Trade Fee (USER_DATA)
api.instance <- WalletApi$new()

result <- api.instance$SapiV1AssetTradeFeeGet(symbol=var.symbol, recv.window=var.recv.window)


####################  SapiV1AssetTransferGet  ####################

library(binanceRapi)
var.type <- 'MAIN_C2C' # character | Universal transfer type
var.start.time <- 56 # integer | UTC timestamp in ms
var.end.time <- 56 # integer | UTC timestamp in ms
var.current <- 1 # integer | Current querying page. Start from 1. Default:1
var.size <- 100 # integer | Default:10 Max:100
var.from.symbol <- 'BNBUSDT' # character | Must be sent when type are ISOLATEDMARGIN_MARGIN and ISOLATEDMARGIN_ISOLATEDMARGIN
var.to.symbol <- 'BNBUSDT' # character | Must be sent when type are MARGIN_ISOLATEDMARGIN and ISOLATEDMARGIN_ISOLATEDMARGIN
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Query User Universal Transfer History (USER_DATA)
api.instance <- WalletApi$new()

result <- api.instance$SapiV1AssetTransferGet(var.type, start.time=var.start.time, end.time=var.end.time, current=var.current, size=var.size, from.symbol=var.from.symbol, to.symbol=var.to.symbol, recv.window=var.recv.window)


####################  SapiV1AssetTransferPost  ####################

library(binanceRapi)
var.type <- 'MAIN_C2C' # character | Universal transfer type
var.asset <- 'BTC' # character | 
var.amount <- 1.01 # numeric | 
var.from.symbol <- 'BNBUSDT' # character | Must be sent when type are ISOLATEDMARGIN_MARGIN and ISOLATEDMARGIN_ISOLATEDMARGIN
var.to.symbol <- 'BNBUSDT' # character | Must be sent when type are MARGIN_ISOLATEDMARGIN and ISOLATEDMARGIN_ISOLATEDMARGIN
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#User Universal Transfer (USER_DATA)
api.instance <- WalletApi$new()

result <- api.instance$SapiV1AssetTransferPost(var.type, var.asset, var.amount, from.symbol=var.from.symbol, to.symbol=var.to.symbol, recv.window=var.recv.window)


####################  SapiV1CapitalConfigGetallGet  ####################

library(binanceRapi)
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#All Coins' Information (USER_DATA)
api.instance <- WalletApi$new()

result <- api.instance$SapiV1CapitalConfigGetallGet(recv.window=var.recv.window)


####################  SapiV1CapitalDepositAddressGet  ####################

library(binanceRapi)
var.coin <- 'BNB' # character | Coin name
var.network <- 'ETH' # character | 
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Deposit Address (supporting network) (USER_DATA)
api.instance <- WalletApi$new()

result <- api.instance$SapiV1CapitalDepositAddressGet(var.coin, network=var.network, recv.window=var.recv.window)


####################  SapiV1CapitalDepositHisrecGet  ####################

library(binanceRapi)
var.coin <- 'BNB' # character | Coin name
var.status <- 56 # integer | 0 -> pending\\ 6 -> credited but cannot withdraw\\ 1 -> success
var.start.time <- 56 # integer | UTC timestamp in ms
var.end.time <- 56 # integer | UTC timestamp in ms
var.offset <- 56 # integer | 
var.limit <- 500 # integer | Default 500; max 1000.
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Deposit Historyï¼ˆsupporting networkï¼‰ (USER_DATA)
api.instance <- WalletApi$new()

result <- api.instance$SapiV1CapitalDepositHisrecGet(var.coin, status=var.status, start.time=var.start.time, end.time=var.end.time, offset=var.offset, limit=var.limit, recv.window=var.recv.window)


####################  SapiV1CapitalWithdrawApplyPost  ####################

library(binanceRapi)
var.coin <- 'BNB' # character | Coin name
var.address <- 'address_example' # character | 
var.amount <- 1.01 # numeric | 
var.withdraw.order.id <- 'withdraw.order.id_example' # character | Client id for withdraw
var.network <- 'network_example' # character | Get the value from `GET /sapi/v1/capital/config/getall`
var.address.tag <- 'address.tag_example' # character | Secondary address identifier for coins like XRP,XMR etc.
var.transaction.fee.flag <- FALSE # character | When making internal transfer - `true` ->  returning the fee to the destination account; - `false` -> returning the fee back to the departure account.
var.name <- 'name_example' # character | 
var.wallet.type <- 56 # integer | The wallet type for withdrawï¼Œ0-Spot wallet, 1- Funding wallet. Default is Spot wallet
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Withdraw (USER_DATA)
api.instance <- WalletApi$new()

result <- api.instance$SapiV1CapitalWithdrawApplyPost(var.coin, var.address, var.amount, withdraw.order.id=var.withdraw.order.id, network=var.network, address.tag=var.address.tag, transaction.fee.flag=var.transaction.fee.flag, name=var.name, wallet.type=var.wallet.type, recv.window=var.recv.window)


####################  SapiV1CapitalWithdrawHistoryGet  ####################

library(binanceRapi)
var.coin <- 'BNB' # character | Coin name
var.withdraw.order.id <- 'withdraw.order.id_example' # character | 
var.status <- 56 # integer | 0:Email Sent 1:Cancelled 2:Awaiting Approval 3:Rejected 4:Processing 5:Failure 6:Completed
var.start.time <- 56 # integer | UTC timestamp in ms
var.end.time <- 56 # integer | UTC timestamp in ms
var.offset <- 56 # integer | 
var.limit <- 500 # integer | Default 500; max 1000.
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Withdraw History (supporting network) (USER_DATA)
api.instance <- WalletApi$new()

result <- api.instance$SapiV1CapitalWithdrawHistoryGet(var.coin, withdraw.order.id=var.withdraw.order.id, status=var.status, start.time=var.start.time, end.time=var.end.time, offset=var.offset, limit=var.limit, recv.window=var.recv.window)


####################  SapiV1SystemStatusGet  ####################

library(binanceRapi)

#System Status (System)
api.instance <- WalletApi$new()

result <- api.instance$SapiV1SystemStatusGet()


}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{apiClient}}{Handles the client-server communication.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{WalletApi$new()}}
\item \href{#method-SapiV1AccountApiRestrictionsGet}{\code{WalletApi$SapiV1AccountApiRestrictionsGet()}}
\item \href{#method-SapiV1AccountApiRestrictionsGetWithHttpInfo}{\code{WalletApi$SapiV1AccountApiRestrictionsGetWithHttpInfo()}}
\item \href{#method-SapiV1AccountApiTradingStatusGet}{\code{WalletApi$SapiV1AccountApiTradingStatusGet()}}
\item \href{#method-SapiV1AccountApiTradingStatusGetWithHttpInfo}{\code{WalletApi$SapiV1AccountApiTradingStatusGetWithHttpInfo()}}
\item \href{#method-SapiV1AccountDisableFastWithdrawSwitchPost}{\code{WalletApi$SapiV1AccountDisableFastWithdrawSwitchPost()}}
\item \href{#method-SapiV1AccountDisableFastWithdrawSwitchPostWithHttpInfo}{\code{WalletApi$SapiV1AccountDisableFastWithdrawSwitchPostWithHttpInfo()}}
\item \href{#method-SapiV1AccountEnableFastWithdrawSwitchPost}{\code{WalletApi$SapiV1AccountEnableFastWithdrawSwitchPost()}}
\item \href{#method-SapiV1AccountEnableFastWithdrawSwitchPostWithHttpInfo}{\code{WalletApi$SapiV1AccountEnableFastWithdrawSwitchPostWithHttpInfo()}}
\item \href{#method-SapiV1AccountSnapshotGet}{\code{WalletApi$SapiV1AccountSnapshotGet()}}
\item \href{#method-SapiV1AccountSnapshotGetWithHttpInfo}{\code{WalletApi$SapiV1AccountSnapshotGetWithHttpInfo()}}
\item \href{#method-SapiV1AccountStatusGet}{\code{WalletApi$SapiV1AccountStatusGet()}}
\item \href{#method-SapiV1AccountStatusGetWithHttpInfo}{\code{WalletApi$SapiV1AccountStatusGetWithHttpInfo()}}
\item \href{#method-SapiV1AssetAssetDetailGet}{\code{WalletApi$SapiV1AssetAssetDetailGet()}}
\item \href{#method-SapiV1AssetAssetDetailGetWithHttpInfo}{\code{WalletApi$SapiV1AssetAssetDetailGetWithHttpInfo()}}
\item \href{#method-SapiV1AssetAssetDividendGet}{\code{WalletApi$SapiV1AssetAssetDividendGet()}}
\item \href{#method-SapiV1AssetAssetDividendGetWithHttpInfo}{\code{WalletApi$SapiV1AssetAssetDividendGetWithHttpInfo()}}
\item \href{#method-SapiV1AssetDribbletGet}{\code{WalletApi$SapiV1AssetDribbletGet()}}
\item \href{#method-SapiV1AssetDribbletGetWithHttpInfo}{\code{WalletApi$SapiV1AssetDribbletGetWithHttpInfo()}}
\item \href{#method-SapiV1AssetDustPost}{\code{WalletApi$SapiV1AssetDustPost()}}
\item \href{#method-SapiV1AssetDustPostWithHttpInfo}{\code{WalletApi$SapiV1AssetDustPostWithHttpInfo()}}
\item \href{#method-SapiV1AssetGetFundingAssetPost}{\code{WalletApi$SapiV1AssetGetFundingAssetPost()}}
\item \href{#method-SapiV1AssetGetFundingAssetPostWithHttpInfo}{\code{WalletApi$SapiV1AssetGetFundingAssetPostWithHttpInfo()}}
\item \href{#method-SapiV1AssetTradeFeeGet}{\code{WalletApi$SapiV1AssetTradeFeeGet()}}
\item \href{#method-SapiV1AssetTradeFeeGetWithHttpInfo}{\code{WalletApi$SapiV1AssetTradeFeeGetWithHttpInfo()}}
\item \href{#method-SapiV1AssetTransferGet}{\code{WalletApi$SapiV1AssetTransferGet()}}
\item \href{#method-SapiV1AssetTransferGetWithHttpInfo}{\code{WalletApi$SapiV1AssetTransferGetWithHttpInfo()}}
\item \href{#method-SapiV1AssetTransferPost}{\code{WalletApi$SapiV1AssetTransferPost()}}
\item \href{#method-SapiV1AssetTransferPostWithHttpInfo}{\code{WalletApi$SapiV1AssetTransferPostWithHttpInfo()}}
\item \href{#method-SapiV1CapitalConfigGetallGet}{\code{WalletApi$SapiV1CapitalConfigGetallGet()}}
\item \href{#method-SapiV1CapitalConfigGetallGetWithHttpInfo}{\code{WalletApi$SapiV1CapitalConfigGetallGetWithHttpInfo()}}
\item \href{#method-SapiV1CapitalDepositAddressGet}{\code{WalletApi$SapiV1CapitalDepositAddressGet()}}
\item \href{#method-SapiV1CapitalDepositAddressGetWithHttpInfo}{\code{WalletApi$SapiV1CapitalDepositAddressGetWithHttpInfo()}}
\item \href{#method-SapiV1CapitalDepositHisrecGet}{\code{WalletApi$SapiV1CapitalDepositHisrecGet()}}
\item \href{#method-SapiV1CapitalDepositHisrecGetWithHttpInfo}{\code{WalletApi$SapiV1CapitalDepositHisrecGetWithHttpInfo()}}
\item \href{#method-SapiV1CapitalWithdrawApplyPost}{\code{WalletApi$SapiV1CapitalWithdrawApplyPost()}}
\item \href{#method-SapiV1CapitalWithdrawApplyPostWithHttpInfo}{\code{WalletApi$SapiV1CapitalWithdrawApplyPostWithHttpInfo()}}
\item \href{#method-SapiV1CapitalWithdrawHistoryGet}{\code{WalletApi$SapiV1CapitalWithdrawHistoryGet()}}
\item \href{#method-SapiV1CapitalWithdrawHistoryGetWithHttpInfo}{\code{WalletApi$SapiV1CapitalWithdrawHistoryGetWithHttpInfo()}}
\item \href{#method-SapiV1SystemStatusGet}{\code{WalletApi$SapiV1SystemStatusGet()}}
\item \href{#method-SapiV1SystemStatusGetWithHttpInfo}{\code{WalletApi$SapiV1SystemStatusGetWithHttpInfo()}}
\item \href{#method-clone}{\code{WalletApi$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WalletApi$new(apiClient)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1AccountApiRestrictionsGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1AccountApiRestrictionsGet}{}}}
\subsection{Method \code{SapiV1AccountApiRestrictionsGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WalletApi$SapiV1AccountApiRestrictionsGet(recv.window = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1AccountApiRestrictionsGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1AccountApiRestrictionsGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1AccountApiRestrictionsGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WalletApi$SapiV1AccountApiRestrictionsGetWithHttpInfo(recv.window = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1AccountApiTradingStatusGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1AccountApiTradingStatusGet}{}}}
\subsection{Method \code{SapiV1AccountApiTradingStatusGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WalletApi$SapiV1AccountApiTradingStatusGet(recv.window = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1AccountApiTradingStatusGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1AccountApiTradingStatusGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1AccountApiTradingStatusGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WalletApi$SapiV1AccountApiTradingStatusGetWithHttpInfo(recv.window = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1AccountDisableFastWithdrawSwitchPost"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1AccountDisableFastWithdrawSwitchPost}{}}}
\subsection{Method \code{SapiV1AccountDisableFastWithdrawSwitchPost()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WalletApi$SapiV1AccountDisableFastWithdrawSwitchPost(recv.window = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1AccountDisableFastWithdrawSwitchPostWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1AccountDisableFastWithdrawSwitchPostWithHttpInfo}{}}}
\subsection{Method \code{SapiV1AccountDisableFastWithdrawSwitchPostWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WalletApi$SapiV1AccountDisableFastWithdrawSwitchPostWithHttpInfo(
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1AccountEnableFastWithdrawSwitchPost"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1AccountEnableFastWithdrawSwitchPost}{}}}
\subsection{Method \code{SapiV1AccountEnableFastWithdrawSwitchPost()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WalletApi$SapiV1AccountEnableFastWithdrawSwitchPost(recv.window = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1AccountEnableFastWithdrawSwitchPostWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1AccountEnableFastWithdrawSwitchPostWithHttpInfo}{}}}
\subsection{Method \code{SapiV1AccountEnableFastWithdrawSwitchPostWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WalletApi$SapiV1AccountEnableFastWithdrawSwitchPostWithHttpInfo(
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1AccountSnapshotGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1AccountSnapshotGet}{}}}
\subsection{Method \code{SapiV1AccountSnapshotGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WalletApi$SapiV1AccountSnapshotGet(
  type,
  start.time = NULL,
  end.time = NULL,
  limit = 5,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1AccountSnapshotGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1AccountSnapshotGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1AccountSnapshotGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WalletApi$SapiV1AccountSnapshotGetWithHttpInfo(
  type,
  start.time = NULL,
  end.time = NULL,
  limit = 5,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1AccountStatusGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1AccountStatusGet}{}}}
\subsection{Method \code{SapiV1AccountStatusGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WalletApi$SapiV1AccountStatusGet(recv.window = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1AccountStatusGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1AccountStatusGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1AccountStatusGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WalletApi$SapiV1AccountStatusGetWithHttpInfo(recv.window = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1AssetAssetDetailGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1AssetAssetDetailGet}{}}}
\subsection{Method \code{SapiV1AssetAssetDetailGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WalletApi$SapiV1AssetAssetDetailGet(asset = NULL, recv.window = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1AssetAssetDetailGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1AssetAssetDetailGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1AssetAssetDetailGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WalletApi$SapiV1AssetAssetDetailGetWithHttpInfo(
  asset = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1AssetAssetDividendGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1AssetAssetDividendGet}{}}}
\subsection{Method \code{SapiV1AssetAssetDividendGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WalletApi$SapiV1AssetAssetDividendGet(
  limit,
  asset = NULL,
  start.time = NULL,
  end.time = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1AssetAssetDividendGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1AssetAssetDividendGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1AssetAssetDividendGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WalletApi$SapiV1AssetAssetDividendGetWithHttpInfo(
  limit,
  asset = NULL,
  start.time = NULL,
  end.time = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1AssetDribbletGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1AssetDribbletGet}{}}}
\subsection{Method \code{SapiV1AssetDribbletGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WalletApi$SapiV1AssetDribbletGet(
  start.time = NULL,
  end.time = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1AssetDribbletGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1AssetDribbletGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1AssetDribbletGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WalletApi$SapiV1AssetDribbletGetWithHttpInfo(
  start.time = NULL,
  end.time = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1AssetDustPost"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1AssetDustPost}{}}}
\subsection{Method \code{SapiV1AssetDustPost()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WalletApi$SapiV1AssetDustPost(asset, recv.window = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1AssetDustPostWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1AssetDustPostWithHttpInfo}{}}}
\subsection{Method \code{SapiV1AssetDustPostWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WalletApi$SapiV1AssetDustPostWithHttpInfo(asset, recv.window = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1AssetGetFundingAssetPost"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1AssetGetFundingAssetPost}{}}}
\subsection{Method \code{SapiV1AssetGetFundingAssetPost()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WalletApi$SapiV1AssetGetFundingAssetPost(
  asset = NULL,
  need.btc.valuation = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1AssetGetFundingAssetPostWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1AssetGetFundingAssetPostWithHttpInfo}{}}}
\subsection{Method \code{SapiV1AssetGetFundingAssetPostWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WalletApi$SapiV1AssetGetFundingAssetPostWithHttpInfo(
  asset = NULL,
  need.btc.valuation = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1AssetTradeFeeGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1AssetTradeFeeGet}{}}}
\subsection{Method \code{SapiV1AssetTradeFeeGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WalletApi$SapiV1AssetTradeFeeGet(symbol = NULL, recv.window = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1AssetTradeFeeGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1AssetTradeFeeGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1AssetTradeFeeGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WalletApi$SapiV1AssetTradeFeeGetWithHttpInfo(
  symbol = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1AssetTransferGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1AssetTransferGet}{}}}
\subsection{Method \code{SapiV1AssetTransferGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WalletApi$SapiV1AssetTransferGet(
  type,
  start.time = NULL,
  end.time = NULL,
  current = NULL,
  size = NULL,
  from.symbol = NULL,
  to.symbol = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1AssetTransferGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1AssetTransferGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1AssetTransferGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WalletApi$SapiV1AssetTransferGetWithHttpInfo(
  type,
  start.time = NULL,
  end.time = NULL,
  current = NULL,
  size = NULL,
  from.symbol = NULL,
  to.symbol = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1AssetTransferPost"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1AssetTransferPost}{}}}
\subsection{Method \code{SapiV1AssetTransferPost()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WalletApi$SapiV1AssetTransferPost(
  type,
  asset,
  amount,
  from.symbol = NULL,
  to.symbol = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1AssetTransferPostWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1AssetTransferPostWithHttpInfo}{}}}
\subsection{Method \code{SapiV1AssetTransferPostWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WalletApi$SapiV1AssetTransferPostWithHttpInfo(
  type,
  asset,
  amount,
  from.symbol = NULL,
  to.symbol = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1CapitalConfigGetallGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1CapitalConfigGetallGet}{}}}
\subsection{Method \code{SapiV1CapitalConfigGetallGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WalletApi$SapiV1CapitalConfigGetallGet(recv.window = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1CapitalConfigGetallGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1CapitalConfigGetallGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1CapitalConfigGetallGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WalletApi$SapiV1CapitalConfigGetallGetWithHttpInfo(recv.window = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1CapitalDepositAddressGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1CapitalDepositAddressGet}{}}}
\subsection{Method \code{SapiV1CapitalDepositAddressGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WalletApi$SapiV1CapitalDepositAddressGet(
  coin,
  network = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1CapitalDepositAddressGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1CapitalDepositAddressGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1CapitalDepositAddressGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WalletApi$SapiV1CapitalDepositAddressGetWithHttpInfo(
  coin,
  network = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1CapitalDepositHisrecGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1CapitalDepositHisrecGet}{}}}
\subsection{Method \code{SapiV1CapitalDepositHisrecGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WalletApi$SapiV1CapitalDepositHisrecGet(
  coin,
  status = NULL,
  start.time = NULL,
  end.time = NULL,
  offset = NULL,
  limit = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1CapitalDepositHisrecGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1CapitalDepositHisrecGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1CapitalDepositHisrecGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WalletApi$SapiV1CapitalDepositHisrecGetWithHttpInfo(
  coin,
  status = NULL,
  start.time = NULL,
  end.time = NULL,
  offset = NULL,
  limit = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1CapitalWithdrawApplyPost"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1CapitalWithdrawApplyPost}{}}}
\subsection{Method \code{SapiV1CapitalWithdrawApplyPost()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WalletApi$SapiV1CapitalWithdrawApplyPost(
  coin,
  address,
  amount,
  withdraw.order.id = NULL,
  network = NULL,
  address.tag = NULL,
  transaction.fee.flag = FALSE,
  name = NULL,
  wallet.type = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1CapitalWithdrawApplyPostWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1CapitalWithdrawApplyPostWithHttpInfo}{}}}
\subsection{Method \code{SapiV1CapitalWithdrawApplyPostWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WalletApi$SapiV1CapitalWithdrawApplyPostWithHttpInfo(
  coin,
  address,
  amount,
  withdraw.order.id = NULL,
  network = NULL,
  address.tag = NULL,
  transaction.fee.flag = FALSE,
  name = NULL,
  wallet.type = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1CapitalWithdrawHistoryGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1CapitalWithdrawHistoryGet}{}}}
\subsection{Method \code{SapiV1CapitalWithdrawHistoryGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WalletApi$SapiV1CapitalWithdrawHistoryGet(
  coin,
  withdraw.order.id = NULL,
  status = NULL,
  start.time = NULL,
  end.time = NULL,
  offset = NULL,
  limit = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1CapitalWithdrawHistoryGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1CapitalWithdrawHistoryGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1CapitalWithdrawHistoryGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WalletApi$SapiV1CapitalWithdrawHistoryGetWithHttpInfo(
  coin,
  withdraw.order.id = NULL,
  status = NULL,
  start.time = NULL,
  end.time = NULL,
  offset = NULL,
  limit = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1SystemStatusGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1SystemStatusGet}{}}}
\subsection{Method \code{SapiV1SystemStatusGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WalletApi$SapiV1SystemStatusGet(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1SystemStatusGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1SystemStatusGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1SystemStatusGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WalletApi$SapiV1SystemStatusGetWithHttpInfo(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WalletApi$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
