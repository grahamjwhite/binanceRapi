% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/b_swap_api.R
\docType{class}
\name{BSwapApi}
\alias{BSwapApi}
\title{BSwap operations}
\format{
An \code{R6Class} generator object
}
\description{
binanceRapi.BSwap
}
\section{Methods}{

\describe{
\strong{ SapiV1BswapAddLiquidityPreviewGet } \emph{ Add Liquidity Preview (USER_DATA) }
Calculate expected share amount for adding liquidity in single or dual token.  Weight(IP): 150

\itemize{
\item \emph{ @param } pool.id integer
\item \emph{ @param } type Enum < [SINGLE, COMBINATION] >
\item \emph{ @param } quote.asset character
\item \emph{ @param } quote.qty numeric
\item \emph{ @param } timestamp integer
\item \emph{ @param } signature character
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{OneOfbswapAddLiquidityPreviewCombinationbswapAddLiquidityPreviewSingle} \cr


\item status code : 200 | Add Liquidity Preview

\item return type : OneOfbswapAddLiquidityPreviewCombinationbswapAddLiquidityPreviewSingle 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1BswapLiquidityAddPost } \emph{ Add Liquidity (TRADE) }
Add liquidity to a pool.  Weight(UID): 1000 (Additional: 3 times one second)

\itemize{
\item \emph{ @param } pool.id integer
\item \emph{ @param } asset character
\item \emph{ @param } quantity numeric
\item \emph{ @param } timestamp integer
\item \emph{ @param } signature character
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{InlineResponse200105} \cr


\item status code : 200 | Operation Id

\item return type : InlineResponse200105 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1BswapLiquidityGet } \emph{ Liquidity information of a pool (USER_DATA) }
Get liquidity information and user share of a pool.  Weight(IP):\\ &#x60;1&#x60;  for one pool;\\ &#x60;10&#x60; when the poolId parameter is omitted;

\itemize{
\item \emph{ @param } timestamp integer
\item \emph{ @param } signature character
\item \emph{ @param } pool.id integer
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } list( \link{inline_response_200_104} ) \cr


\item status code : 200 | Pool Liquidation information

\item return type : array[InlineResponse200104] 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1BswapLiquidityOpsGet } \emph{ Liquidity Operation Record (USER_DATA) }
Get liquidity operation (add/remove) records.  Weight(UID): 3000

\itemize{
\item \emph{ @param } timestamp integer
\item \emph{ @param } signature character
\item \emph{ @param } operation.id integer
\item \emph{ @param } pool.id integer
\item \emph{ @param } operation Enum < [ADD, REMOVE] >
\item \emph{ @param } start.time integer
\item \emph{ @param } end.time integer
\item \emph{ @param } limit integer
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } list( \link{inline_response_200_106} ) \cr


\item status code : 200 | Liquidity Operation Record

\item return type : array[InlineResponse200106] 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1BswapLiquidityRemovePost } \emph{ Remove Liquidity (TRADE) }
Remove liquidity from a pool, &#x60;type&#x60; include &#x60;SINGLE&#x60; and &#x60;COMBINATION&#x60;, asset is mandatory for single asset removal  Weight(UID): 1000 (Additional: 3 times one second)

\itemize{
\item \emph{ @param } pool.id integer
\item \emph{ @param } type Enum < [SINGLE, COMBINATION] >
\item \emph{ @param } share.amount numeric
\item \emph{ @param } timestamp integer
\item \emph{ @param } signature character
\item \emph{ @param } asset character
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{InlineResponse200105} \cr


\item status code : 200 | Operation Id

\item return type : InlineResponse200105 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1BswapPoolConfigureGet } \emph{ Pool Configure (USER_DATA) }
Weight(IP): 150

\itemize{
\item \emph{ @param } timestamp integer
\item \emph{ @param } signature character
\item \emph{ @param } pool.id integer
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } list( \link{inline_response_200_110} ) \cr


\item status code : 200 | Pool Information

\item return type : array[InlineResponse200110] 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1BswapPoolsGet } \emph{ List All Swap Pools (MARKET_DATA) }
Get metadata about all swap pools.  Weight(IP): 1

\itemize{
\item \emph{ @returnType } list( \link{inline_response_200_103} ) \cr


\item status code : 200 | List of Swap Pools

\item return type : array[InlineResponse200103] 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1BswapQuoteGet } \emph{ Request Quote (USER_DATA) }
Request a quote for swap quote asset (selling asset) for base asset (buying asset), essentially price/exchange rates.  quoteQty is quantity of quote asset (to sell).  Please be noted the quote is for reference only, the actual price will change as the liquidity changes, it&#39;s recommended to swap immediate after request a quote for slippage prevention.  Weight(UID): 150

\itemize{
\item \emph{ @param } quote.asset character
\item \emph{ @param } base.asset character
\item \emph{ @param } quote.qty numeric
\item \emph{ @param } timestamp integer
\item \emph{ @param } signature character
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{InlineResponse200107} \cr


\item status code : 200 | Quote Info

\item return type : InlineResponse200107 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1BswapRemoveLiquidityPreviewGet } \emph{ Remove Liquidity Preview (USER_DATA) }
Calculate the expected asset amount of single token redemption or dual token redemption.  Weight(IP): 150

\itemize{
\item \emph{ @param } pool.id integer
\item \emph{ @param } type Enum < [SINGLE, COMBINATION] >
\item \emph{ @param } quote.asset character
\item \emph{ @param } share.amount numeric
\item \emph{ @param } timestamp integer
\item \emph{ @param } signature character
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{OneOfbswapRmvLiquidityPreviewCombinationbswapRmvLiquidityPreviewSingle} \cr


\item status code : 200 | Remove Liquidity Preview

\item return type : OneOfbswapRmvLiquidityPreviewCombinationbswapRmvLiquidityPreviewSingle 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1BswapSwapGet } \emph{ Swap History (USER_DATA) }
Get swap history.  Weight(UID): 3000

\itemize{
\item \emph{ @param } timestamp integer
\item \emph{ @param } signature character
\item \emph{ @param } swap.id integer
\item \emph{ @param } start.time integer
\item \emph{ @param } end.time integer
\item \emph{ @param } status Enum < [0, 1, 2] >
\item \emph{ @param } quote.asset character
\item \emph{ @param } base.asset character
\item \emph{ @param } limit integer
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } list( \link{inline_response_200_108} ) \cr


\item status code : 200 | Swap History

\item return type : array[InlineResponse200108] 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1BswapSwapPost } \emph{ Swap (TRADE) }
Swap &#x60;quoteAsset&#x60; for &#x60;baseAsset&#x60;.  Weight(UID): 1000 (Additional: 3 times one second)

\itemize{
\item \emph{ @param } quote.asset character
\item \emph{ @param } base.asset character
\item \emph{ @param } quote.qty numeric
\item \emph{ @param } timestamp integer
\item \emph{ @param } signature character
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{InlineResponse200109} \cr


\item status code : 200 | Swap Id

\item return type : InlineResponse200109 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

}
}

\examples{
\dontrun{
####################  SapiV1BswapAddLiquidityPreviewGet  ####################

library(binanceRapi)
var.pool.id <- 2 # integer | 
var.type <- 'SINGLE' # character | \"SINGLE\" for adding a single token;\"COMBINATION\" for adding dual tokens
var.quote.asset <- 'USDT' # character | 
var.quote.qty <- 3.4 # numeric | 
var.timestamp <- 56 # integer | UTC timestamp in ms
var.signature <- 'signature_example' # character | Signature
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Add Liquidity Preview (USER_DATA)
api.instance <- BSwapApi$new()

#Configure API key authorization: ApiKeyAuth
api.instance$apiClient$apiKeys['X-MBX-APIKEY'] <- 'TODO_YOUR_API_KEY';

result <- api.instance$SapiV1BswapAddLiquidityPreviewGet(var.pool.id, var.type, var.quote.asset, var.quote.qty, var.timestamp, var.signature, recv.window=var.recv.window)


####################  SapiV1BswapLiquidityAddPost  ####################

library(binanceRapi)
var.pool.id <- 56 # integer | 
var.asset <- 'BTC' # character | 
var.quantity <- 3.4 # numeric | 
var.timestamp <- 56 # integer | UTC timestamp in ms
var.signature <- 'signature_example' # character | Signature
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Add Liquidity (TRADE)
api.instance <- BSwapApi$new()

#Configure API key authorization: ApiKeyAuth
api.instance$apiClient$apiKeys['X-MBX-APIKEY'] <- 'TODO_YOUR_API_KEY';

result <- api.instance$SapiV1BswapLiquidityAddPost(var.pool.id, var.asset, var.quantity, var.timestamp, var.signature, recv.window=var.recv.window)


####################  SapiV1BswapLiquidityGet  ####################

library(binanceRapi)
var.timestamp <- 56 # integer | UTC timestamp in ms
var.signature <- 'signature_example' # character | Signature
var.pool.id <- 56 # integer | 
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Liquidity information of a pool (USER_DATA)
api.instance <- BSwapApi$new()

#Configure API key authorization: ApiKeyAuth
api.instance$apiClient$apiKeys['X-MBX-APIKEY'] <- 'TODO_YOUR_API_KEY';

result <- api.instance$SapiV1BswapLiquidityGet(var.timestamp, var.signature, pool.id=var.pool.id, recv.window=var.recv.window)


####################  SapiV1BswapLiquidityOpsGet  ####################

library(binanceRapi)
var.timestamp <- 56 # integer | UTC timestamp in ms
var.signature <- 'signature_example' # character | Signature
var.operation.id <- 56 # integer | 
var.pool.id <- 56 # integer | 
var.operation <- 'operation_example' # character | 
var.start.time <- 56 # integer | UTC timestamp in ms
var.end.time <- 56 # integer | UTC timestamp in ms
var.limit <- 500 # integer | Default 500; max 1000.
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Liquidity Operation Record (USER_DATA)
api.instance <- BSwapApi$new()

#Configure API key authorization: ApiKeyAuth
api.instance$apiClient$apiKeys['X-MBX-APIKEY'] <- 'TODO_YOUR_API_KEY';

result <- api.instance$SapiV1BswapLiquidityOpsGet(var.timestamp, var.signature, operation.id=var.operation.id, pool.id=var.pool.id, operation=var.operation, start.time=var.start.time, end.time=var.end.time, limit=var.limit, recv.window=var.recv.window)


####################  SapiV1BswapLiquidityRemovePost  ####################

library(binanceRapi)
var.pool.id <- 56 # integer | 
var.type <- 'SINGLE' # character | Can be `SINGLE` for single asset removal, `COMBINATION` for combination of all coins removal
var.share.amount <- 3.4 # numeric | 
var.timestamp <- 56 # integer | UTC timestamp in ms
var.signature <- 'signature_example' # character | Signature
var.asset <- 'BNB' # character | Mandatory for single asset removal
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Remove Liquidity (TRADE)
api.instance <- BSwapApi$new()

#Configure API key authorization: ApiKeyAuth
api.instance$apiClient$apiKeys['X-MBX-APIKEY'] <- 'TODO_YOUR_API_KEY';

result <- api.instance$SapiV1BswapLiquidityRemovePost(var.pool.id, var.type, var.share.amount, var.timestamp, var.signature, asset=var.asset, recv.window=var.recv.window)


####################  SapiV1BswapPoolConfigureGet  ####################

library(binanceRapi)
var.timestamp <- 56 # integer | UTC timestamp in ms
var.signature <- 'signature_example' # character | Signature
var.pool.id <- 2 # integer | 
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Pool Configure (USER_DATA)
api.instance <- BSwapApi$new()

#Configure API key authorization: ApiKeyAuth
api.instance$apiClient$apiKeys['X-MBX-APIKEY'] <- 'TODO_YOUR_API_KEY';

result <- api.instance$SapiV1BswapPoolConfigureGet(var.timestamp, var.signature, pool.id=var.pool.id, recv.window=var.recv.window)


####################  SapiV1BswapPoolsGet  ####################

library(binanceRapi)

#List All Swap Pools (MARKET_DATA)
api.instance <- BSwapApi$new()

#Configure API key authorization: ApiKeyAuth
api.instance$apiClient$apiKeys['X-MBX-APIKEY'] <- 'TODO_YOUR_API_KEY';

result <- api.instance$SapiV1BswapPoolsGet()


####################  SapiV1BswapQuoteGet  ####################

library(binanceRapi)
var.quote.asset <- 'USDT' # character | 
var.base.asset <- 'BUSD' # character | 
var.quote.qty <- 3.4 # numeric | 
var.timestamp <- 56 # integer | UTC timestamp in ms
var.signature <- 'signature_example' # character | Signature
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Request Quote (USER_DATA)
api.instance <- BSwapApi$new()

#Configure API key authorization: ApiKeyAuth
api.instance$apiClient$apiKeys['X-MBX-APIKEY'] <- 'TODO_YOUR_API_KEY';

result <- api.instance$SapiV1BswapQuoteGet(var.quote.asset, var.base.asset, var.quote.qty, var.timestamp, var.signature, recv.window=var.recv.window)


####################  SapiV1BswapRemoveLiquidityPreviewGet  ####################

library(binanceRapi)
var.pool.id <- 2 # integer | 
var.type <- 'SINGLE' # character | Type is \"SINGLE\", remove and obtain a single token;Type is \"COMBINATION\", remove and obtain dual token.
var.quote.asset <- 'USDT' # character | 
var.share.amount <- 3.4 # numeric | 
var.timestamp <- 56 # integer | UTC timestamp in ms
var.signature <- 'signature_example' # character | Signature
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Remove Liquidity Preview (USER_DATA)
api.instance <- BSwapApi$new()

#Configure API key authorization: ApiKeyAuth
api.instance$apiClient$apiKeys['X-MBX-APIKEY'] <- 'TODO_YOUR_API_KEY';

result <- api.instance$SapiV1BswapRemoveLiquidityPreviewGet(var.pool.id, var.type, var.quote.asset, var.share.amount, var.timestamp, var.signature, recv.window=var.recv.window)


####################  SapiV1BswapSwapGet  ####################

library(binanceRapi)
var.timestamp <- 56 # integer | UTC timestamp in ms
var.signature <- 'signature_example' # character | Signature
var.swap.id <- 56 # integer | 
var.start.time <- 56 # integer | UTC timestamp in ms
var.end.time <- 56 # integer | UTC timestamp in ms
var.status <- 56 # integer | 0: pending for swap, 1: success, 2: failed
var.quote.asset <- 'USDT' # character | 
var.base.asset <- 'BUSD' # character | 
var.limit <- 56 # integer | default 3, max 100
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Swap History (USER_DATA)
api.instance <- BSwapApi$new()

#Configure API key authorization: ApiKeyAuth
api.instance$apiClient$apiKeys['X-MBX-APIKEY'] <- 'TODO_YOUR_API_KEY';

result <- api.instance$SapiV1BswapSwapGet(var.timestamp, var.signature, swap.id=var.swap.id, start.time=var.start.time, end.time=var.end.time, status=var.status, quote.asset=var.quote.asset, base.asset=var.base.asset, limit=var.limit, recv.window=var.recv.window)


####################  SapiV1BswapSwapPost  ####################

library(binanceRapi)
var.quote.asset <- 'USDT' # character | 
var.base.asset <- 'BUSD' # character | 
var.quote.qty <- 3.4 # numeric | 
var.timestamp <- 56 # integer | UTC timestamp in ms
var.signature <- 'signature_example' # character | Signature
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Swap (TRADE)
api.instance <- BSwapApi$new()

#Configure API key authorization: ApiKeyAuth
api.instance$apiClient$apiKeys['X-MBX-APIKEY'] <- 'TODO_YOUR_API_KEY';

result <- api.instance$SapiV1BswapSwapPost(var.quote.asset, var.base.asset, var.quote.qty, var.timestamp, var.signature, recv.window=var.recv.window)


}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{apiClient}}{Handles the client-server communication.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{BSwapApi$new()}}
\item \href{#method-SapiV1BswapAddLiquidityPreviewGet}{\code{BSwapApi$SapiV1BswapAddLiquidityPreviewGet()}}
\item \href{#method-SapiV1BswapAddLiquidityPreviewGetWithHttpInfo}{\code{BSwapApi$SapiV1BswapAddLiquidityPreviewGetWithHttpInfo()}}
\item \href{#method-SapiV1BswapLiquidityAddPost}{\code{BSwapApi$SapiV1BswapLiquidityAddPost()}}
\item \href{#method-SapiV1BswapLiquidityAddPostWithHttpInfo}{\code{BSwapApi$SapiV1BswapLiquidityAddPostWithHttpInfo()}}
\item \href{#method-SapiV1BswapLiquidityGet}{\code{BSwapApi$SapiV1BswapLiquidityGet()}}
\item \href{#method-SapiV1BswapLiquidityGetWithHttpInfo}{\code{BSwapApi$SapiV1BswapLiquidityGetWithHttpInfo()}}
\item \href{#method-SapiV1BswapLiquidityOpsGet}{\code{BSwapApi$SapiV1BswapLiquidityOpsGet()}}
\item \href{#method-SapiV1BswapLiquidityOpsGetWithHttpInfo}{\code{BSwapApi$SapiV1BswapLiquidityOpsGetWithHttpInfo()}}
\item \href{#method-SapiV1BswapLiquidityRemovePost}{\code{BSwapApi$SapiV1BswapLiquidityRemovePost()}}
\item \href{#method-SapiV1BswapLiquidityRemovePostWithHttpInfo}{\code{BSwapApi$SapiV1BswapLiquidityRemovePostWithHttpInfo()}}
\item \href{#method-SapiV1BswapPoolConfigureGet}{\code{BSwapApi$SapiV1BswapPoolConfigureGet()}}
\item \href{#method-SapiV1BswapPoolConfigureGetWithHttpInfo}{\code{BSwapApi$SapiV1BswapPoolConfigureGetWithHttpInfo()}}
\item \href{#method-SapiV1BswapPoolsGet}{\code{BSwapApi$SapiV1BswapPoolsGet()}}
\item \href{#method-SapiV1BswapPoolsGetWithHttpInfo}{\code{BSwapApi$SapiV1BswapPoolsGetWithHttpInfo()}}
\item \href{#method-SapiV1BswapQuoteGet}{\code{BSwapApi$SapiV1BswapQuoteGet()}}
\item \href{#method-SapiV1BswapQuoteGetWithHttpInfo}{\code{BSwapApi$SapiV1BswapQuoteGetWithHttpInfo()}}
\item \href{#method-SapiV1BswapRemoveLiquidityPreviewGet}{\code{BSwapApi$SapiV1BswapRemoveLiquidityPreviewGet()}}
\item \href{#method-SapiV1BswapRemoveLiquidityPreviewGetWithHttpInfo}{\code{BSwapApi$SapiV1BswapRemoveLiquidityPreviewGetWithHttpInfo()}}
\item \href{#method-SapiV1BswapSwapGet}{\code{BSwapApi$SapiV1BswapSwapGet()}}
\item \href{#method-SapiV1BswapSwapGetWithHttpInfo}{\code{BSwapApi$SapiV1BswapSwapGetWithHttpInfo()}}
\item \href{#method-SapiV1BswapSwapPost}{\code{BSwapApi$SapiV1BswapSwapPost()}}
\item \href{#method-SapiV1BswapSwapPostWithHttpInfo}{\code{BSwapApi$SapiV1BswapSwapPostWithHttpInfo()}}
\item \href{#method-clone}{\code{BSwapApi$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BSwapApi$new(apiClient)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1BswapAddLiquidityPreviewGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1BswapAddLiquidityPreviewGet}{}}}
\subsection{Method \code{SapiV1BswapAddLiquidityPreviewGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BSwapApi$SapiV1BswapAddLiquidityPreviewGet(
  pool.id,
  type,
  quote.asset,
  quote.qty,
  timestamp,
  signature,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1BswapAddLiquidityPreviewGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1BswapAddLiquidityPreviewGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1BswapAddLiquidityPreviewGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BSwapApi$SapiV1BswapAddLiquidityPreviewGetWithHttpInfo(
  pool.id,
  type,
  quote.asset,
  quote.qty,
  timestamp,
  signature,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1BswapLiquidityAddPost"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1BswapLiquidityAddPost}{}}}
\subsection{Method \code{SapiV1BswapLiquidityAddPost()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BSwapApi$SapiV1BswapLiquidityAddPost(
  pool.id,
  asset,
  quantity,
  timestamp,
  signature,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1BswapLiquidityAddPostWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1BswapLiquidityAddPostWithHttpInfo}{}}}
\subsection{Method \code{SapiV1BswapLiquidityAddPostWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BSwapApi$SapiV1BswapLiquidityAddPostWithHttpInfo(
  pool.id,
  asset,
  quantity,
  timestamp,
  signature,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1BswapLiquidityGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1BswapLiquidityGet}{}}}
\subsection{Method \code{SapiV1BswapLiquidityGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BSwapApi$SapiV1BswapLiquidityGet(
  timestamp,
  signature,
  pool.id = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1BswapLiquidityGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1BswapLiquidityGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1BswapLiquidityGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BSwapApi$SapiV1BswapLiquidityGetWithHttpInfo(
  timestamp,
  signature,
  pool.id = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1BswapLiquidityOpsGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1BswapLiquidityOpsGet}{}}}
\subsection{Method \code{SapiV1BswapLiquidityOpsGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BSwapApi$SapiV1BswapLiquidityOpsGet(
  timestamp,
  signature,
  operation.id = NULL,
  pool.id = NULL,
  operation = NULL,
  start.time = NULL,
  end.time = NULL,
  limit = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1BswapLiquidityOpsGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1BswapLiquidityOpsGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1BswapLiquidityOpsGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BSwapApi$SapiV1BswapLiquidityOpsGetWithHttpInfo(
  timestamp,
  signature,
  operation.id = NULL,
  pool.id = NULL,
  operation = NULL,
  start.time = NULL,
  end.time = NULL,
  limit = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1BswapLiquidityRemovePost"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1BswapLiquidityRemovePost}{}}}
\subsection{Method \code{SapiV1BswapLiquidityRemovePost()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BSwapApi$SapiV1BswapLiquidityRemovePost(
  pool.id,
  type,
  share.amount,
  timestamp,
  signature,
  asset = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1BswapLiquidityRemovePostWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1BswapLiquidityRemovePostWithHttpInfo}{}}}
\subsection{Method \code{SapiV1BswapLiquidityRemovePostWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BSwapApi$SapiV1BswapLiquidityRemovePostWithHttpInfo(
  pool.id,
  type,
  share.amount,
  timestamp,
  signature,
  asset = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1BswapPoolConfigureGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1BswapPoolConfigureGet}{}}}
\subsection{Method \code{SapiV1BswapPoolConfigureGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BSwapApi$SapiV1BswapPoolConfigureGet(
  timestamp,
  signature,
  pool.id = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1BswapPoolConfigureGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1BswapPoolConfigureGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1BswapPoolConfigureGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BSwapApi$SapiV1BswapPoolConfigureGetWithHttpInfo(
  timestamp,
  signature,
  pool.id = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1BswapPoolsGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1BswapPoolsGet}{}}}
\subsection{Method \code{SapiV1BswapPoolsGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BSwapApi$SapiV1BswapPoolsGet(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1BswapPoolsGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1BswapPoolsGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1BswapPoolsGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BSwapApi$SapiV1BswapPoolsGetWithHttpInfo(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1BswapQuoteGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1BswapQuoteGet}{}}}
\subsection{Method \code{SapiV1BswapQuoteGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BSwapApi$SapiV1BswapQuoteGet(
  quote.asset,
  base.asset,
  quote.qty,
  timestamp,
  signature,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1BswapQuoteGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1BswapQuoteGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1BswapQuoteGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BSwapApi$SapiV1BswapQuoteGetWithHttpInfo(
  quote.asset,
  base.asset,
  quote.qty,
  timestamp,
  signature,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1BswapRemoveLiquidityPreviewGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1BswapRemoveLiquidityPreviewGet}{}}}
\subsection{Method \code{SapiV1BswapRemoveLiquidityPreviewGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BSwapApi$SapiV1BswapRemoveLiquidityPreviewGet(
  pool.id,
  type,
  quote.asset,
  share.amount,
  timestamp,
  signature,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1BswapRemoveLiquidityPreviewGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1BswapRemoveLiquidityPreviewGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1BswapRemoveLiquidityPreviewGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BSwapApi$SapiV1BswapRemoveLiquidityPreviewGetWithHttpInfo(
  pool.id,
  type,
  quote.asset,
  share.amount,
  timestamp,
  signature,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1BswapSwapGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1BswapSwapGet}{}}}
\subsection{Method \code{SapiV1BswapSwapGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BSwapApi$SapiV1BswapSwapGet(
  timestamp,
  signature,
  swap.id = NULL,
  start.time = NULL,
  end.time = NULL,
  status = NULL,
  quote.asset = NULL,
  base.asset = NULL,
  limit = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1BswapSwapGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1BswapSwapGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1BswapSwapGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BSwapApi$SapiV1BswapSwapGetWithHttpInfo(
  timestamp,
  signature,
  swap.id = NULL,
  start.time = NULL,
  end.time = NULL,
  status = NULL,
  quote.asset = NULL,
  base.asset = NULL,
  limit = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1BswapSwapPost"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1BswapSwapPost}{}}}
\subsection{Method \code{SapiV1BswapSwapPost()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BSwapApi$SapiV1BswapSwapPost(
  quote.asset,
  base.asset,
  quote.qty,
  timestamp,
  signature,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1BswapSwapPostWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1BswapSwapPostWithHttpInfo}{}}}
\subsection{Method \code{SapiV1BswapSwapPostWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BSwapApi$SapiV1BswapSwapPostWithHttpInfo(
  quote.asset,
  base.asset,
  quote.qty,
  timestamp,
  signature,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BSwapApi$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
