% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/market_api.R
\docType{class}
\name{MarketApi}
\alias{MarketApi}
\title{Market operations}
\format{
An \code{R6Class} generator object
}
\description{
binanceRapi.Market
}
\section{Methods}{

\describe{
\strong{ ApiV3AggTradesGet } \emph{ Compressed/Aggregate Trades List }
Get compressed, aggregate trades. Trades that fill at the time, from the same order, with the same price will have the quantity aggregated. - If &#x60;startTime&#x60; and &#x60;endTime&#x60; are sent, time between startTime and endTime must be less than 1 hour. - If &#x60;fromId&#x60;, &#x60;startTime&#x60;, and &#x60;endTime&#x60; are not sent, the most recent aggregate trades will be returned.  Weight(IP): 1

\itemize{
\item \emph{ @param } symbol character
\item \emph{ @param } from.id integer
\item \emph{ @param } start.time integer
\item \emph{ @param } end.time integer
\item \emph{ @param } limit integer
\item \emph{ @returnType } list( \link{aggTrade} ) \cr


\item status code : 200 | Trade list

\item return type : array[AggTrade] 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ ApiV3AvgPriceGet } \emph{ Current Average Price }
Current average price for a symbol.  Weight(IP): 1

\itemize{
\item \emph{ @param } symbol character
\item \emph{ @returnType } \link{InlineResponse2003} \cr


\item status code : 200 | Average price

\item return type : InlineResponse2003 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ ApiV3DepthGet } \emph{ Order Book }
| Limit               | Weight(IP)  | |---------------------|-------------| | 5, 10, 20, 50, 100  | 1           | | 500                 | 5           | | 1000                | 10          | | 5000                | 50          |

\itemize{
\item \emph{ @param } symbol character
\item \emph{ @param } limit Enum < [5, 10, 20, 50, 100, 500, 1000, 5000] >
\item \emph{ @returnType } \link{InlineResponse2002} \cr


\item status code : 200 | Order book

\item return type : InlineResponse2002 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ ApiV3ExchangeInfoGet } \emph{ Exchange Information }
Current exchange trading rules and symbol information  - If any symbol provided in either symbol or symbols do not exist, the endpoint will throw an error.  Weight(IP): 10

\itemize{
\item \emph{ @param } symbol character
\item \emph{ @param } array.symbols character
\item \emph{ @returnType } \link{InlineResponse2001} \cr


\item status code : 200 | Current exchange trading rules and symbol information

\item return type : InlineResponse2001 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ ApiV3HistoricalTradesGet } \emph{ Old Trade Lookup }
Get older market trades.  Weight(IP): 5

\itemize{
\item \emph{ @param } symbol character
\item \emph{ @param } limit integer
\item \emph{ @param } from.id integer
\item \emph{ @returnType } list( \link{trade} ) \cr


\item status code : 200 | Trade list

\item return type : array[Trade] 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ ApiV3KlinesGet } \emph{ Kline/Candlestick Data }
Kline/candlestick bars for a symbol.\\ Klines are uniquely identified by their open time.  - If &#x60;startTime&#x60; and &#x60;endTime&#x60; are not sent, the most recent klines are returned.  Weight(IP): 1

\itemize{
\item \emph{ @param } symbol character
\item \emph{ @param } interval Enum < [1m, 3m, 5m, 15m, 30m, 1h, 2h, 4h, 6h, 8h, 12h, 1d, 3d, 1w, 1M] >
\item \emph{ @param } start.time integer
\item \emph{ @param } end.time integer
\item \emph{ @param } limit integer
\item \emph{ @returnType } list( \link{array} ) \cr


\item status code : 200 | Kline data

\item return type : array[array[OneOflongstring]] 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ ApiV3PingGet } \emph{ Test Connectivity }
Test connectivity to the Rest API.  Weight(IP): 1

\itemize{


\item status code : 200 | OK

\item return type : object 
\item response headers :

\tabular{ll}{
}
}

\strong{ ApiV3Ticker24hrGet } \emph{ 24hr Ticker Price Change Statistics }
24 hour rolling window price change statistics. Careful when accessing this with no symbol.  - If the symbol is not sent, tickers for all symbols will be returned in an array.  Weight(IP):\\ &#x60;1&#x60; for a single symbol;\\ &#x60;40&#x60; when the symbol parameter is omitted;

\itemize{
\item \emph{ @param } symbol character
\item \emph{ @returnType } \link{OneOftickertickerList} \cr


\item status code : 200 | 24hr ticker

\item return type : OneOftickertickerList 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ ApiV3TickerBookTickerGet } \emph{ Symbol Order Book Ticker }
Best price/qty on the order book for a symbol or symbols.  - If the symbol is not sent, bookTickers for all symbols will be returned in an array.  Weight(IP):\\ &#x60;1&#x60; for a single symbol;\\ &#x60;2&#x60; when the symbol parameter is omitted;

\itemize{
\item \emph{ @param } symbol character
\item \emph{ @returnType } \link{OneOfbookTickerbookTickerList} \cr


\item status code : 200 | Order book ticker

\item return type : OneOfbookTickerbookTickerList 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ ApiV3TickerPriceGet } \emph{ Symbol Price Ticker }
Latest price for a symbol or symbols.  - If the symbol is not sent, prices for all symbols will be returned in an array.  Weight(IP):\\ &#x60;1&#x60; for a single symbol;\\ &#x60;2&#x60; when the symbol parameter is omitted;

\itemize{
\item \emph{ @param } symbol character
\item \emph{ @returnType } \link{OneOfpriceTickerpriceTickerList} \cr


\item status code : 200 | Price ticker

\item return type : OneOfpriceTickerpriceTickerList 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ ApiV3TimeGet } \emph{ Check Server Time }
Test connectivity to the Rest API and get the current server time.  Weight(IP): 1

\itemize{
\item \emph{ @returnType } \link{InlineResponse200} \cr


\item status code : 200 | Binance server UTC timestamp

\item return type : InlineResponse200 
\item response headers :

\tabular{ll}{
}
}

\strong{ ApiV3TradesGet } \emph{ Recent Trades List }
Get recent trades.  Weight(IP): 1

\itemize{
\item \emph{ @param } symbol character
\item \emph{ @param } limit integer
\item \emph{ @returnType } list( \link{trade} ) \cr


\item status code : 200 | Trade list

\item return type : array[Trade] 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

}
}

\examples{
\dontrun{
####################  ApiV3AggTradesGet  ####################

library(binanceRapi)
var.symbol <- 'BNBUSDT' # character | Trading symbol, e.g. BNBUSDT
var.from.id <- 56 # integer | Trade id to fetch from. Default gets most recent trades.
var.start.time <- 56 # integer | UTC timestamp in ms
var.end.time <- 56 # integer | UTC timestamp in ms
var.limit <- 500 # integer | Default 500; max 1000.

#Compressed/Aggregate Trades List
api.instance <- MarketApi$new()

result <- api.instance$ApiV3AggTradesGet(var.symbol, from.id=var.from.id, start.time=var.start.time, end.time=var.end.time, limit=var.limit)


####################  ApiV3AvgPriceGet  ####################

library(binanceRapi)
var.symbol <- 'BNBUSDT' # character | Trading symbol, e.g. BNBUSDT

#Current Average Price
api.instance <- MarketApi$new()

result <- api.instance$ApiV3AvgPriceGet(var.symbol)


####################  ApiV3DepthGet  ####################

library(binanceRapi)
var.symbol <- 'BNBUSDT' # character | Trading symbol, e.g. BNBUSDT
var.limit <- 100 # integer | 

#Order Book
api.instance <- MarketApi$new()

result <- api.instance$ApiV3DepthGet(var.symbol, limit=var.limit)


####################  ApiV3ExchangeInfoGet  ####################

library(binanceRapi)
var.symbol <- 'BNBUSDT' # character | Trading symbol, e.g. BNBUSDT
var.array.symbols <- '[\"BTCUSDT\",\"BNBBTC\"]' # character | 

#Exchange Information
api.instance <- MarketApi$new()

result <- api.instance$ApiV3ExchangeInfoGet(symbol=var.symbol, array.symbols=var.array.symbols)


####################  ApiV3HistoricalTradesGet  ####################

library(binanceRapi)
var.symbol <- 'BNBUSDT' # character | Trading symbol, e.g. BNBUSDT
var.limit <- 500 # integer | Default 500; max 1000.
var.from.id <- 56 # integer | Trade id to fetch from. Default gets most recent trades.

#Old Trade Lookup
api.instance <- MarketApi$new()

#Configure API key authorization: ApiKeyAuth
api.instance$apiClient$apiKeys['X-MBX-APIKEY'] <- 'TODO_YOUR_API_KEY';

result <- api.instance$ApiV3HistoricalTradesGet(var.symbol, limit=var.limit, from.id=var.from.id)


####################  ApiV3KlinesGet  ####################

library(binanceRapi)
var.symbol <- 'BNBUSDT' # character | Trading symbol, e.g. BNBUSDT
var.interval <- 'interval_example' # character | kline intervals
var.start.time <- 56 # integer | UTC timestamp in ms
var.end.time <- 56 # integer | UTC timestamp in ms
var.limit <- 500 # integer | Default 500; max 1000.

#Kline/Candlestick Data
api.instance <- MarketApi$new()

result <- api.instance$ApiV3KlinesGet(var.symbol, var.interval, start.time=var.start.time, end.time=var.end.time, limit=var.limit)


####################  ApiV3PingGet  ####################

library(binanceRapi)

#Test Connectivity
api.instance <- MarketApi$new()

result <- api.instance$ApiV3PingGet()


####################  ApiV3Ticker24hrGet  ####################

library(binanceRapi)
var.symbol <- 'BNBUSDT' # character | Trading symbol, e.g. BNBUSDT

#24hr Ticker Price Change Statistics
api.instance <- MarketApi$new()

result <- api.instance$ApiV3Ticker24hrGet(symbol=var.symbol)


####################  ApiV3TickerBookTickerGet  ####################

library(binanceRapi)
var.symbol <- 'BNBUSDT' # character | Trading symbol, e.g. BNBUSDT

#Symbol Order Book Ticker
api.instance <- MarketApi$new()

result <- api.instance$ApiV3TickerBookTickerGet(symbol=var.symbol)


####################  ApiV3TickerPriceGet  ####################

library(binanceRapi)
var.symbol <- 'BNBUSDT' # character | Trading symbol, e.g. BNBUSDT

#Symbol Price Ticker
api.instance <- MarketApi$new()

result <- api.instance$ApiV3TickerPriceGet(symbol=var.symbol)


####################  ApiV3TimeGet  ####################

library(binanceRapi)

#Check Server Time
api.instance <- MarketApi$new()

result <- api.instance$ApiV3TimeGet()


####################  ApiV3TradesGet  ####################

library(binanceRapi)
var.symbol <- 'BNBUSDT' # character | Trading symbol, e.g. BNBUSDT
var.limit <- 500 # integer | Default 500; max 1000.

#Recent Trades List
api.instance <- MarketApi$new()

result <- api.instance$ApiV3TradesGet(var.symbol, limit=var.limit)


}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{apiClient}}{Handles the client-server communication.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{MarketApi$new()}}
\item \href{#method-ApiV3AggTradesGet}{\code{MarketApi$ApiV3AggTradesGet()}}
\item \href{#method-ApiV3AggTradesGetWithHttpInfo}{\code{MarketApi$ApiV3AggTradesGetWithHttpInfo()}}
\item \href{#method-ApiV3AvgPriceGet}{\code{MarketApi$ApiV3AvgPriceGet()}}
\item \href{#method-ApiV3AvgPriceGetWithHttpInfo}{\code{MarketApi$ApiV3AvgPriceGetWithHttpInfo()}}
\item \href{#method-ApiV3DepthGet}{\code{MarketApi$ApiV3DepthGet()}}
\item \href{#method-ApiV3DepthGetWithHttpInfo}{\code{MarketApi$ApiV3DepthGetWithHttpInfo()}}
\item \href{#method-ApiV3ExchangeInfoGet}{\code{MarketApi$ApiV3ExchangeInfoGet()}}
\item \href{#method-ApiV3ExchangeInfoGetWithHttpInfo}{\code{MarketApi$ApiV3ExchangeInfoGetWithHttpInfo()}}
\item \href{#method-ApiV3HistoricalTradesGet}{\code{MarketApi$ApiV3HistoricalTradesGet()}}
\item \href{#method-ApiV3HistoricalTradesGetWithHttpInfo}{\code{MarketApi$ApiV3HistoricalTradesGetWithHttpInfo()}}
\item \href{#method-ApiV3KlinesGet}{\code{MarketApi$ApiV3KlinesGet()}}
\item \href{#method-ApiV3KlinesGetWithHttpInfo}{\code{MarketApi$ApiV3KlinesGetWithHttpInfo()}}
\item \href{#method-ApiV3PingGet}{\code{MarketApi$ApiV3PingGet()}}
\item \href{#method-ApiV3PingGetWithHttpInfo}{\code{MarketApi$ApiV3PingGetWithHttpInfo()}}
\item \href{#method-ApiV3Ticker24hrGet}{\code{MarketApi$ApiV3Ticker24hrGet()}}
\item \href{#method-ApiV3Ticker24hrGetWithHttpInfo}{\code{MarketApi$ApiV3Ticker24hrGetWithHttpInfo()}}
\item \href{#method-ApiV3TickerBookTickerGet}{\code{MarketApi$ApiV3TickerBookTickerGet()}}
\item \href{#method-ApiV3TickerBookTickerGetWithHttpInfo}{\code{MarketApi$ApiV3TickerBookTickerGetWithHttpInfo()}}
\item \href{#method-ApiV3TickerPriceGet}{\code{MarketApi$ApiV3TickerPriceGet()}}
\item \href{#method-ApiV3TickerPriceGetWithHttpInfo}{\code{MarketApi$ApiV3TickerPriceGetWithHttpInfo()}}
\item \href{#method-ApiV3TimeGet}{\code{MarketApi$ApiV3TimeGet()}}
\item \href{#method-ApiV3TimeGetWithHttpInfo}{\code{MarketApi$ApiV3TimeGetWithHttpInfo()}}
\item \href{#method-ApiV3TradesGet}{\code{MarketApi$ApiV3TradesGet()}}
\item \href{#method-ApiV3TradesGetWithHttpInfo}{\code{MarketApi$ApiV3TradesGetWithHttpInfo()}}
\item \href{#method-clone}{\code{MarketApi$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarketApi$new(apiClient)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ApiV3AggTradesGet"></a>}}
\if{latex}{\out{\hypertarget{method-ApiV3AggTradesGet}{}}}
\subsection{Method \code{ApiV3AggTradesGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarketApi$ApiV3AggTradesGet(
  symbol,
  from.id = NULL,
  start.time = NULL,
  end.time = NULL,
  limit = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ApiV3AggTradesGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-ApiV3AggTradesGetWithHttpInfo}{}}}
\subsection{Method \code{ApiV3AggTradesGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarketApi$ApiV3AggTradesGetWithHttpInfo(
  symbol,
  from.id = NULL,
  start.time = NULL,
  end.time = NULL,
  limit = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ApiV3AvgPriceGet"></a>}}
\if{latex}{\out{\hypertarget{method-ApiV3AvgPriceGet}{}}}
\subsection{Method \code{ApiV3AvgPriceGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarketApi$ApiV3AvgPriceGet(symbol, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ApiV3AvgPriceGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-ApiV3AvgPriceGetWithHttpInfo}{}}}
\subsection{Method \code{ApiV3AvgPriceGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarketApi$ApiV3AvgPriceGetWithHttpInfo(symbol, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ApiV3DepthGet"></a>}}
\if{latex}{\out{\hypertarget{method-ApiV3DepthGet}{}}}
\subsection{Method \code{ApiV3DepthGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarketApi$ApiV3DepthGet(symbol, limit = 100, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ApiV3DepthGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-ApiV3DepthGetWithHttpInfo}{}}}
\subsection{Method \code{ApiV3DepthGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarketApi$ApiV3DepthGetWithHttpInfo(symbol, limit = 100, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ApiV3ExchangeInfoGet"></a>}}
\if{latex}{\out{\hypertarget{method-ApiV3ExchangeInfoGet}{}}}
\subsection{Method \code{ApiV3ExchangeInfoGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarketApi$ApiV3ExchangeInfoGet(symbol = NULL, array.symbols = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ApiV3ExchangeInfoGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-ApiV3ExchangeInfoGetWithHttpInfo}{}}}
\subsection{Method \code{ApiV3ExchangeInfoGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarketApi$ApiV3ExchangeInfoGetWithHttpInfo(
  symbol = NULL,
  array.symbols = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ApiV3HistoricalTradesGet"></a>}}
\if{latex}{\out{\hypertarget{method-ApiV3HistoricalTradesGet}{}}}
\subsection{Method \code{ApiV3HistoricalTradesGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarketApi$ApiV3HistoricalTradesGet(symbol, limit = NULL, from.id = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ApiV3HistoricalTradesGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-ApiV3HistoricalTradesGetWithHttpInfo}{}}}
\subsection{Method \code{ApiV3HistoricalTradesGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarketApi$ApiV3HistoricalTradesGetWithHttpInfo(
  symbol,
  limit = NULL,
  from.id = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ApiV3KlinesGet"></a>}}
\if{latex}{\out{\hypertarget{method-ApiV3KlinesGet}{}}}
\subsection{Method \code{ApiV3KlinesGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarketApi$ApiV3KlinesGet(
  symbol,
  interval,
  start.time = NULL,
  end.time = NULL,
  limit = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ApiV3KlinesGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-ApiV3KlinesGetWithHttpInfo}{}}}
\subsection{Method \code{ApiV3KlinesGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarketApi$ApiV3KlinesGetWithHttpInfo(
  symbol,
  interval,
  start.time = NULL,
  end.time = NULL,
  limit = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ApiV3PingGet"></a>}}
\if{latex}{\out{\hypertarget{method-ApiV3PingGet}{}}}
\subsection{Method \code{ApiV3PingGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarketApi$ApiV3PingGet(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ApiV3PingGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-ApiV3PingGetWithHttpInfo}{}}}
\subsection{Method \code{ApiV3PingGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarketApi$ApiV3PingGetWithHttpInfo(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ApiV3Ticker24hrGet"></a>}}
\if{latex}{\out{\hypertarget{method-ApiV3Ticker24hrGet}{}}}
\subsection{Method \code{ApiV3Ticker24hrGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarketApi$ApiV3Ticker24hrGet(symbol = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ApiV3Ticker24hrGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-ApiV3Ticker24hrGetWithHttpInfo}{}}}
\subsection{Method \code{ApiV3Ticker24hrGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarketApi$ApiV3Ticker24hrGetWithHttpInfo(symbol = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ApiV3TickerBookTickerGet"></a>}}
\if{latex}{\out{\hypertarget{method-ApiV3TickerBookTickerGet}{}}}
\subsection{Method \code{ApiV3TickerBookTickerGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarketApi$ApiV3TickerBookTickerGet(symbol = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ApiV3TickerBookTickerGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-ApiV3TickerBookTickerGetWithHttpInfo}{}}}
\subsection{Method \code{ApiV3TickerBookTickerGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarketApi$ApiV3TickerBookTickerGetWithHttpInfo(symbol = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ApiV3TickerPriceGet"></a>}}
\if{latex}{\out{\hypertarget{method-ApiV3TickerPriceGet}{}}}
\subsection{Method \code{ApiV3TickerPriceGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarketApi$ApiV3TickerPriceGet(symbol = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ApiV3TickerPriceGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-ApiV3TickerPriceGetWithHttpInfo}{}}}
\subsection{Method \code{ApiV3TickerPriceGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarketApi$ApiV3TickerPriceGetWithHttpInfo(symbol = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ApiV3TimeGet"></a>}}
\if{latex}{\out{\hypertarget{method-ApiV3TimeGet}{}}}
\subsection{Method \code{ApiV3TimeGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarketApi$ApiV3TimeGet(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ApiV3TimeGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-ApiV3TimeGetWithHttpInfo}{}}}
\subsection{Method \code{ApiV3TimeGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarketApi$ApiV3TimeGetWithHttpInfo(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ApiV3TradesGet"></a>}}
\if{latex}{\out{\hypertarget{method-ApiV3TradesGet}{}}}
\subsection{Method \code{ApiV3TradesGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarketApi$ApiV3TradesGet(symbol, limit = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ApiV3TradesGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-ApiV3TradesGetWithHttpInfo}{}}}
\subsection{Method \code{ApiV3TradesGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarketApi$ApiV3TradesGetWithHttpInfo(symbol, limit = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarketApi$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
