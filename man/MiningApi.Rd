% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mining_api.R
\docType{class}
\name{MiningApi}
\alias{MiningApi}
\title{Mining operations}
\format{
An \code{R6Class} generator object
}
\description{
binanceRapi.Mining
}
\section{Methods}{

\describe{
\strong{ SapiV1MiningHashTransferConfigCancelPost } \emph{ Cancel Hashrate Resale configuration (USER_DATA) }
Weight(IP): 5

\itemize{
\item \emph{ @param } config.id character
\item \emph{ @param } user.name character
\item \emph{ @param } timestamp integer
\item \emph{ @param } signature character
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{InlineResponse20094} \cr


\item status code : 200 | Success flag

\item return type : InlineResponse20094 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MiningHashTransferConfigDetailsListGet } \emph{ Hashrate Resale List (USER_DATA) }
Weight(IP): 5

\itemize{
\item \emph{ @param } timestamp integer
\item \emph{ @param } signature character
\item \emph{ @param } page.index integer
\item \emph{ @param } page.size character
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{InlineResponse20091} \cr


\item status code : 200 | List of hashrate resales

\item return type : InlineResponse20091 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MiningHashTransferConfigPost } \emph{ Hashrate Resale Request (USER_DATA) }
Weight(IP): 5

\itemize{
\item \emph{ @param } user.name character
\item \emph{ @param } algo character
\item \emph{ @param } to.pool.user character
\item \emph{ @param } hash.rate character
\item \emph{ @param } timestamp integer
\item \emph{ @param } signature character
\item \emph{ @param } start.date character
\item \emph{ @param } end.date character
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{InlineResponse20093} \cr


\item status code : 200 | Mining Account Id

\item return type : InlineResponse20093 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MiningHashTransferProfitDetailsGet } \emph{ Hashrate Resale Details (USER_DATA) }
Weight(IP): 5

\itemize{
\item \emph{ @param } config.id character
\item \emph{ @param } user.name character
\item \emph{ @param } timestamp integer
\item \emph{ @param } signature character
\item \emph{ @param } page.index integer
\item \emph{ @param } page.size character
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{InlineResponse20092} \cr


\item status code : 200 | List of hashrate resale details

\item return type : InlineResponse20092 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MiningPaymentListGet } \emph{ Earnings List (USER_DATA) }
Weight(IP): 5

\itemize{
\item \emph{ @param } algo character
\item \emph{ @param } user.name character
\item \emph{ @param } timestamp integer
\item \emph{ @param } signature character
\item \emph{ @param } coin character
\item \emph{ @param } start.date character
\item \emph{ @param } end.date character
\item \emph{ @param } page.index integer
\item \emph{ @param } page.size character
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{InlineResponse20089} \cr


\item status code : 200 | List of earnings

\item return type : InlineResponse20089 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MiningPaymentOtherGet } \emph{ Extra Bonus List (USER_DATA) }
Weight(IP): 5

\itemize{
\item \emph{ @param } algo character
\item \emph{ @param } user.name character
\item \emph{ @param } timestamp integer
\item \emph{ @param } signature character
\item \emph{ @param } coin character
\item \emph{ @param } start.date character
\item \emph{ @param } end.date character
\item \emph{ @param } page.index integer
\item \emph{ @param } page.size character
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{InlineResponse20090} \cr


\item status code : 200 | List of extra bonuses

\item return type : InlineResponse20090 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MiningPubAlgoListGet } \emph{ Acquiring Algorithm (MARKET_DATA) }
Weight(IP): 1

\itemize{
\item \emph{ @param } timestamp integer
\item \emph{ @param } signature character
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{InlineResponse20085} \cr


\item status code : 200 | Algorithm information

\item return type : InlineResponse20085 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MiningPubCoinListGet } \emph{ Acquiring CoinName (MARKET_DATA) }
Weight(IP): 1

\itemize{
\item \emph{ @param } timestamp integer
\item \emph{ @param } signature character
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{InlineResponse20086} \cr


\item status code : 200 | Coin information

\item return type : InlineResponse20086 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MiningStatisticsUserListGet } \emph{ Account List (USER_DATA) }
Weight(IP): 5

\itemize{
\item \emph{ @param } algo character
\item \emph{ @param } user.name character
\item \emph{ @param } timestamp integer
\item \emph{ @param } signature character
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{InlineResponse20096} \cr


\item status code : 200 | List of mining accounts

\item return type : InlineResponse20096 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MiningStatisticsUserStatusGet } \emph{ Statistic List (USER_DATA) }
Weight(IP): 5

\itemize{
\item \emph{ @param } algo character
\item \emph{ @param } user.name character
\item \emph{ @param } timestamp integer
\item \emph{ @param } signature character
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{InlineResponse20095} \cr


\item status code : 200 | Mining account statistics

\item return type : InlineResponse20095 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MiningWorkerDetailGet } \emph{ Request for Detail Miner List (USER_DATA) }
Weight(IP): 5

\itemize{
\item \emph{ @param } algo character
\item \emph{ @param } user.name character
\item \emph{ @param } worker.name character
\item \emph{ @param } timestamp integer
\item \emph{ @param } signature character
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{InlineResponse20087} \cr


\item status code : 200 | List of workers&#39; hashrates&#39;

\item return type : InlineResponse20087 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MiningWorkerListGet } \emph{ Request for Miner List (USER_DATA) }
Weight(IP): 5

\itemize{
\item \emph{ @param } algo character
\item \emph{ @param } user.name character
\item \emph{ @param } timestamp integer
\item \emph{ @param } signature character
\item \emph{ @param } page.index integer
\item \emph{ @param } sort integer
\item \emph{ @param } sort.column integer
\item \emph{ @param } worker.status integer
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{InlineResponse20088} \cr


\item status code : 200 | List of workers

\item return type : InlineResponse20088 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

}
}

\examples{
\dontrun{
####################  SapiV1MiningHashTransferConfigCancelPost  ####################

library(binanceRapi)
var.config.id <- 'config.id_example' # character | Mining ID
var.user.name <- 'user.name_example' # character | Mining Account
var.timestamp <- 56 # integer | UTC timestamp in ms
var.signature <- 'signature_example' # character | Signature
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Cancel Hashrate Resale configuration (USER_DATA)
api.instance <- MiningApi$new()

#Configure API key authorization: ApiKeyAuth
api.instance$apiClient$apiKeys['X-MBX-APIKEY'] <- 'TODO_YOUR_API_KEY';

result <- api.instance$SapiV1MiningHashTransferConfigCancelPost(var.config.id, var.user.name, var.timestamp, var.signature, recv.window=var.recv.window)


####################  SapiV1MiningHashTransferConfigDetailsListGet  ####################

library(binanceRapi)
var.timestamp <- 56 # integer | UTC timestamp in ms
var.signature <- 'signature_example' # character | Signature
var.page.index <- 56 # integer | Page number, default is first page, start form 1
var.page.size <- 'page.size_example' # character | Number of pages, minimum 10, maximum 200
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Hashrate Resale List (USER_DATA)
api.instance <- MiningApi$new()

#Configure API key authorization: ApiKeyAuth
api.instance$apiClient$apiKeys['X-MBX-APIKEY'] <- 'TODO_YOUR_API_KEY';

result <- api.instance$SapiV1MiningHashTransferConfigDetailsListGet(var.timestamp, var.signature, page.index=var.page.index, page.size=var.page.size, recv.window=var.recv.window)


####################  SapiV1MiningHashTransferConfigPost  ####################

library(binanceRapi)
var.user.name <- 'user.name_example' # character | Mining Account
var.algo <- 'algo_example' # character | Algorithm(sha256)
var.to.pool.user <- 'to.pool.user_example' # character | Mining Account
var.hash.rate <- 'hash.rate_example' # character | Resale hashrate h/s must be transferred (BTC is greater than 500000000000 ETH is greater than 500000)
var.timestamp <- 56 # integer | UTC timestamp in ms
var.signature <- 'signature_example' # character | Signature
var.start.date <- 'start.date_example' # character | Search date, millisecond timestamp, while empty query all
var.end.date <- 'end.date_example' # character | Search date, millisecond timestamp, while empty query all
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Hashrate Resale Request (USER_DATA)
api.instance <- MiningApi$new()

#Configure API key authorization: ApiKeyAuth
api.instance$apiClient$apiKeys['X-MBX-APIKEY'] <- 'TODO_YOUR_API_KEY';

result <- api.instance$SapiV1MiningHashTransferConfigPost(var.user.name, var.algo, var.to.pool.user, var.hash.rate, var.timestamp, var.signature, start.date=var.start.date, end.date=var.end.date, recv.window=var.recv.window)


####################  SapiV1MiningHashTransferProfitDetailsGet  ####################

library(binanceRapi)
var.config.id <- 'config.id_example' # character | Mining ID
var.user.name <- 'user.name_example' # character | Mining Account
var.timestamp <- 56 # integer | UTC timestamp in ms
var.signature <- 'signature_example' # character | Signature
var.page.index <- 56 # integer | Page number, default is first page, start form 1
var.page.size <- 'page.size_example' # character | Number of pages, minimum 10, maximum 200
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Hashrate Resale Details (USER_DATA)
api.instance <- MiningApi$new()

#Configure API key authorization: ApiKeyAuth
api.instance$apiClient$apiKeys['X-MBX-APIKEY'] <- 'TODO_YOUR_API_KEY';

result <- api.instance$SapiV1MiningHashTransferProfitDetailsGet(var.config.id, var.user.name, var.timestamp, var.signature, page.index=var.page.index, page.size=var.page.size, recv.window=var.recv.window)


####################  SapiV1MiningPaymentListGet  ####################

library(binanceRapi)
var.algo <- 'algo_example' # character | Algorithm(sha256)
var.user.name <- 'user.name_example' # character | Mining Account
var.timestamp <- 56 # integer | UTC timestamp in ms
var.signature <- 'signature_example' # character | Signature
var.coin <- 'BNB' # character | Coin name
var.start.date <- 'start.date_example' # character | Search date, millisecond timestamp, while empty query all
var.end.date <- 'end.date_example' # character | Search date, millisecond timestamp, while empty query all
var.page.index <- 56 # integer | Page number, default is first page, start form 1
var.page.size <- 'page.size_example' # character | Number of pages, minimum 10, maximum 200
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Earnings List (USER_DATA)
api.instance <- MiningApi$new()

#Configure API key authorization: ApiKeyAuth
api.instance$apiClient$apiKeys['X-MBX-APIKEY'] <- 'TODO_YOUR_API_KEY';

result <- api.instance$SapiV1MiningPaymentListGet(var.algo, var.user.name, var.timestamp, var.signature, coin=var.coin, start.date=var.start.date, end.date=var.end.date, page.index=var.page.index, page.size=var.page.size, recv.window=var.recv.window)


####################  SapiV1MiningPaymentOtherGet  ####################

library(binanceRapi)
var.algo <- 'algo_example' # character | Algorithm(sha256)
var.user.name <- 'user.name_example' # character | Mining Account
var.timestamp <- 56 # integer | UTC timestamp in ms
var.signature <- 'signature_example' # character | Signature
var.coin <- 'BNB' # character | Coin name
var.start.date <- 'start.date_example' # character | Search date, millisecond timestamp, while empty query all
var.end.date <- 'end.date_example' # character | Search date, millisecond timestamp, while empty query all
var.page.index <- 56 # integer | Page number, default is first page, start form 1
var.page.size <- 'page.size_example' # character | Number of pages, minimum 10, maximum 200
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Extra Bonus List (USER_DATA)
api.instance <- MiningApi$new()

#Configure API key authorization: ApiKeyAuth
api.instance$apiClient$apiKeys['X-MBX-APIKEY'] <- 'TODO_YOUR_API_KEY';

result <- api.instance$SapiV1MiningPaymentOtherGet(var.algo, var.user.name, var.timestamp, var.signature, coin=var.coin, start.date=var.start.date, end.date=var.end.date, page.index=var.page.index, page.size=var.page.size, recv.window=var.recv.window)


####################  SapiV1MiningPubAlgoListGet  ####################

library(binanceRapi)
var.timestamp <- 56 # integer | UTC timestamp in ms
var.signature <- 'signature_example' # character | Signature
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Acquiring Algorithm (MARKET_DATA)
api.instance <- MiningApi$new()

#Configure API key authorization: ApiKeyAuth
api.instance$apiClient$apiKeys['X-MBX-APIKEY'] <- 'TODO_YOUR_API_KEY';

result <- api.instance$SapiV1MiningPubAlgoListGet(var.timestamp, var.signature, recv.window=var.recv.window)


####################  SapiV1MiningPubCoinListGet  ####################

library(binanceRapi)
var.timestamp <- 56 # integer | UTC timestamp in ms
var.signature <- 'signature_example' # character | Signature
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Acquiring CoinName (MARKET_DATA)
api.instance <- MiningApi$new()

#Configure API key authorization: ApiKeyAuth
api.instance$apiClient$apiKeys['X-MBX-APIKEY'] <- 'TODO_YOUR_API_KEY';

result <- api.instance$SapiV1MiningPubCoinListGet(var.timestamp, var.signature, recv.window=var.recv.window)


####################  SapiV1MiningStatisticsUserListGet  ####################

library(binanceRapi)
var.algo <- 'algo_example' # character | Algorithm(sha256)
var.user.name <- 'user.name_example' # character | Mining Account
var.timestamp <- 56 # integer | UTC timestamp in ms
var.signature <- 'signature_example' # character | Signature
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Account List (USER_DATA)
api.instance <- MiningApi$new()

#Configure API key authorization: ApiKeyAuth
api.instance$apiClient$apiKeys['X-MBX-APIKEY'] <- 'TODO_YOUR_API_KEY';

result <- api.instance$SapiV1MiningStatisticsUserListGet(var.algo, var.user.name, var.timestamp, var.signature, recv.window=var.recv.window)


####################  SapiV1MiningStatisticsUserStatusGet  ####################

library(binanceRapi)
var.algo <- 'algo_example' # character | Algorithm(sha256)
var.user.name <- 'user.name_example' # character | Mining Account
var.timestamp <- 56 # integer | UTC timestamp in ms
var.signature <- 'signature_example' # character | Signature
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Statistic List (USER_DATA)
api.instance <- MiningApi$new()

#Configure API key authorization: ApiKeyAuth
api.instance$apiClient$apiKeys['X-MBX-APIKEY'] <- 'TODO_YOUR_API_KEY';

result <- api.instance$SapiV1MiningStatisticsUserStatusGet(var.algo, var.user.name, var.timestamp, var.signature, recv.window=var.recv.window)


####################  SapiV1MiningWorkerDetailGet  ####################

library(binanceRapi)
var.algo <- 'algo_example' # character | Algorithm(sha256)
var.user.name <- 'user.name_example' # character | Mining Account
var.worker.name <- 'worker.name_example' # character | Miner’s name
var.timestamp <- 56 # integer | UTC timestamp in ms
var.signature <- 'signature_example' # character | Signature
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Request for Detail Miner List (USER_DATA)
api.instance <- MiningApi$new()

#Configure API key authorization: ApiKeyAuth
api.instance$apiClient$apiKeys['X-MBX-APIKEY'] <- 'TODO_YOUR_API_KEY';

result <- api.instance$SapiV1MiningWorkerDetailGet(var.algo, var.user.name, var.worker.name, var.timestamp, var.signature, recv.window=var.recv.window)


####################  SapiV1MiningWorkerListGet  ####################

library(binanceRapi)
var.algo <- 'algo_example' # character | Algorithm(sha256)
var.user.name <- 'user.name_example' # character | Mining Account
var.timestamp <- 56 # integer | UTC timestamp in ms
var.signature <- 'signature_example' # character | Signature
var.page.index <- 56 # integer | Page number, default is first page, start form 1
var.sort <- 56 # integer | sort sequence（default=0）0 positive sequence, 1 negative sequence
var.sort.column <- 56 # integer | Sort by( default 1): 1: miner name, 2: real-time computing power, 3: daily average computing power, 4: real-time rejection rate, 5: last submission time
var.worker.status <- 56 # integer | miners status（default=0）0 all, 1 valid, 2 invalid, 3 failure
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Request for Miner List (USER_DATA)
api.instance <- MiningApi$new()

#Configure API key authorization: ApiKeyAuth
api.instance$apiClient$apiKeys['X-MBX-APIKEY'] <- 'TODO_YOUR_API_KEY';

result <- api.instance$SapiV1MiningWorkerListGet(var.algo, var.user.name, var.timestamp, var.signature, page.index=var.page.index, sort=var.sort, sort.column=var.sort.column, worker.status=var.worker.status, recv.window=var.recv.window)


}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{apiClient}}{Handles the client-server communication.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{MiningApi$new()}}
\item \href{#method-SapiV1MiningHashTransferConfigCancelPost}{\code{MiningApi$SapiV1MiningHashTransferConfigCancelPost()}}
\item \href{#method-SapiV1MiningHashTransferConfigCancelPostWithHttpInfo}{\code{MiningApi$SapiV1MiningHashTransferConfigCancelPostWithHttpInfo()}}
\item \href{#method-SapiV1MiningHashTransferConfigDetailsListGet}{\code{MiningApi$SapiV1MiningHashTransferConfigDetailsListGet()}}
\item \href{#method-SapiV1MiningHashTransferConfigDetailsListGetWithHttpInfo}{\code{MiningApi$SapiV1MiningHashTransferConfigDetailsListGetWithHttpInfo()}}
\item \href{#method-SapiV1MiningHashTransferConfigPost}{\code{MiningApi$SapiV1MiningHashTransferConfigPost()}}
\item \href{#method-SapiV1MiningHashTransferConfigPostWithHttpInfo}{\code{MiningApi$SapiV1MiningHashTransferConfigPostWithHttpInfo()}}
\item \href{#method-SapiV1MiningHashTransferProfitDetailsGet}{\code{MiningApi$SapiV1MiningHashTransferProfitDetailsGet()}}
\item \href{#method-SapiV1MiningHashTransferProfitDetailsGetWithHttpInfo}{\code{MiningApi$SapiV1MiningHashTransferProfitDetailsGetWithHttpInfo()}}
\item \href{#method-SapiV1MiningPaymentListGet}{\code{MiningApi$SapiV1MiningPaymentListGet()}}
\item \href{#method-SapiV1MiningPaymentListGetWithHttpInfo}{\code{MiningApi$SapiV1MiningPaymentListGetWithHttpInfo()}}
\item \href{#method-SapiV1MiningPaymentOtherGet}{\code{MiningApi$SapiV1MiningPaymentOtherGet()}}
\item \href{#method-SapiV1MiningPaymentOtherGetWithHttpInfo}{\code{MiningApi$SapiV1MiningPaymentOtherGetWithHttpInfo()}}
\item \href{#method-SapiV1MiningPubAlgoListGet}{\code{MiningApi$SapiV1MiningPubAlgoListGet()}}
\item \href{#method-SapiV1MiningPubAlgoListGetWithHttpInfo}{\code{MiningApi$SapiV1MiningPubAlgoListGetWithHttpInfo()}}
\item \href{#method-SapiV1MiningPubCoinListGet}{\code{MiningApi$SapiV1MiningPubCoinListGet()}}
\item \href{#method-SapiV1MiningPubCoinListGetWithHttpInfo}{\code{MiningApi$SapiV1MiningPubCoinListGetWithHttpInfo()}}
\item \href{#method-SapiV1MiningStatisticsUserListGet}{\code{MiningApi$SapiV1MiningStatisticsUserListGet()}}
\item \href{#method-SapiV1MiningStatisticsUserListGetWithHttpInfo}{\code{MiningApi$SapiV1MiningStatisticsUserListGetWithHttpInfo()}}
\item \href{#method-SapiV1MiningStatisticsUserStatusGet}{\code{MiningApi$SapiV1MiningStatisticsUserStatusGet()}}
\item \href{#method-SapiV1MiningStatisticsUserStatusGetWithHttpInfo}{\code{MiningApi$SapiV1MiningStatisticsUserStatusGetWithHttpInfo()}}
\item \href{#method-SapiV1MiningWorkerDetailGet}{\code{MiningApi$SapiV1MiningWorkerDetailGet()}}
\item \href{#method-SapiV1MiningWorkerDetailGetWithHttpInfo}{\code{MiningApi$SapiV1MiningWorkerDetailGetWithHttpInfo()}}
\item \href{#method-SapiV1MiningWorkerListGet}{\code{MiningApi$SapiV1MiningWorkerListGet()}}
\item \href{#method-SapiV1MiningWorkerListGetWithHttpInfo}{\code{MiningApi$SapiV1MiningWorkerListGetWithHttpInfo()}}
\item \href{#method-clone}{\code{MiningApi$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MiningApi$new(apiClient)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MiningHashTransferConfigCancelPost"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MiningHashTransferConfigCancelPost}{}}}
\subsection{Method \code{SapiV1MiningHashTransferConfigCancelPost()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MiningApi$SapiV1MiningHashTransferConfigCancelPost(
  config.id,
  user.name,
  timestamp,
  signature,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MiningHashTransferConfigCancelPostWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MiningHashTransferConfigCancelPostWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MiningHashTransferConfigCancelPostWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MiningApi$SapiV1MiningHashTransferConfigCancelPostWithHttpInfo(
  config.id,
  user.name,
  timestamp,
  signature,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MiningHashTransferConfigDetailsListGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MiningHashTransferConfigDetailsListGet}{}}}
\subsection{Method \code{SapiV1MiningHashTransferConfigDetailsListGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MiningApi$SapiV1MiningHashTransferConfigDetailsListGet(
  timestamp,
  signature,
  page.index = NULL,
  page.size = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MiningHashTransferConfigDetailsListGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MiningHashTransferConfigDetailsListGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MiningHashTransferConfigDetailsListGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MiningApi$SapiV1MiningHashTransferConfigDetailsListGetWithHttpInfo(
  timestamp,
  signature,
  page.index = NULL,
  page.size = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MiningHashTransferConfigPost"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MiningHashTransferConfigPost}{}}}
\subsection{Method \code{SapiV1MiningHashTransferConfigPost()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MiningApi$SapiV1MiningHashTransferConfigPost(
  user.name,
  algo,
  to.pool.user,
  hash.rate,
  timestamp,
  signature,
  start.date = NULL,
  end.date = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MiningHashTransferConfigPostWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MiningHashTransferConfigPostWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MiningHashTransferConfigPostWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MiningApi$SapiV1MiningHashTransferConfigPostWithHttpInfo(
  user.name,
  algo,
  to.pool.user,
  hash.rate,
  timestamp,
  signature,
  start.date = NULL,
  end.date = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MiningHashTransferProfitDetailsGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MiningHashTransferProfitDetailsGet}{}}}
\subsection{Method \code{SapiV1MiningHashTransferProfitDetailsGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MiningApi$SapiV1MiningHashTransferProfitDetailsGet(
  config.id,
  user.name,
  timestamp,
  signature,
  page.index = NULL,
  page.size = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MiningHashTransferProfitDetailsGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MiningHashTransferProfitDetailsGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MiningHashTransferProfitDetailsGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MiningApi$SapiV1MiningHashTransferProfitDetailsGetWithHttpInfo(
  config.id,
  user.name,
  timestamp,
  signature,
  page.index = NULL,
  page.size = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MiningPaymentListGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MiningPaymentListGet}{}}}
\subsection{Method \code{SapiV1MiningPaymentListGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MiningApi$SapiV1MiningPaymentListGet(
  algo,
  user.name,
  timestamp,
  signature,
  coin = NULL,
  start.date = NULL,
  end.date = NULL,
  page.index = NULL,
  page.size = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MiningPaymentListGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MiningPaymentListGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MiningPaymentListGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MiningApi$SapiV1MiningPaymentListGetWithHttpInfo(
  algo,
  user.name,
  timestamp,
  signature,
  coin = NULL,
  start.date = NULL,
  end.date = NULL,
  page.index = NULL,
  page.size = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MiningPaymentOtherGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MiningPaymentOtherGet}{}}}
\subsection{Method \code{SapiV1MiningPaymentOtherGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MiningApi$SapiV1MiningPaymentOtherGet(
  algo,
  user.name,
  timestamp,
  signature,
  coin = NULL,
  start.date = NULL,
  end.date = NULL,
  page.index = NULL,
  page.size = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MiningPaymentOtherGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MiningPaymentOtherGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MiningPaymentOtherGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MiningApi$SapiV1MiningPaymentOtherGetWithHttpInfo(
  algo,
  user.name,
  timestamp,
  signature,
  coin = NULL,
  start.date = NULL,
  end.date = NULL,
  page.index = NULL,
  page.size = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MiningPubAlgoListGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MiningPubAlgoListGet}{}}}
\subsection{Method \code{SapiV1MiningPubAlgoListGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MiningApi$SapiV1MiningPubAlgoListGet(
  timestamp,
  signature,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MiningPubAlgoListGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MiningPubAlgoListGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MiningPubAlgoListGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MiningApi$SapiV1MiningPubAlgoListGetWithHttpInfo(
  timestamp,
  signature,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MiningPubCoinListGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MiningPubCoinListGet}{}}}
\subsection{Method \code{SapiV1MiningPubCoinListGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MiningApi$SapiV1MiningPubCoinListGet(
  timestamp,
  signature,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MiningPubCoinListGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MiningPubCoinListGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MiningPubCoinListGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MiningApi$SapiV1MiningPubCoinListGetWithHttpInfo(
  timestamp,
  signature,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MiningStatisticsUserListGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MiningStatisticsUserListGet}{}}}
\subsection{Method \code{SapiV1MiningStatisticsUserListGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MiningApi$SapiV1MiningStatisticsUserListGet(
  algo,
  user.name,
  timestamp,
  signature,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MiningStatisticsUserListGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MiningStatisticsUserListGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MiningStatisticsUserListGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MiningApi$SapiV1MiningStatisticsUserListGetWithHttpInfo(
  algo,
  user.name,
  timestamp,
  signature,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MiningStatisticsUserStatusGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MiningStatisticsUserStatusGet}{}}}
\subsection{Method \code{SapiV1MiningStatisticsUserStatusGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MiningApi$SapiV1MiningStatisticsUserStatusGet(
  algo,
  user.name,
  timestamp,
  signature,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MiningStatisticsUserStatusGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MiningStatisticsUserStatusGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MiningStatisticsUserStatusGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MiningApi$SapiV1MiningStatisticsUserStatusGetWithHttpInfo(
  algo,
  user.name,
  timestamp,
  signature,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MiningWorkerDetailGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MiningWorkerDetailGet}{}}}
\subsection{Method \code{SapiV1MiningWorkerDetailGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MiningApi$SapiV1MiningWorkerDetailGet(
  algo,
  user.name,
  worker.name,
  timestamp,
  signature,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MiningWorkerDetailGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MiningWorkerDetailGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MiningWorkerDetailGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MiningApi$SapiV1MiningWorkerDetailGetWithHttpInfo(
  algo,
  user.name,
  worker.name,
  timestamp,
  signature,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MiningWorkerListGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MiningWorkerListGet}{}}}
\subsection{Method \code{SapiV1MiningWorkerListGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MiningApi$SapiV1MiningWorkerListGet(
  algo,
  user.name,
  timestamp,
  signature,
  page.index = NULL,
  sort = NULL,
  sort.column = NULL,
  worker.status = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MiningWorkerListGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MiningWorkerListGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MiningWorkerListGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MiningApi$SapiV1MiningWorkerListGetWithHttpInfo(
  algo,
  user.name,
  timestamp,
  signature,
  page.index = NULL,
  sort = NULL,
  sort.column = NULL,
  worker.status = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MiningApi$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
