% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/margin_api.R
\docType{class}
\name{MarginApi}
\alias{MarginApi}
\title{Margin operations}
\format{
An \code{R6Class} generator object
}
\description{
binanceRapi.Margin
}
\section{Methods}{

\describe{
\strong{ SapiV1BnbBurnGet } \emph{ Get All Isolated Margin Symbol(USER_DATA) }
Weight(IP): 1

\itemize{
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{BnbBurnStatus} \cr


\item status code : 200 | Status on BNB to pay for trading fees

\item return type : BnbBurnStatus 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1BnbBurnPost } \emph{ Toggle BNB Burn On Spot Trade And Margin Interest (USER_DATA) }
- \&quot;spotBNBBurn\&quot; and \&quot;interestBNBBurn\&quot; should be sent at least one.  Weight(IP): 1

\itemize{
\item \emph{ @param } spot.bnb.burn Enum < [true, false] >
\item \emph{ @param } interest.bnb.burn Enum < [true, false] >
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{BnbBurnStatus} \cr


\item status code : 200 | Status on BNB to pay for trading fees

\item return type : BnbBurnStatus 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MarginAccountGet } \emph{ Query Cross Margin Account Details (USER_DATA) }
Weight(IP): 10

\itemize{
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{InlineResponse20019} \cr


\item status code : 200 | Margin account details

\item return type : InlineResponse20019 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MarginAllAssetsGet } \emph{ Get All Margin Assets (MARKET_DATA) }
Weight(IP): 1

\itemize{
\item \emph{ @returnType } list( \link{inline_response_200_14} ) \cr


\item status code : 200 | Assets details

\item return type : array[InlineResponse20014] 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MarginAllOrderListGet } \emph{ Query Margin Account&#39;s all OCO (USER_DATA) }
Retrieves all OCO for a specific margin account based on provided optional parameters  Weight(IP): 200

\itemize{
\item \emph{ @param } is.isolated Enum < [TRUE, FALSE] >
\item \emph{ @param } symbol character
\item \emph{ @param } from.id character
\item \emph{ @param } start.time integer
\item \emph{ @param } end.time integer
\item \emph{ @param } limit integer
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } list( \link{inline_response_200_6} ) \cr


\item status code : 200 | List of Margin OCO orders

\item return type : array[InlineResponse2006] 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MarginAllOrdersGet } \emph{ Query Margin Account&#39;s All Orders (USER_DATA) }
- If &#x60;orderId&#x60; is set, it will get orders &gt;&#x3D; that orderId. Otherwise most recent orders are returned. - For some historical orders &#x60;cummulativeQuoteQty&#x60; will be &lt; 0, meaning the data is not available at this time.  Weight(IP): 200  Request Limit: 60 times/min per IP

\itemize{
\item \emph{ @param } symbol character
\item \emph{ @param } is.isolated Enum < [TRUE, FALSE] >
\item \emph{ @param } order.id integer
\item \emph{ @param } start.time integer
\item \emph{ @param } end.time integer
\item \emph{ @param } limit integer
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } list( \link{marginOrderDetail} ) \cr


\item status code : 200 | Margin order list

\item return type : array[MarginOrderDetail] 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MarginAllPairsGet } \emph{ Get All Cross Margin Pairs (MARKET_DATA) }
Weight(IP): 1

\itemize{
\item \emph{ @returnType } list( \link{inline_response_200_15} ) \cr


\item status code : 200 | Margin pairs

\item return type : array[InlineResponse20015] 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MarginAssetGet } \emph{ Query Margin Asset (MARKET_DATA) }
Weight(IP): 10

\itemize{
\item \emph{ @param } asset character
\item \emph{ @returnType } \link{InlineResponse20012} \cr


\item status code : 200 | Asset details

\item return type : InlineResponse20012 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MarginCrossMarginDataGet } \emph{ Query Cross Margin Fee Data (USER_DATA) }
Get cross margin fee data collection with any vip level or user&#39;s current specific data as https://www.binance.com/en/margin-fee  Weight(IP): 1 when coin is specified; 5 when the coin parameter is omitted

\itemize{
\item \emph{ @param } vip.level integer
\item \emph{ @param } coin character
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } list( \link{inline_response_200_29} ) \cr


\item status code : 200 | Cross Margin Fee Data

\item return type : array[InlineResponse20029] 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MarginForceLiquidationRecGet } \emph{ Get Force Liquidation Record (USER_DATA) }
- Response in descending order  Weight(IP): 1

\itemize{
\item \emph{ @param } start.time integer
\item \emph{ @param } end.time integer
\item \emph{ @param } isolated.symbol character
\item \emph{ @param } current integer
\item \emph{ @param } size integer
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{InlineResponse20018} \cr


\item status code : 200 | Force Liquidation History, response in descending order

\item return type : InlineResponse20018 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MarginInterestHistoryGet } \emph{ Get Interest History (USER_DATA) }
- Response in descending order - If &#x60;isolatedSymbol&#x60; is not sent, crossed margin data will be returned - Set &#x60;archived&#x60; to &#x60;true&#x60; to query data from 6 months ago - &#x60;type&#x60; in response has 4 enums:   - &#x60;PERIODIC&#x60; interest charged per hour   - &#x60;ON_BORROW&#x60; first interest charged on borrow   - &#x60;PERIODIC_CONVERTED&#x60; interest charged per hour converted into BNB   - &#x60;ON_BORROW_CONVERTED&#x60; first interest charged on borrow converted into BNB  Weight(IP): 1

\itemize{
\item \emph{ @param } asset character
\item \emph{ @param } isolated.symbol character
\item \emph{ @param } start.time integer
\item \emph{ @param } end.time integer
\item \emph{ @param } current integer
\item \emph{ @param } size integer
\item \emph{ @param } archived character
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{InlineResponse20017} \cr


\item status code : 200 | Interest History, response in descending order

\item return type : InlineResponse20017 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MarginInterestRateHistoryGet } \emph{ Margin Interest Rate History (USER_DATA) }
Weight(IP): 1

\itemize{
\item \emph{ @param } asset character
\item \emph{ @param } vip.level integer
\item \emph{ @param } start.time integer
\item \emph{ @param } end.time integer
\item \emph{ @param } limit integer
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } list( \link{inline_response_200_28} ) \cr


\item status code : 200 | Margin Interest Rate History

\item return type : array[InlineResponse20028] 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MarginIsolatedAccountDelete } \emph{ Disable Isolated Margin Account (TRADE) }
Disable isolated margin account for a specific symbol. Each trading pair can only be deactivated once every 24 hours .  Weight(UID): 300

\itemize{
\item \emph{ @param } symbol character
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{InlineResponse20025} \cr


\item status code : 200 | Isolated Margin Account status

\item return type : InlineResponse20025 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MarginIsolatedAccountGet } \emph{ Query Isolated Margin Account Info (USER_DATA) }
- If \&quot;symbols\&quot; is not sent, all isolated assets will be returned. - If \&quot;symbols\&quot; is sent, only the isolated assets of the sent symbols will be returned.  Weight(IP): 10

\itemize{
\item \emph{ @param } symbols character
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{IsolatedMarginAccountInfo} \cr


\item status code : 200 | Isolated Margin Account Info when \&quot;symbols\&quot; is not sent

\item return type : IsolatedMarginAccountInfo 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MarginIsolatedAccountLimitGet } \emph{ Query Enabled Isolated Margin Account Limit (USER_DATA) }
Query enabled isolated margin account limit.  Weight(IP): 1

\itemize{
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{InlineResponse20026} \cr


\item status code : 200 | Number of enabled Isolated Margin Account and its limit

\item return type : InlineResponse20026 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MarginIsolatedAccountPost } \emph{ Enable Isolated Margin Account (TRADE) }
Enable isolated margin account for a specific symbol.  Weight(UID): 300

\itemize{
\item \emph{ @param } symbol character
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{InlineResponse20025} \cr


\item status code : 200 | Isolated Margin Account status

\item return type : InlineResponse20025 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MarginIsolatedAllPairsGet } \emph{ Get All Isolated Margin Symbol(USER_DATA) }
Weight(IP): 10

\itemize{
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } list( \link{inline_response_200_27} ) \cr


\item status code : 200 | All Isolated Margin Symbols

\item return type : array[InlineResponse20027] 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MarginIsolatedMarginDataGet } \emph{ Query Isolated Margin Fee Data (USER_DATA) }
Get isolated margin fee data collection with any vip level or user&#39;s current specific data as https://www.binance.com/en/margin-fee  Weight(IP): 1 when a single is specified; 10 when the symbol parameter is omitted

\itemize{
\item \emph{ @param } vip.level integer
\item \emph{ @param } symbol character
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } list( \link{inline_response_200_30} ) \cr


\item status code : 200 | Isolated Margin Fee Data

\item return type : array[InlineResponse20030] 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MarginIsolatedMarginTierGet } \emph{ Query Isolated Margin Tier Data (USER_DATA) }
Get isolated margin tier data collection with any tier as https://www.binance.com/en/margin-data  Weight(IP): 1

\itemize{
\item \emph{ @param } symbol character
\item \emph{ @param } tier character
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } list( \link{inline_response_200_31} ) \cr


\item status code : 200 | Isolated Margin Tier Data

\item return type : array[InlineResponse20031] 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MarginIsolatedPairGet } \emph{ Query Isolated Margin Symbol (USER_DATA) }
Weight(IP): 10

\itemize{
\item \emph{ @param } symbol character
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{InlineResponse20027} \cr


\item status code : 200 | Isolated Margin Symbol

\item return type : InlineResponse20027 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MarginIsolatedTransferGet } \emph{ Get Isolated Margin Transfer History (USER_DATA) }
Weight(IP): 1

\itemize{
\item \emph{ @param } symbol character
\item \emph{ @param } asset character
\item \emph{ @param } trans.from Enum < [SPOT, ISOLATED_MARGIN] >
\item \emph{ @param } trans.to Enum < [SPOT, ISOLATED_MARGIN] >
\item \emph{ @param } start.time integer
\item \emph{ @param } end.time integer
\item \emph{ @param } current integer
\item \emph{ @param } size integer
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{MarginTransferDetails} \cr


\item status code : 200 | Isolated Margin Transfer History

\item return type : MarginTransferDetails 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MarginIsolatedTransferPost } \emph{ Isolated Margin Account Transfer (MARGIN) }
Weight(UID): 600

\itemize{
\item \emph{ @param } asset character
\item \emph{ @param } symbol character
\item \emph{ @param } amount numeric
\item \emph{ @param } trans.from Enum < [SPOT, ISOLATED_MARGIN] >
\item \emph{ @param } trans.to Enum < [SPOT, ISOLATED_MARGIN] >
\item \emph{ @param } recv.window integer


\item status code : 200 | Transaction Id

\item return type : object 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MarginLoanGet } \emph{ Query Loan Record (USER_DATA) }
- &#x60;txId&#x60; or &#x60;startTime&#x60; must be sent. &#x60;txId&#x60; takes precedence. - Response in descending order - If &#x60;isolatedSymbol&#x60; is not sent, crossed margin data will be returned - Set &#x60;archived&#x60; to &#x60;true&#x60; to query data from 6 months ago  Weight(IP): 10

\itemize{
\item \emph{ @param } asset character
\item \emph{ @param } isolated.symbol character
\item \emph{ @param } tx.id integer
\item \emph{ @param } start.time integer
\item \emph{ @param } end.time integer
\item \emph{ @param } current integer
\item \emph{ @param } size integer
\item \emph{ @param } archived character
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{InlineResponse20010} \cr


\item status code : 200 | Loan records

\item return type : InlineResponse20010 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MarginLoanPost } \emph{ Margin Account Borrow (MARGIN) }
Apply for a loan.  - If \&quot;isIsolated\&quot; &#x3D; \&quot;TRUE\&quot;, \&quot;symbol\&quot; must be sent - \&quot;isIsolated\&quot; &#x3D; \&quot;FALSE\&quot; for crossed margin loan  Weight(UID): 3000

\itemize{
\item \emph{ @param } asset character
\item \emph{ @param } amount numeric
\item \emph{ @param } is.isolated Enum < [TRUE, FALSE] >
\item \emph{ @param } symbol character
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{Transaction} \cr


\item status code : 200 | Transaction id

\item return type : Transaction 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MarginMaxBorrowableGet } \emph{ Query Max Borrow (USER_DATA) }
- If &#x60;isolatedSymbol&#x60; is not sent, crossed margin data will be sent. - &#x60;borrowLimit&#x60; is also available from https://www.binance.com/en/margin-fee  Weight(IP): 50

\itemize{
\item \emph{ @param } asset character
\item \emph{ @param } isolated.symbol character
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{InlineResponse20023} \cr


\item status code : 200 | Details on max borrow amount

\item return type : InlineResponse20023 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MarginMaxTransferableGet } \emph{ Query Max Transfer-Out Amount (USER_DATA) }
- If &#x60;isolatedSymbol&#x60; is not sent, crossed margin data will be sent.  Weight(IP): 50

\itemize{
\item \emph{ @param } asset character
\item \emph{ @param } isolated.symbol character
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{InlineResponse20024} \cr


\item status code : 200 | Details on max transferable amount

\item return type : InlineResponse20024 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MarginMyTradesGet } \emph{ Query Margin Account&#39;s Trade List (USER_DATA) }
- If &#x60;fromId&#x60; is set, it will get orders &gt;&#x3D; that &#x60;fromId&#x60;. Otherwise most recent trades are returned.  Weight(IP): 10

\itemize{
\item \emph{ @param } symbol character
\item \emph{ @param } is.isolated Enum < [TRUE, FALSE] >
\item \emph{ @param } start.time integer
\item \emph{ @param } end.time integer
\item \emph{ @param } from.id integer
\item \emph{ @param } limit integer
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } list( \link{marginTrade} ) \cr


\item status code : 200 | List of margin trades

\item return type : array[MarginTrade] 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MarginOpenOrderListGet } \emph{ Query Margin Account&#39;s Open OCO (USER_DATA) }
Weight(IP): 10

\itemize{
\item \emph{ @param } is.isolated Enum < [TRUE, FALSE] >
\item \emph{ @param } symbol character
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } list( \link{inline_response_200_22} ) \cr


\item status code : 200 | List of Open Margin OCO orders

\item return type : array[InlineResponse20022] 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MarginOpenOrdersDelete } \emph{ Margin Account Cancel all Open Orders on a Symbol (TRADE) }
- Cancels all active orders on a symbol for margin account. - This includes OCO orders.  Weight(IP): 1 

\itemize{
\item \emph{ @param } symbol character
\item \emph{ @param } is.isolated Enum < [TRUE, FALSE] >
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } list( \link{anyOf&lt;canceledMarginOrderDetail,marginOcoOrder&gt;} ) \cr


\item status code : 200 | Cancelled margin orders

\item return type : array[AnyOfcanceledMarginOrderDetailmarginOcoOrder] 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MarginOpenOrdersGet } \emph{ Query Margin Account&#39;s Open Orders (USER_DATA) }
- If the &#x60;symbol&#x60; is not sent, orders for all symbols will be returned in an array. - When all symbols are returned, the number of requests counted against the rate limiter is equal to the number of symbols currently trading on the exchange - If isIsolated &#x3D;\&quot;TRUE\&quot;, symbol must be sent.  Weight(IP): 10

\itemize{
\item \emph{ @param } symbol character
\item \emph{ @param } is.isolated Enum < [TRUE, FALSE] >
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } list( \link{marginOrderDetail} ) \cr


\item status code : 200 | Margin open orders list

\item return type : array[MarginOrderDetail] 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MarginOrderDelete } \emph{ Margin Account Cancel Order (TRADE) }
Cancel an active order for margin account.  Either &#x60;orderId&#x60; or &#x60;origClientOrderId&#x60; must be sent.  Weight(IP): 10

\itemize{
\item \emph{ @param } symbol character
\item \emph{ @param } is.isolated Enum < [TRUE, FALSE] >
\item \emph{ @param } order.id integer
\item \emph{ @param } orig.client.order.id character
\item \emph{ @param } new.client.order.id character
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{MarginOrder} \cr


\item status code : 200 | Cancelled margin order details

\item return type : MarginOrder 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MarginOrderGet } \emph{ Query Margin Account&#39;s Order (USER_DATA) }
- Either &#x60;orderId&#x60; or &#x60;origClientOrderId&#x60; must be sent. - For some historical orders &#x60;cummulativeQuoteQty&#x60; will be &lt; 0, meaning the data is not available at this time.  Weight(IP): 10

\itemize{
\item \emph{ @param } symbol character
\item \emph{ @param } is.isolated Enum < [TRUE, FALSE] >
\item \emph{ @param } order.id integer
\item \emph{ @param } orig.client.order.id character
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{MarginOrderDetail} \cr


\item status code : 200 | Interest History, response in descending order

\item return type : MarginOrderDetail 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MarginOrderListDelete } \emph{ Margin Account Cancel OCO (TRADE) }
Cancel an entire Order List for a margin account  - Canceling an individual leg will cancel the entire OCO - Either &#x60;orderListId&#x60; or &#x60;listClientOrderId&#x60; must be provided  Weight(UID): 1

\itemize{
\item \emph{ @param } symbol character
\item \emph{ @param } is.isolated Enum < [TRUE, FALSE] >
\item \emph{ @param } order.list.id integer
\item \emph{ @param } list.client.order.id character
\item \emph{ @param } new.client.order.id character
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{MarginOcoOrder} \cr


\item status code : 200 | Margin OCO details

\item return type : MarginOcoOrder 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MarginOrderListGet } \emph{ Query Margin Account&#39;s OCO (USER_DATA) }
Retrieves a specific OCO based on provided optional parameters  - Either &#x60;orderListId&#x60; or &#x60;origClientOrderId&#x60; must be provided  Weight(IP): 10

\itemize{
\item \emph{ @param } is.isolated Enum < [TRUE, FALSE] >
\item \emph{ @param } symbol character
\item \emph{ @param } order.list.id integer
\item \emph{ @param } orig.client.order.id character
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{InlineResponse20021} \cr


\item status code : 200 | Margin OCO details

\item return type : InlineResponse20021 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MarginOrderOcoPost } \emph{ Margin Account New OCO (TRADE) }
Send in a new OCO for a margin account  - Price Restrictions:   - SELL: Limit Price &gt; Last Price &gt; Stop Price   - BUY: Limit Price &lt; Last Price &lt; Stop Price - Quantity Restrictions:   - Both legs must have the same quantity   - ICEBERG quantities however do not have to be the same. - Order Rate Limit   - OCO counts as 2 orders against the order rate limit.  Weight(UID): 6

\itemize{
\item \emph{ @param } symbol character
\item \emph{ @param } side Enum < [SELL, BUY] >
\item \emph{ @param } quantity numeric
\item \emph{ @param } price numeric
\item \emph{ @param } stop.price numeric
\item \emph{ @param } is.isolated Enum < [TRUE, FALSE] >
\item \emph{ @param } list.client.order.id character
\item \emph{ @param } limit.client.order.id character
\item \emph{ @param } limit.iceberg.qty numeric
\item \emph{ @param } stop.client.order.id character
\item \emph{ @param } stop.limit.price numeric
\item \emph{ @param } stop.iceberg.qty numeric
\item \emph{ @param } stop.limit.time.in.force Enum < [GTC, FOK, IOC] >
\item \emph{ @param } new.order.resp.type Enum < [ACK, RESULT, FULL] >
\item \emph{ @param } side.effect.type Enum < [NO_SIDE_EFFECT, MARGIN_BUY, AUTO_REPAY] >
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{InlineResponse20020} \cr


\item status code : 200 | New Margin OCO details

\item return type : InlineResponse20020 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MarginOrderPost } \emph{ Margin Account New Order (TRADE) }
Post a new order for margin account.  Weight(UID): 6

\itemize{
\item \emph{ @param } symbol character
\item \emph{ @param } side Enum < [SELL, BUY] >
\item \emph{ @param } type Enum < [LIMIT, MARKET, STOP_LOSS, STOP_LOSS_LIMIT, TAKE_PROFIT, TAKE_PROFIT_LIMIT, LIMIT_MAKER] >
\item \emph{ @param } quantity numeric
\item \emph{ @param } is.isolated Enum < [TRUE, FALSE] >
\item \emph{ @param } quote.order.qty numeric
\item \emph{ @param } price numeric
\item \emph{ @param } stop.price numeric
\item \emph{ @param } new.client.order.id character
\item \emph{ @param } iceberg.qty numeric
\item \emph{ @param } new.order.resp.type Enum < [ACK, RESULT, FULL] >
\item \emph{ @param } side.effect.type Enum < [NO_SIDE_EFFECT, MARGIN_BUY, AUTO_REPAY] >
\item \emph{ @param } time.in.force Enum < [GTC, IOC, FOK] >
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{OneOfmarginOrderResponseAckmarginOrderResponseResultmarginOrderResponseFull} \cr


\item status code : 200 | Margin order info

\item return type : OneOfmarginOrderResponseAckmarginOrderResponseResultmarginOrderResponseFull 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MarginPairGet } \emph{ Query Cross Margin Pair (MARKET_DATA) }
Weight(IP): 10

\itemize{
\item \emph{ @param } symbol character
\item \emph{ @returnType } \link{InlineResponse20013} \cr


\item status code : 200 | Margin pair details

\item return type : InlineResponse20013 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MarginPriceIndexGet } \emph{ Query Margin PriceIndex (MARKET_DATA) }
Weight(IP): 10

\itemize{
\item \emph{ @param } symbol character
\item \emph{ @returnType } \link{InlineResponse20016} \cr


\item status code : 200 | Price index

\item return type : InlineResponse20016 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MarginRepayGet } \emph{ Query Repay Record (USER_DATA) }
- &#x60;txId&#x60; or &#x60;startTime&#x60; must be sent. &#x60;txId&#x60; takes precedence. - Response in descending order - If &#x60;isolatedSymbol&#x60; is not sent, crossed margin data will be returned - Set &#x60;archived&#x60; to &#x60;true&#x60; to query data from 6 months ago  Weight(IP): 10

\itemize{
\item \emph{ @param } asset character
\item \emph{ @param } isolated.symbol character
\item \emph{ @param } tx.id integer
\item \emph{ @param } start.time integer
\item \emph{ @param } end.time integer
\item \emph{ @param } current integer
\item \emph{ @param } size integer
\item \emph{ @param } archived character
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{InlineResponse20011} \cr


\item status code : 200 | Load records

\item return type : InlineResponse20011 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MarginRepayPost } \emph{ Margin Account Repay (MARGIN) }
Repay loan for margin account.  - If \&quot;isIsolated\&quot; &#x3D; \&quot;TRUE\&quot;, \&quot;symbol\&quot; must be sent - \&quot;isIsolated\&quot; &#x3D; \&quot;FALSE\&quot; for crossed margin repay  Weight(IP): 3000

\itemize{
\item \emph{ @param } asset character
\item \emph{ @param } amount numeric
\item \emph{ @param } is.isolated Enum < [TRUE, FALSE] >
\item \emph{ @param } symbol character
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{Transaction} \cr


\item status code : 200 | Transaction id

\item return type : Transaction 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MarginTransferGet } \emph{ Get Cross Margin Transfer History (USER_DATA) }
- Response in descending order - Returns data for last 7 days by default - Set &#x60;archived&#x60; to &#x60;true&#x60; to query data from 6 months ago  Weight(IP): 1

\itemize{
\item \emph{ @param } asset character
\item \emph{ @param } type Enum < [ROLL_IN, ROLL_OUT] >
\item \emph{ @param } start.time integer
\item \emph{ @param } end.time integer
\item \emph{ @param } current integer
\item \emph{ @param } size integer
\item \emph{ @param } archived character
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{InlineResponse2009} \cr


\item status code : 200 | Margin account transfer history, response in descending order

\item return type : InlineResponse2009 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1MarginTransferPost } \emph{ Cross Margin Account Transfer (MARGIN) }
Execute transfer between spot account and cross margin account.  Weight(IP): 600

\itemize{
\item \emph{ @param } asset character
\item \emph{ @param } amount numeric
\item \emph{ @param } type Enum < [1, 2] >
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{Transaction} \cr


\item status code : 200 | Transfer Id

\item return type : Transaction 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

}
}

\examples{
\dontrun{
####################  SapiV1BnbBurnGet  ####################

library(binanceRapi)
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Get All Isolated Margin Symbol(USER_DATA)
api.instance <- MarginApi$new()

result <- api.instance$SapiV1BnbBurnGet(recv.window=var.recv.window)


####################  SapiV1BnbBurnPost  ####################

library(binanceRapi)
var.spot.bnb.burn <- 'true' # character | Determines whether to use BNB to pay for trading fees on SPOT
var.interest.bnb.burn <- 'false' # character | Determines whether to use BNB to pay for margin loan's interest
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Toggle BNB Burn On Spot Trade And Margin Interest (USER_DATA)
api.instance <- MarginApi$new()

result <- api.instance$SapiV1BnbBurnPost(spot.bnb.burn=var.spot.bnb.burn, interest.bnb.burn=var.interest.bnb.burn, recv.window=var.recv.window)


####################  SapiV1MarginAccountGet  ####################

library(binanceRapi)
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Query Cross Margin Account Details (USER_DATA)
api.instance <- MarginApi$new()

result <- api.instance$SapiV1MarginAccountGet(recv.window=var.recv.window)


####################  SapiV1MarginAllAssetsGet  ####################

library(binanceRapi)

#Get All Margin Assets (MARKET_DATA)
api.instance <- MarginApi$new()

result <- api.instance$SapiV1MarginAllAssetsGet()


####################  SapiV1MarginAllOrderListGet  ####################

library(binanceRapi)
var.is.isolated <- 'is.isolated_example' # character | For isolated margin or not, 'TRUE', 'FALSE', default 'FALSE'
var.symbol <- 'symbol_example' # character | Mandatory for isolated margin, not supported for cross margin
var.from.id <- 'from.id_example' # character | If supplied, neither `startTime` or `endTime` can be provided
var.start.time <- 56 # integer | UTC timestamp in ms
var.end.time <- 56 # integer | UTC timestamp in ms
var.limit <- 56 # integer | Default Value: 500; Max Value: 1000
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Query Margin Account's all OCO (USER_DATA)
api.instance <- MarginApi$new()

result <- api.instance$SapiV1MarginAllOrderListGet(is.isolated=var.is.isolated, symbol=var.symbol, from.id=var.from.id, start.time=var.start.time, end.time=var.end.time, limit=var.limit, recv.window=var.recv.window)


####################  SapiV1MarginAllOrdersGet  ####################

library(binanceRapi)
var.symbol <- 'BNBUSDT' # character | Trading symbol, e.g. BNBUSDT
var.is.isolated <- 'is.isolated_example' # character | For isolated margin or not, 'TRUE', 'FALSE', default 'FALSE'
var.order.id <- 56 # integer | Order id
var.start.time <- 56 # integer | UTC timestamp in ms
var.end.time <- 56 # integer | UTC timestamp in ms
var.limit <- 500 # integer | Default 500; max 1000.
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Query Margin Account's All Orders (USER_DATA)
api.instance <- MarginApi$new()

result <- api.instance$SapiV1MarginAllOrdersGet(var.symbol, is.isolated=var.is.isolated, order.id=var.order.id, start.time=var.start.time, end.time=var.end.time, limit=var.limit, recv.window=var.recv.window)


####################  SapiV1MarginAllPairsGet  ####################

library(binanceRapi)

#Get All Cross Margin Pairs (MARKET_DATA)
api.instance <- MarginApi$new()

result <- api.instance$SapiV1MarginAllPairsGet()


####################  SapiV1MarginAssetGet  ####################

library(binanceRapi)
var.asset <- 'BTC' # character | 

#Query Margin Asset (MARKET_DATA)
api.instance <- MarginApi$new()

result <- api.instance$SapiV1MarginAssetGet(var.asset)


####################  SapiV1MarginCrossMarginDataGet  ####################

library(binanceRapi)
var.vip.level <- 1 # integer | Defaults to user's vip level
var.coin <- 'BNB' # character | Coin name
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Query Cross Margin Fee Data (USER_DATA)
api.instance <- MarginApi$new()

result <- api.instance$SapiV1MarginCrossMarginDataGet(vip.level=var.vip.level, coin=var.coin, recv.window=var.recv.window)


####################  SapiV1MarginForceLiquidationRecGet  ####################

library(binanceRapi)
var.start.time <- 56 # integer | UTC timestamp in ms
var.end.time <- 56 # integer | UTC timestamp in ms
var.isolated.symbol <- 'isolated.symbol_example' # character | Isolated symbol
var.current <- 1 # integer | Current querying page. Start from 1. Default:1
var.size <- 100 # integer | Default:10 Max:100
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Get Force Liquidation Record (USER_DATA)
api.instance <- MarginApi$new()

result <- api.instance$SapiV1MarginForceLiquidationRecGet(start.time=var.start.time, end.time=var.end.time, isolated.symbol=var.isolated.symbol, current=var.current, size=var.size, recv.window=var.recv.window)


####################  SapiV1MarginInterestHistoryGet  ####################

library(binanceRapi)
var.asset <- 'BNB' # character | 
var.isolated.symbol <- 'isolated.symbol_example' # character | Isolated symbol
var.start.time <- 56 # integer | UTC timestamp in ms
var.end.time <- 56 # integer | UTC timestamp in ms
var.current <- 1 # integer | Current querying page. Start from 1. Default:1
var.size <- 100 # integer | Default:10 Max:100
var.archived <- 'archived_example' # character | Default: false. Set to true for archived data from 6 months ago
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Get Interest History (USER_DATA)
api.instance <- MarginApi$new()

result <- api.instance$SapiV1MarginInterestHistoryGet(asset=var.asset, isolated.symbol=var.isolated.symbol, start.time=var.start.time, end.time=var.end.time, current=var.current, size=var.size, archived=var.archived, recv.window=var.recv.window)


####################  SapiV1MarginInterestRateHistoryGet  ####################

library(binanceRapi)
var.asset <- 'BTC' # character | 
var.vip.level <- 1 # integer | Defaults to user's vip level
var.start.time <- 56 # integer | UTC timestamp in ms
var.end.time <- 56 # integer | UTC timestamp in ms
var.limit <- 500 # integer | Default 500; max 1000.
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Margin Interest Rate History (USER_DATA)
api.instance <- MarginApi$new()

result <- api.instance$SapiV1MarginInterestRateHistoryGet(var.asset, vip.level=var.vip.level, start.time=var.start.time, end.time=var.end.time, limit=var.limit, recv.window=var.recv.window)


####################  SapiV1MarginIsolatedAccountDelete  ####################

library(binanceRapi)
var.symbol <- 'BNBUSDT' # character | Trading symbol, e.g. BNBUSDT
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Disable Isolated Margin Account (TRADE)
api.instance <- MarginApi$new()

result <- api.instance$SapiV1MarginIsolatedAccountDelete(var.symbol, recv.window=var.recv.window)


####################  SapiV1MarginIsolatedAccountGet  ####################

library(binanceRapi)
var.symbols <- 'BTCUSDT,BNBUSDT,ADAUSDT' # character | Max 5 symbols can be sent; separated by ','
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Query Isolated Margin Account Info (USER_DATA)
api.instance <- MarginApi$new()

result <- api.instance$SapiV1MarginIsolatedAccountGet(symbols=var.symbols, recv.window=var.recv.window)


####################  SapiV1MarginIsolatedAccountLimitGet  ####################

library(binanceRapi)
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Query Enabled Isolated Margin Account Limit (USER_DATA)
api.instance <- MarginApi$new()

result <- api.instance$SapiV1MarginIsolatedAccountLimitGet(recv.window=var.recv.window)


####################  SapiV1MarginIsolatedAccountPost  ####################

library(binanceRapi)
var.symbol <- 'BNBUSDT' # character | Trading symbol, e.g. BNBUSDT
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Enable Isolated Margin Account (TRADE)
api.instance <- MarginApi$new()

result <- api.instance$SapiV1MarginIsolatedAccountPost(var.symbol, recv.window=var.recv.window)


####################  SapiV1MarginIsolatedAllPairsGet  ####################

library(binanceRapi)
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Get All Isolated Margin Symbol(USER_DATA)
api.instance <- MarginApi$new()

result <- api.instance$SapiV1MarginIsolatedAllPairsGet(recv.window=var.recv.window)


####################  SapiV1MarginIsolatedMarginDataGet  ####################

library(binanceRapi)
var.vip.level <- 1 # integer | Defaults to user's vip level
var.symbol <- 'BNBUSDT' # character | Trading symbol, e.g. BNBUSDT
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Query Isolated Margin Fee Data (USER_DATA)
api.instance <- MarginApi$new()

result <- api.instance$SapiV1MarginIsolatedMarginDataGet(vip.level=var.vip.level, symbol=var.symbol, recv.window=var.recv.window)


####################  SapiV1MarginIsolatedMarginTierGet  ####################

library(binanceRapi)
var.symbol <- 'BNBUSDT' # character | Trading symbol, e.g. BNBUSDT
var.tier <- '1' # character | All margin tier data will be returned if tier is omitted
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Query Isolated Margin Tier Data (USER_DATA)
api.instance <- MarginApi$new()

result <- api.instance$SapiV1MarginIsolatedMarginTierGet(var.symbol, tier=var.tier, recv.window=var.recv.window)


####################  SapiV1MarginIsolatedPairGet  ####################

library(binanceRapi)
var.symbol <- 'BNBUSDT' # character | Trading symbol, e.g. BNBUSDT
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Query Isolated Margin Symbol (USER_DATA)
api.instance <- MarginApi$new()

result <- api.instance$SapiV1MarginIsolatedPairGet(var.symbol, recv.window=var.recv.window)


####################  SapiV1MarginIsolatedTransferGet  ####################

library(binanceRapi)
var.symbol <- 'BNBUSDT' # character | Trading symbol, e.g. BNBUSDT
var.asset <- 'BNB' # character | 
var.trans.from <- 'SPOT' # character | 
var.trans.to <- 'ISOLATED_MARGIN' # character | 
var.start.time <- 56 # integer | UTC timestamp in ms
var.end.time <- 56 # integer | UTC timestamp in ms
var.current <- 1 # integer | Current querying page. Start from 1. Default:1
var.size <- 100 # integer | Default:10 Max:100
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Get Isolated Margin Transfer History (USER_DATA)
api.instance <- MarginApi$new()

result <- api.instance$SapiV1MarginIsolatedTransferGet(var.symbol, asset=var.asset, trans.from=var.trans.from, trans.to=var.trans.to, start.time=var.start.time, end.time=var.end.time, current=var.current, size=var.size, recv.window=var.recv.window)


####################  SapiV1MarginIsolatedTransferPost  ####################

library(binanceRapi)
var.asset <- 'BTC' # character | 
var.symbol <- 'BNBUSDT' # character | Trading symbol, e.g. BNBUSDT
var.amount <- 1.01 # numeric | 
var.trans.from <- 'SPOT' # character | 
var.trans.to <- 'ISOLATED_MARGIN' # character | 
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Isolated Margin Account Transfer (MARGIN)
api.instance <- MarginApi$new()

result <- api.instance$SapiV1MarginIsolatedTransferPost(var.asset, var.symbol, var.amount, trans.from=var.trans.from, trans.to=var.trans.to, recv.window=var.recv.window)


####################  SapiV1MarginLoanGet  ####################

library(binanceRapi)
var.asset <- 'BTC' # character | 
var.isolated.symbol <- 'isolated.symbol_example' # character | Isolated symbol
var.tx.id <- 123456789 # integer | the tranId in  `POST /sapi/v1/margin/loan`
var.start.time <- 56 # integer | UTC timestamp in ms
var.end.time <- 56 # integer | UTC timestamp in ms
var.current <- 1 # integer | Current querying page. Start from 1. Default:1
var.size <- 100 # integer | Default:10 Max:100
var.archived <- 'archived_example' # character | Default: false. Set to true for archived data from 6 months ago
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Query Loan Record (USER_DATA)
api.instance <- MarginApi$new()

result <- api.instance$SapiV1MarginLoanGet(var.asset, isolated.symbol=var.isolated.symbol, tx.id=var.tx.id, start.time=var.start.time, end.time=var.end.time, current=var.current, size=var.size, archived=var.archived, recv.window=var.recv.window)


####################  SapiV1MarginLoanPost  ####################

library(binanceRapi)
var.asset <- 'BTC' # character | 
var.amount <- 1.01 # numeric | 
var.is.isolated <- 'is.isolated_example' # character | For isolated margin or not, 'TRUE', 'FALSE', default 'FALSE'
var.symbol <- 'BNBUSDT' # character | Trading symbol, e.g. BNBUSDT
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Margin Account Borrow (MARGIN)
api.instance <- MarginApi$new()

result <- api.instance$SapiV1MarginLoanPost(var.asset, var.amount, is.isolated=var.is.isolated, symbol=var.symbol, recv.window=var.recv.window)


####################  SapiV1MarginMaxBorrowableGet  ####################

library(binanceRapi)
var.asset <- 'BTC' # character | 
var.isolated.symbol <- 'isolated.symbol_example' # character | Isolated symbol
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Query Max Borrow (USER_DATA)
api.instance <- MarginApi$new()

result <- api.instance$SapiV1MarginMaxBorrowableGet(var.asset, isolated.symbol=var.isolated.symbol, recv.window=var.recv.window)


####################  SapiV1MarginMaxTransferableGet  ####################

library(binanceRapi)
var.asset <- 'BTC' # character | 
var.isolated.symbol <- 'isolated.symbol_example' # character | Isolated symbol
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Query Max Transfer-Out Amount (USER_DATA)
api.instance <- MarginApi$new()

result <- api.instance$SapiV1MarginMaxTransferableGet(var.asset, isolated.symbol=var.isolated.symbol, recv.window=var.recv.window)


####################  SapiV1MarginMyTradesGet  ####################

library(binanceRapi)
var.symbol <- 'BNBUSDT' # character | Trading symbol, e.g. BNBUSDT
var.is.isolated <- 'is.isolated_example' # character | For isolated margin or not, 'TRUE', 'FALSE', default 'FALSE'
var.start.time <- 56 # integer | UTC timestamp in ms
var.end.time <- 56 # integer | UTC timestamp in ms
var.from.id <- 56 # integer | Trade id to fetch from. Default gets most recent trades.
var.limit <- 500 # integer | Default 500; max 1000.
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Query Margin Account's Trade List (USER_DATA)
api.instance <- MarginApi$new()

result <- api.instance$SapiV1MarginMyTradesGet(var.symbol, is.isolated=var.is.isolated, start.time=var.start.time, end.time=var.end.time, from.id=var.from.id, limit=var.limit, recv.window=var.recv.window)


####################  SapiV1MarginOpenOrderListGet  ####################

library(binanceRapi)
var.is.isolated <- 'is.isolated_example' # character | For isolated margin or not, 'TRUE', 'FALSE', default 'FALSE'
var.symbol <- 'symbol_example' # character | Mandatory for isolated margin, not supported for cross margin
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Query Margin Account's Open OCO (USER_DATA)
api.instance <- MarginApi$new()

result <- api.instance$SapiV1MarginOpenOrderListGet(is.isolated=var.is.isolated, symbol=var.symbol, recv.window=var.recv.window)


####################  SapiV1MarginOpenOrdersDelete  ####################

library(binanceRapi)
var.symbol <- 'BNBUSDT' # character | Trading symbol, e.g. BNBUSDT
var.is.isolated <- 'is.isolated_example' # character | For isolated margin or not, 'TRUE', 'FALSE', default 'FALSE'
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Margin Account Cancel all Open Orders on a Symbol (TRADE)
api.instance <- MarginApi$new()

result <- api.instance$SapiV1MarginOpenOrdersDelete(var.symbol, is.isolated=var.is.isolated, recv.window=var.recv.window)


####################  SapiV1MarginOpenOrdersGet  ####################

library(binanceRapi)
var.symbol <- 'BNBUSDT' # character | Trading symbol, e.g. BNBUSDT
var.is.isolated <- 'is.isolated_example' # character | For isolated margin or not, 'TRUE', 'FALSE', default 'FALSE'
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Query Margin Account's Open Orders (USER_DATA)
api.instance <- MarginApi$new()

result <- api.instance$SapiV1MarginOpenOrdersGet(symbol=var.symbol, is.isolated=var.is.isolated, recv.window=var.recv.window)


####################  SapiV1MarginOrderDelete  ####################

library(binanceRapi)
var.symbol <- 'BNBUSDT' # character | Trading symbol, e.g. BNBUSDT
var.is.isolated <- 'is.isolated_example' # character | For isolated margin or not, 'TRUE', 'FALSE', default 'FALSE'
var.order.id <- 56 # integer | Order id
var.orig.client.order.id <- 'orig.client.order.id_example' # character | Order id from client
var.new.client.order.id <- 'new.client.order.id_example' # character | Used to uniquely identify this cancel. Automatically generated by default
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Margin Account Cancel Order (TRADE)
api.instance <- MarginApi$new()

result <- api.instance$SapiV1MarginOrderDelete(var.symbol, is.isolated=var.is.isolated, order.id=var.order.id, orig.client.order.id=var.orig.client.order.id, new.client.order.id=var.new.client.order.id, recv.window=var.recv.window)


####################  SapiV1MarginOrderGet  ####################

library(binanceRapi)
var.symbol <- 'BNBUSDT' # character | Trading symbol, e.g. BNBUSDT
var.is.isolated <- 'is.isolated_example' # character | For isolated margin or not, 'TRUE', 'FALSE', default 'FALSE'
var.order.id <- 56 # integer | Order id
var.orig.client.order.id <- 'orig.client.order.id_example' # character | Order id from client
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Query Margin Account's Order (USER_DATA)
api.instance <- MarginApi$new()

result <- api.instance$SapiV1MarginOrderGet(var.symbol, is.isolated=var.is.isolated, order.id=var.order.id, orig.client.order.id=var.orig.client.order.id, recv.window=var.recv.window)


####################  SapiV1MarginOrderListDelete  ####################

library(binanceRapi)
var.symbol <- 'BNBUSDT' # character | Trading symbol, e.g. BNBUSDT
var.is.isolated <- 'is.isolated_example' # character | For isolated margin or not, 'TRUE', 'FALSE', default 'FALSE'
var.order.list.id <- 56 # integer | Order list id
var.list.client.order.id <- 'list.client.order.id_example' # character | A unique Id for the entire orderList
var.new.client.order.id <- 'new.client.order.id_example' # character | Used to uniquely identify this cancel. Automatically generated by default
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Margin Account Cancel OCO (TRADE)
api.instance <- MarginApi$new()

result <- api.instance$SapiV1MarginOrderListDelete(var.symbol, is.isolated=var.is.isolated, order.list.id=var.order.list.id, list.client.order.id=var.list.client.order.id, new.client.order.id=var.new.client.order.id, recv.window=var.recv.window)


####################  SapiV1MarginOrderListGet  ####################

library(binanceRapi)
var.is.isolated <- 'is.isolated_example' # character | For isolated margin or not, 'TRUE', 'FALSE', default 'FALSE'
var.symbol <- 'symbol_example' # character | Mandatory for isolated margin, not supported for cross margin
var.order.list.id <- 56 # integer | Order list id
var.orig.client.order.id <- 'orig.client.order.id_example' # character | Order id from client
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Query Margin Account's OCO (USER_DATA)
api.instance <- MarginApi$new()

result <- api.instance$SapiV1MarginOrderListGet(is.isolated=var.is.isolated, symbol=var.symbol, order.list.id=var.order.list.id, orig.client.order.id=var.orig.client.order.id, recv.window=var.recv.window)


####################  SapiV1MarginOrderOcoPost  ####################

library(binanceRapi)
var.symbol <- 'BNBUSDT' # character | Trading symbol, e.g. BNBUSDT
var.side <- 'SELL' # character | SELL or BUY
var.quantity <- 3.4 # numeric | 
var.price <- 3.4 # numeric | Order price
var.stop.price <- 3.4 # numeric | 
var.is.isolated <- 'is.isolated_example' # character | For isolated margin or not, 'TRUE', 'FALSE', default 'FALSE'
var.list.client.order.id <- 'list.client.order.id_example' # character | A unique Id for the entire orderList
var.limit.client.order.id <- 'limit.client.order.id_example' # character | A unique Id for the limit order
var.limit.iceberg.qty <- 3.4 # numeric | 
var.stop.client.order.id <- 'stop.client.order.id_example' # character | A unique Id for the stop loss/stop loss limit leg
var.stop.limit.price <- 3.4 # numeric | If provided, stopLimitTimeInForce is required.
var.stop.iceberg.qty <- 3.4 # numeric | 
var.stop.limit.time.in.force <- 'stop.limit.time.in.force_example' # character | 
var.new.order.resp.type <- 'new.order.resp.type_example' # character | Set the response JSON.
var.side.effect.type <- 'side.effect.type_example' # character | Default NO_SIDE_EFFECT
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Margin Account New OCO (TRADE)
api.instance <- MarginApi$new()

result <- api.instance$SapiV1MarginOrderOcoPost(var.symbol, var.side, var.quantity, var.price, var.stop.price, is.isolated=var.is.isolated, list.client.order.id=var.list.client.order.id, limit.client.order.id=var.limit.client.order.id, limit.iceberg.qty=var.limit.iceberg.qty, stop.client.order.id=var.stop.client.order.id, stop.limit.price=var.stop.limit.price, stop.iceberg.qty=var.stop.iceberg.qty, stop.limit.time.in.force=var.stop.limit.time.in.force, new.order.resp.type=var.new.order.resp.type, side.effect.type=var.side.effect.type, recv.window=var.recv.window)


####################  SapiV1MarginOrderPost  ####################

library(binanceRapi)
var.symbol <- 'BNBUSDT' # character | Trading symbol, e.g. BNBUSDT
var.side <- 'SELL' # character | SELL or BUY
var.type <- 'type_example' # character | Order type
var.quantity <- 3.4 # numeric | 
var.is.isolated <- 'is.isolated_example' # character | For isolated margin or not, 'TRUE', 'FALSE', default 'FALSE'
var.quote.order.qty <- 3.4 # numeric | Quote quantity
var.price <- 3.4 # numeric | Order price
var.stop.price <- 20.01 # numeric | Used with STOP_LOSS, STOP_LOSS_LIMIT, TAKE_PROFIT, and TAKE_PROFIT_LIMIT orders.
var.new.client.order.id <- 'new.client.order.id_example' # character | Used to uniquely identify this cancel. Automatically generated by default
var.iceberg.qty <- 3.4 # numeric | Used with LIMIT, STOP_LOSS_LIMIT, and TAKE_PROFIT_LIMIT to create an iceberg order.
var.new.order.resp.type <- 'new.order.resp.type_example' # character | Set the response JSON.
var.side.effect.type <- 'side.effect.type_example' # character | Default NO_SIDE_EFFECT
var.time.in.force <- 'time.in.force_example' # character | Order time in force
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Margin Account New Order (TRADE)
api.instance <- MarginApi$new()

result <- api.instance$SapiV1MarginOrderPost(var.symbol, var.side, var.type, var.quantity, is.isolated=var.is.isolated, quote.order.qty=var.quote.order.qty, price=var.price, stop.price=var.stop.price, new.client.order.id=var.new.client.order.id, iceberg.qty=var.iceberg.qty, new.order.resp.type=var.new.order.resp.type, side.effect.type=var.side.effect.type, time.in.force=var.time.in.force, recv.window=var.recv.window)


####################  SapiV1MarginPairGet  ####################

library(binanceRapi)
var.symbol <- 'BNBUSDT' # character | Trading symbol, e.g. BNBUSDT

#Query Cross Margin Pair (MARKET_DATA)
api.instance <- MarginApi$new()

result <- api.instance$SapiV1MarginPairGet(var.symbol)


####################  SapiV1MarginPriceIndexGet  ####################

library(binanceRapi)
var.symbol <- 'BNBUSDT' # character | Trading symbol, e.g. BNBUSDT

#Query Margin PriceIndex (MARKET_DATA)
api.instance <- MarginApi$new()

result <- api.instance$SapiV1MarginPriceIndexGet(var.symbol)


####################  SapiV1MarginRepayGet  ####################

library(binanceRapi)
var.asset <- 'BTC' # character | 
var.isolated.symbol <- 'isolated.symbol_example' # character | Isolated symbol
var.tx.id <- 2970933056 # integer | the tranId in  `POST /sapi/v1/margin/repay`
var.start.time <- 56 # integer | UTC timestamp in ms
var.end.time <- 56 # integer | UTC timestamp in ms
var.current <- 1 # integer | Current querying page. Start from 1. Default:1
var.size <- 100 # integer | Default:10 Max:100
var.archived <- 'archived_example' # character | Default: false. Set to true for archived data from 6 months ago
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Query Repay Record (USER_DATA)
api.instance <- MarginApi$new()

result <- api.instance$SapiV1MarginRepayGet(var.asset, isolated.symbol=var.isolated.symbol, tx.id=var.tx.id, start.time=var.start.time, end.time=var.end.time, current=var.current, size=var.size, archived=var.archived, recv.window=var.recv.window)


####################  SapiV1MarginRepayPost  ####################

library(binanceRapi)
var.asset <- 'BTC' # character | 
var.amount <- 1.01 # numeric | 
var.is.isolated <- 'is.isolated_example' # character | For isolated margin or not, 'TRUE', 'FALSE', default 'FALSE'
var.symbol <- 'BNBUSDT' # character | Trading symbol, e.g. BNBUSDT
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Margin Account Repay (MARGIN)
api.instance <- MarginApi$new()

result <- api.instance$SapiV1MarginRepayPost(var.asset, var.amount, is.isolated=var.is.isolated, symbol=var.symbol, recv.window=var.recv.window)


####################  SapiV1MarginTransferGet  ####################

library(binanceRapi)
var.asset <- 'BNB' # character | 
var.type <- 'type_example' # character | Tranfer Type
var.start.time <- 56 # integer | UTC timestamp in ms
var.end.time <- 56 # integer | UTC timestamp in ms
var.current <- 1 # integer | Current querying page. Start from 1. Default:1
var.size <- 100 # integer | Default:10 Max:100
var.archived <- 'archived_example' # character | Default: false. Set to true for archived data from 6 months ago
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Get Cross Margin Transfer History (USER_DATA)
api.instance <- MarginApi$new()

result <- api.instance$SapiV1MarginTransferGet(asset=var.asset, type=var.type, start.time=var.start.time, end.time=var.end.time, current=var.current, size=var.size, archived=var.archived, recv.window=var.recv.window)


####################  SapiV1MarginTransferPost  ####################

library(binanceRapi)
var.asset <- 'BTC' # character | 
var.amount <- 1.01 # numeric | 
var.type <- 56 # integer | 1 -> transfer from main account to margin account \\ 2 -> transfer from margin account to main account
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Cross Margin Account Transfer (MARGIN)
api.instance <- MarginApi$new()

result <- api.instance$SapiV1MarginTransferPost(var.asset, var.amount, type=var.type, recv.window=var.recv.window)


}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{apiClient}}{Handles the client-server communication.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{MarginApi$new()}}
\item \href{#method-SapiV1BnbBurnGet}{\code{MarginApi$SapiV1BnbBurnGet()}}
\item \href{#method-SapiV1BnbBurnGetWithHttpInfo}{\code{MarginApi$SapiV1BnbBurnGetWithHttpInfo()}}
\item \href{#method-SapiV1BnbBurnPost}{\code{MarginApi$SapiV1BnbBurnPost()}}
\item \href{#method-SapiV1BnbBurnPostWithHttpInfo}{\code{MarginApi$SapiV1BnbBurnPostWithHttpInfo()}}
\item \href{#method-SapiV1MarginAccountGet}{\code{MarginApi$SapiV1MarginAccountGet()}}
\item \href{#method-SapiV1MarginAccountGetWithHttpInfo}{\code{MarginApi$SapiV1MarginAccountGetWithHttpInfo()}}
\item \href{#method-SapiV1MarginAllAssetsGet}{\code{MarginApi$SapiV1MarginAllAssetsGet()}}
\item \href{#method-SapiV1MarginAllAssetsGetWithHttpInfo}{\code{MarginApi$SapiV1MarginAllAssetsGetWithHttpInfo()}}
\item \href{#method-SapiV1MarginAllOrderListGet}{\code{MarginApi$SapiV1MarginAllOrderListGet()}}
\item \href{#method-SapiV1MarginAllOrderListGetWithHttpInfo}{\code{MarginApi$SapiV1MarginAllOrderListGetWithHttpInfo()}}
\item \href{#method-SapiV1MarginAllOrdersGet}{\code{MarginApi$SapiV1MarginAllOrdersGet()}}
\item \href{#method-SapiV1MarginAllOrdersGetWithHttpInfo}{\code{MarginApi$SapiV1MarginAllOrdersGetWithHttpInfo()}}
\item \href{#method-SapiV1MarginAllPairsGet}{\code{MarginApi$SapiV1MarginAllPairsGet()}}
\item \href{#method-SapiV1MarginAllPairsGetWithHttpInfo}{\code{MarginApi$SapiV1MarginAllPairsGetWithHttpInfo()}}
\item \href{#method-SapiV1MarginAssetGet}{\code{MarginApi$SapiV1MarginAssetGet()}}
\item \href{#method-SapiV1MarginAssetGetWithHttpInfo}{\code{MarginApi$SapiV1MarginAssetGetWithHttpInfo()}}
\item \href{#method-SapiV1MarginCrossMarginDataGet}{\code{MarginApi$SapiV1MarginCrossMarginDataGet()}}
\item \href{#method-SapiV1MarginCrossMarginDataGetWithHttpInfo}{\code{MarginApi$SapiV1MarginCrossMarginDataGetWithHttpInfo()}}
\item \href{#method-SapiV1MarginForceLiquidationRecGet}{\code{MarginApi$SapiV1MarginForceLiquidationRecGet()}}
\item \href{#method-SapiV1MarginForceLiquidationRecGetWithHttpInfo}{\code{MarginApi$SapiV1MarginForceLiquidationRecGetWithHttpInfo()}}
\item \href{#method-SapiV1MarginInterestHistoryGet}{\code{MarginApi$SapiV1MarginInterestHistoryGet()}}
\item \href{#method-SapiV1MarginInterestHistoryGetWithHttpInfo}{\code{MarginApi$SapiV1MarginInterestHistoryGetWithHttpInfo()}}
\item \href{#method-SapiV1MarginInterestRateHistoryGet}{\code{MarginApi$SapiV1MarginInterestRateHistoryGet()}}
\item \href{#method-SapiV1MarginInterestRateHistoryGetWithHttpInfo}{\code{MarginApi$SapiV1MarginInterestRateHistoryGetWithHttpInfo()}}
\item \href{#method-SapiV1MarginIsolatedAccountDelete}{\code{MarginApi$SapiV1MarginIsolatedAccountDelete()}}
\item \href{#method-SapiV1MarginIsolatedAccountDeleteWithHttpInfo}{\code{MarginApi$SapiV1MarginIsolatedAccountDeleteWithHttpInfo()}}
\item \href{#method-SapiV1MarginIsolatedAccountGet}{\code{MarginApi$SapiV1MarginIsolatedAccountGet()}}
\item \href{#method-SapiV1MarginIsolatedAccountGetWithHttpInfo}{\code{MarginApi$SapiV1MarginIsolatedAccountGetWithHttpInfo()}}
\item \href{#method-SapiV1MarginIsolatedAccountLimitGet}{\code{MarginApi$SapiV1MarginIsolatedAccountLimitGet()}}
\item \href{#method-SapiV1MarginIsolatedAccountLimitGetWithHttpInfo}{\code{MarginApi$SapiV1MarginIsolatedAccountLimitGetWithHttpInfo()}}
\item \href{#method-SapiV1MarginIsolatedAccountPost}{\code{MarginApi$SapiV1MarginIsolatedAccountPost()}}
\item \href{#method-SapiV1MarginIsolatedAccountPostWithHttpInfo}{\code{MarginApi$SapiV1MarginIsolatedAccountPostWithHttpInfo()}}
\item \href{#method-SapiV1MarginIsolatedAllPairsGet}{\code{MarginApi$SapiV1MarginIsolatedAllPairsGet()}}
\item \href{#method-SapiV1MarginIsolatedAllPairsGetWithHttpInfo}{\code{MarginApi$SapiV1MarginIsolatedAllPairsGetWithHttpInfo()}}
\item \href{#method-SapiV1MarginIsolatedMarginDataGet}{\code{MarginApi$SapiV1MarginIsolatedMarginDataGet()}}
\item \href{#method-SapiV1MarginIsolatedMarginDataGetWithHttpInfo}{\code{MarginApi$SapiV1MarginIsolatedMarginDataGetWithHttpInfo()}}
\item \href{#method-SapiV1MarginIsolatedMarginTierGet}{\code{MarginApi$SapiV1MarginIsolatedMarginTierGet()}}
\item \href{#method-SapiV1MarginIsolatedMarginTierGetWithHttpInfo}{\code{MarginApi$SapiV1MarginIsolatedMarginTierGetWithHttpInfo()}}
\item \href{#method-SapiV1MarginIsolatedPairGet}{\code{MarginApi$SapiV1MarginIsolatedPairGet()}}
\item \href{#method-SapiV1MarginIsolatedPairGetWithHttpInfo}{\code{MarginApi$SapiV1MarginIsolatedPairGetWithHttpInfo()}}
\item \href{#method-SapiV1MarginIsolatedTransferGet}{\code{MarginApi$SapiV1MarginIsolatedTransferGet()}}
\item \href{#method-SapiV1MarginIsolatedTransferGetWithHttpInfo}{\code{MarginApi$SapiV1MarginIsolatedTransferGetWithHttpInfo()}}
\item \href{#method-SapiV1MarginIsolatedTransferPost}{\code{MarginApi$SapiV1MarginIsolatedTransferPost()}}
\item \href{#method-SapiV1MarginIsolatedTransferPostWithHttpInfo}{\code{MarginApi$SapiV1MarginIsolatedTransferPostWithHttpInfo()}}
\item \href{#method-SapiV1MarginLoanGet}{\code{MarginApi$SapiV1MarginLoanGet()}}
\item \href{#method-SapiV1MarginLoanGetWithHttpInfo}{\code{MarginApi$SapiV1MarginLoanGetWithHttpInfo()}}
\item \href{#method-SapiV1MarginLoanPost}{\code{MarginApi$SapiV1MarginLoanPost()}}
\item \href{#method-SapiV1MarginLoanPostWithHttpInfo}{\code{MarginApi$SapiV1MarginLoanPostWithHttpInfo()}}
\item \href{#method-SapiV1MarginMaxBorrowableGet}{\code{MarginApi$SapiV1MarginMaxBorrowableGet()}}
\item \href{#method-SapiV1MarginMaxBorrowableGetWithHttpInfo}{\code{MarginApi$SapiV1MarginMaxBorrowableGetWithHttpInfo()}}
\item \href{#method-SapiV1MarginMaxTransferableGet}{\code{MarginApi$SapiV1MarginMaxTransferableGet()}}
\item \href{#method-SapiV1MarginMaxTransferableGetWithHttpInfo}{\code{MarginApi$SapiV1MarginMaxTransferableGetWithHttpInfo()}}
\item \href{#method-SapiV1MarginMyTradesGet}{\code{MarginApi$SapiV1MarginMyTradesGet()}}
\item \href{#method-SapiV1MarginMyTradesGetWithHttpInfo}{\code{MarginApi$SapiV1MarginMyTradesGetWithHttpInfo()}}
\item \href{#method-SapiV1MarginOpenOrderListGet}{\code{MarginApi$SapiV1MarginOpenOrderListGet()}}
\item \href{#method-SapiV1MarginOpenOrderListGetWithHttpInfo}{\code{MarginApi$SapiV1MarginOpenOrderListGetWithHttpInfo()}}
\item \href{#method-SapiV1MarginOpenOrdersDelete}{\code{MarginApi$SapiV1MarginOpenOrdersDelete()}}
\item \href{#method-SapiV1MarginOpenOrdersDeleteWithHttpInfo}{\code{MarginApi$SapiV1MarginOpenOrdersDeleteWithHttpInfo()}}
\item \href{#method-SapiV1MarginOpenOrdersGet}{\code{MarginApi$SapiV1MarginOpenOrdersGet()}}
\item \href{#method-SapiV1MarginOpenOrdersGetWithHttpInfo}{\code{MarginApi$SapiV1MarginOpenOrdersGetWithHttpInfo()}}
\item \href{#method-SapiV1MarginOrderDelete}{\code{MarginApi$SapiV1MarginOrderDelete()}}
\item \href{#method-SapiV1MarginOrderDeleteWithHttpInfo}{\code{MarginApi$SapiV1MarginOrderDeleteWithHttpInfo()}}
\item \href{#method-SapiV1MarginOrderGet}{\code{MarginApi$SapiV1MarginOrderGet()}}
\item \href{#method-SapiV1MarginOrderGetWithHttpInfo}{\code{MarginApi$SapiV1MarginOrderGetWithHttpInfo()}}
\item \href{#method-SapiV1MarginOrderListDelete}{\code{MarginApi$SapiV1MarginOrderListDelete()}}
\item \href{#method-SapiV1MarginOrderListDeleteWithHttpInfo}{\code{MarginApi$SapiV1MarginOrderListDeleteWithHttpInfo()}}
\item \href{#method-SapiV1MarginOrderListGet}{\code{MarginApi$SapiV1MarginOrderListGet()}}
\item \href{#method-SapiV1MarginOrderListGetWithHttpInfo}{\code{MarginApi$SapiV1MarginOrderListGetWithHttpInfo()}}
\item \href{#method-SapiV1MarginOrderOcoPost}{\code{MarginApi$SapiV1MarginOrderOcoPost()}}
\item \href{#method-SapiV1MarginOrderOcoPostWithHttpInfo}{\code{MarginApi$SapiV1MarginOrderOcoPostWithHttpInfo()}}
\item \href{#method-SapiV1MarginOrderPost}{\code{MarginApi$SapiV1MarginOrderPost()}}
\item \href{#method-SapiV1MarginOrderPostWithHttpInfo}{\code{MarginApi$SapiV1MarginOrderPostWithHttpInfo()}}
\item \href{#method-SapiV1MarginPairGet}{\code{MarginApi$SapiV1MarginPairGet()}}
\item \href{#method-SapiV1MarginPairGetWithHttpInfo}{\code{MarginApi$SapiV1MarginPairGetWithHttpInfo()}}
\item \href{#method-SapiV1MarginPriceIndexGet}{\code{MarginApi$SapiV1MarginPriceIndexGet()}}
\item \href{#method-SapiV1MarginPriceIndexGetWithHttpInfo}{\code{MarginApi$SapiV1MarginPriceIndexGetWithHttpInfo()}}
\item \href{#method-SapiV1MarginRepayGet}{\code{MarginApi$SapiV1MarginRepayGet()}}
\item \href{#method-SapiV1MarginRepayGetWithHttpInfo}{\code{MarginApi$SapiV1MarginRepayGetWithHttpInfo()}}
\item \href{#method-SapiV1MarginRepayPost}{\code{MarginApi$SapiV1MarginRepayPost()}}
\item \href{#method-SapiV1MarginRepayPostWithHttpInfo}{\code{MarginApi$SapiV1MarginRepayPostWithHttpInfo()}}
\item \href{#method-SapiV1MarginTransferGet}{\code{MarginApi$SapiV1MarginTransferGet()}}
\item \href{#method-SapiV1MarginTransferGetWithHttpInfo}{\code{MarginApi$SapiV1MarginTransferGetWithHttpInfo()}}
\item \href{#method-SapiV1MarginTransferPost}{\code{MarginApi$SapiV1MarginTransferPost()}}
\item \href{#method-SapiV1MarginTransferPostWithHttpInfo}{\code{MarginApi$SapiV1MarginTransferPostWithHttpInfo()}}
\item \href{#method-clone}{\code{MarginApi$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$new(apiClient)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1BnbBurnGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1BnbBurnGet}{}}}
\subsection{Method \code{SapiV1BnbBurnGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1BnbBurnGet(recv.window = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1BnbBurnGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1BnbBurnGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1BnbBurnGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1BnbBurnGetWithHttpInfo(recv.window = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1BnbBurnPost"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1BnbBurnPost}{}}}
\subsection{Method \code{SapiV1BnbBurnPost()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1BnbBurnPost(
  spot.bnb.burn = NULL,
  interest.bnb.burn = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1BnbBurnPostWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1BnbBurnPostWithHttpInfo}{}}}
\subsection{Method \code{SapiV1BnbBurnPostWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1BnbBurnPostWithHttpInfo(
  spot.bnb.burn = NULL,
  interest.bnb.burn = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginAccountGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginAccountGet}{}}}
\subsection{Method \code{SapiV1MarginAccountGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginAccountGet(recv.window = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginAccountGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginAccountGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MarginAccountGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginAccountGetWithHttpInfo(recv.window = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginAllAssetsGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginAllAssetsGet}{}}}
\subsection{Method \code{SapiV1MarginAllAssetsGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginAllAssetsGet(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginAllAssetsGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginAllAssetsGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MarginAllAssetsGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginAllAssetsGetWithHttpInfo(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginAllOrderListGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginAllOrderListGet}{}}}
\subsection{Method \code{SapiV1MarginAllOrderListGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginAllOrderListGet(
  is.isolated = NULL,
  symbol = NULL,
  from.id = NULL,
  start.time = NULL,
  end.time = NULL,
  limit = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginAllOrderListGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginAllOrderListGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MarginAllOrderListGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginAllOrderListGetWithHttpInfo(
  is.isolated = NULL,
  symbol = NULL,
  from.id = NULL,
  start.time = NULL,
  end.time = NULL,
  limit = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginAllOrdersGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginAllOrdersGet}{}}}
\subsection{Method \code{SapiV1MarginAllOrdersGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginAllOrdersGet(
  symbol,
  is.isolated = NULL,
  order.id = NULL,
  start.time = NULL,
  end.time = NULL,
  limit = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginAllOrdersGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginAllOrdersGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MarginAllOrdersGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginAllOrdersGetWithHttpInfo(
  symbol,
  is.isolated = NULL,
  order.id = NULL,
  start.time = NULL,
  end.time = NULL,
  limit = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginAllPairsGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginAllPairsGet}{}}}
\subsection{Method \code{SapiV1MarginAllPairsGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginAllPairsGet(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginAllPairsGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginAllPairsGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MarginAllPairsGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginAllPairsGetWithHttpInfo(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginAssetGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginAssetGet}{}}}
\subsection{Method \code{SapiV1MarginAssetGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginAssetGet(asset, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginAssetGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginAssetGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MarginAssetGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginAssetGetWithHttpInfo(asset, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginCrossMarginDataGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginCrossMarginDataGet}{}}}
\subsection{Method \code{SapiV1MarginCrossMarginDataGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginCrossMarginDataGet(
  vip.level = NULL,
  coin = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginCrossMarginDataGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginCrossMarginDataGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MarginCrossMarginDataGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginCrossMarginDataGetWithHttpInfo(
  vip.level = NULL,
  coin = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginForceLiquidationRecGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginForceLiquidationRecGet}{}}}
\subsection{Method \code{SapiV1MarginForceLiquidationRecGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginForceLiquidationRecGet(
  start.time = NULL,
  end.time = NULL,
  isolated.symbol = NULL,
  current = NULL,
  size = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginForceLiquidationRecGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginForceLiquidationRecGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MarginForceLiquidationRecGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginForceLiquidationRecGetWithHttpInfo(
  start.time = NULL,
  end.time = NULL,
  isolated.symbol = NULL,
  current = NULL,
  size = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginInterestHistoryGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginInterestHistoryGet}{}}}
\subsection{Method \code{SapiV1MarginInterestHistoryGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginInterestHistoryGet(
  asset = NULL,
  isolated.symbol = NULL,
  start.time = NULL,
  end.time = NULL,
  current = NULL,
  size = NULL,
  archived = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginInterestHistoryGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginInterestHistoryGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MarginInterestHistoryGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginInterestHistoryGetWithHttpInfo(
  asset = NULL,
  isolated.symbol = NULL,
  start.time = NULL,
  end.time = NULL,
  current = NULL,
  size = NULL,
  archived = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginInterestRateHistoryGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginInterestRateHistoryGet}{}}}
\subsection{Method \code{SapiV1MarginInterestRateHistoryGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginInterestRateHistoryGet(
  asset,
  vip.level = NULL,
  start.time = NULL,
  end.time = NULL,
  limit = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginInterestRateHistoryGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginInterestRateHistoryGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MarginInterestRateHistoryGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginInterestRateHistoryGetWithHttpInfo(
  asset,
  vip.level = NULL,
  start.time = NULL,
  end.time = NULL,
  limit = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginIsolatedAccountDelete"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginIsolatedAccountDelete}{}}}
\subsection{Method \code{SapiV1MarginIsolatedAccountDelete()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginIsolatedAccountDelete(symbol, recv.window = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginIsolatedAccountDeleteWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginIsolatedAccountDeleteWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MarginIsolatedAccountDeleteWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginIsolatedAccountDeleteWithHttpInfo(
  symbol,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginIsolatedAccountGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginIsolatedAccountGet}{}}}
\subsection{Method \code{SapiV1MarginIsolatedAccountGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginIsolatedAccountGet(
  symbols = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginIsolatedAccountGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginIsolatedAccountGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MarginIsolatedAccountGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginIsolatedAccountGetWithHttpInfo(
  symbols = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginIsolatedAccountLimitGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginIsolatedAccountLimitGet}{}}}
\subsection{Method \code{SapiV1MarginIsolatedAccountLimitGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginIsolatedAccountLimitGet(recv.window = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginIsolatedAccountLimitGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginIsolatedAccountLimitGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MarginIsolatedAccountLimitGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginIsolatedAccountLimitGetWithHttpInfo(
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginIsolatedAccountPost"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginIsolatedAccountPost}{}}}
\subsection{Method \code{SapiV1MarginIsolatedAccountPost()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginIsolatedAccountPost(symbol, recv.window = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginIsolatedAccountPostWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginIsolatedAccountPostWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MarginIsolatedAccountPostWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginIsolatedAccountPostWithHttpInfo(
  symbol,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginIsolatedAllPairsGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginIsolatedAllPairsGet}{}}}
\subsection{Method \code{SapiV1MarginIsolatedAllPairsGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginIsolatedAllPairsGet(recv.window = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginIsolatedAllPairsGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginIsolatedAllPairsGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MarginIsolatedAllPairsGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginIsolatedAllPairsGetWithHttpInfo(recv.window = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginIsolatedMarginDataGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginIsolatedMarginDataGet}{}}}
\subsection{Method \code{SapiV1MarginIsolatedMarginDataGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginIsolatedMarginDataGet(
  vip.level = NULL,
  symbol = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginIsolatedMarginDataGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginIsolatedMarginDataGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MarginIsolatedMarginDataGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginIsolatedMarginDataGetWithHttpInfo(
  vip.level = NULL,
  symbol = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginIsolatedMarginTierGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginIsolatedMarginTierGet}{}}}
\subsection{Method \code{SapiV1MarginIsolatedMarginTierGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginIsolatedMarginTierGet(
  symbol,
  tier = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginIsolatedMarginTierGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginIsolatedMarginTierGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MarginIsolatedMarginTierGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginIsolatedMarginTierGetWithHttpInfo(
  symbol,
  tier = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginIsolatedPairGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginIsolatedPairGet}{}}}
\subsection{Method \code{SapiV1MarginIsolatedPairGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginIsolatedPairGet(symbol, recv.window = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginIsolatedPairGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginIsolatedPairGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MarginIsolatedPairGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginIsolatedPairGetWithHttpInfo(
  symbol,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginIsolatedTransferGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginIsolatedTransferGet}{}}}
\subsection{Method \code{SapiV1MarginIsolatedTransferGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginIsolatedTransferGet(
  symbol,
  asset = NULL,
  trans.from = NULL,
  trans.to = NULL,
  start.time = NULL,
  end.time = NULL,
  current = NULL,
  size = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginIsolatedTransferGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginIsolatedTransferGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MarginIsolatedTransferGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginIsolatedTransferGetWithHttpInfo(
  symbol,
  asset = NULL,
  trans.from = NULL,
  trans.to = NULL,
  start.time = NULL,
  end.time = NULL,
  current = NULL,
  size = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginIsolatedTransferPost"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginIsolatedTransferPost}{}}}
\subsection{Method \code{SapiV1MarginIsolatedTransferPost()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginIsolatedTransferPost(
  asset,
  symbol,
  amount,
  trans.from = NULL,
  trans.to = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginIsolatedTransferPostWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginIsolatedTransferPostWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MarginIsolatedTransferPostWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginIsolatedTransferPostWithHttpInfo(
  asset,
  symbol,
  amount,
  trans.from = NULL,
  trans.to = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginLoanGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginLoanGet}{}}}
\subsection{Method \code{SapiV1MarginLoanGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginLoanGet(
  asset,
  isolated.symbol = NULL,
  tx.id = NULL,
  start.time = NULL,
  end.time = NULL,
  current = NULL,
  size = NULL,
  archived = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginLoanGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginLoanGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MarginLoanGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginLoanGetWithHttpInfo(
  asset,
  isolated.symbol = NULL,
  tx.id = NULL,
  start.time = NULL,
  end.time = NULL,
  current = NULL,
  size = NULL,
  archived = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginLoanPost"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginLoanPost}{}}}
\subsection{Method \code{SapiV1MarginLoanPost()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginLoanPost(
  asset,
  amount,
  is.isolated = NULL,
  symbol = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginLoanPostWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginLoanPostWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MarginLoanPostWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginLoanPostWithHttpInfo(
  asset,
  amount,
  is.isolated = NULL,
  symbol = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginMaxBorrowableGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginMaxBorrowableGet}{}}}
\subsection{Method \code{SapiV1MarginMaxBorrowableGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginMaxBorrowableGet(
  asset,
  isolated.symbol = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginMaxBorrowableGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginMaxBorrowableGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MarginMaxBorrowableGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginMaxBorrowableGetWithHttpInfo(
  asset,
  isolated.symbol = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginMaxTransferableGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginMaxTransferableGet}{}}}
\subsection{Method \code{SapiV1MarginMaxTransferableGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginMaxTransferableGet(
  asset,
  isolated.symbol = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginMaxTransferableGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginMaxTransferableGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MarginMaxTransferableGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginMaxTransferableGetWithHttpInfo(
  asset,
  isolated.symbol = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginMyTradesGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginMyTradesGet}{}}}
\subsection{Method \code{SapiV1MarginMyTradesGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginMyTradesGet(
  symbol,
  is.isolated = NULL,
  start.time = NULL,
  end.time = NULL,
  from.id = NULL,
  limit = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginMyTradesGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginMyTradesGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MarginMyTradesGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginMyTradesGetWithHttpInfo(
  symbol,
  is.isolated = NULL,
  start.time = NULL,
  end.time = NULL,
  from.id = NULL,
  limit = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginOpenOrderListGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginOpenOrderListGet}{}}}
\subsection{Method \code{SapiV1MarginOpenOrderListGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginOpenOrderListGet(
  is.isolated = NULL,
  symbol = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginOpenOrderListGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginOpenOrderListGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MarginOpenOrderListGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginOpenOrderListGetWithHttpInfo(
  is.isolated = NULL,
  symbol = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginOpenOrdersDelete"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginOpenOrdersDelete}{}}}
\subsection{Method \code{SapiV1MarginOpenOrdersDelete()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginOpenOrdersDelete(
  symbol,
  is.isolated = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginOpenOrdersDeleteWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginOpenOrdersDeleteWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MarginOpenOrdersDeleteWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginOpenOrdersDeleteWithHttpInfo(
  symbol,
  is.isolated = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginOpenOrdersGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginOpenOrdersGet}{}}}
\subsection{Method \code{SapiV1MarginOpenOrdersGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginOpenOrdersGet(
  symbol = NULL,
  is.isolated = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginOpenOrdersGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginOpenOrdersGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MarginOpenOrdersGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginOpenOrdersGetWithHttpInfo(
  symbol = NULL,
  is.isolated = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginOrderDelete"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginOrderDelete}{}}}
\subsection{Method \code{SapiV1MarginOrderDelete()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginOrderDelete(
  symbol,
  is.isolated = NULL,
  order.id = NULL,
  orig.client.order.id = NULL,
  new.client.order.id = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginOrderDeleteWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginOrderDeleteWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MarginOrderDeleteWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginOrderDeleteWithHttpInfo(
  symbol,
  is.isolated = NULL,
  order.id = NULL,
  orig.client.order.id = NULL,
  new.client.order.id = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginOrderGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginOrderGet}{}}}
\subsection{Method \code{SapiV1MarginOrderGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginOrderGet(
  symbol,
  is.isolated = NULL,
  order.id = NULL,
  orig.client.order.id = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginOrderGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginOrderGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MarginOrderGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginOrderGetWithHttpInfo(
  symbol,
  is.isolated = NULL,
  order.id = NULL,
  orig.client.order.id = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginOrderListDelete"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginOrderListDelete}{}}}
\subsection{Method \code{SapiV1MarginOrderListDelete()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginOrderListDelete(
  symbol,
  is.isolated = NULL,
  order.list.id = NULL,
  list.client.order.id = NULL,
  new.client.order.id = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginOrderListDeleteWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginOrderListDeleteWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MarginOrderListDeleteWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginOrderListDeleteWithHttpInfo(
  symbol,
  is.isolated = NULL,
  order.list.id = NULL,
  list.client.order.id = NULL,
  new.client.order.id = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginOrderListGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginOrderListGet}{}}}
\subsection{Method \code{SapiV1MarginOrderListGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginOrderListGet(
  is.isolated = NULL,
  symbol = NULL,
  order.list.id = NULL,
  orig.client.order.id = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginOrderListGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginOrderListGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MarginOrderListGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginOrderListGetWithHttpInfo(
  is.isolated = NULL,
  symbol = NULL,
  order.list.id = NULL,
  orig.client.order.id = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginOrderOcoPost"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginOrderOcoPost}{}}}
\subsection{Method \code{SapiV1MarginOrderOcoPost()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginOrderOcoPost(
  symbol,
  side,
  quantity,
  price,
  stop.price,
  is.isolated = NULL,
  list.client.order.id = NULL,
  limit.client.order.id = NULL,
  limit.iceberg.qty = NULL,
  stop.client.order.id = NULL,
  stop.limit.price = NULL,
  stop.iceberg.qty = NULL,
  stop.limit.time.in.force = NULL,
  new.order.resp.type = NULL,
  side.effect.type = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginOrderOcoPostWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginOrderOcoPostWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MarginOrderOcoPostWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginOrderOcoPostWithHttpInfo(
  symbol,
  side,
  quantity,
  price,
  stop.price,
  is.isolated = NULL,
  list.client.order.id = NULL,
  limit.client.order.id = NULL,
  limit.iceberg.qty = NULL,
  stop.client.order.id = NULL,
  stop.limit.price = NULL,
  stop.iceberg.qty = NULL,
  stop.limit.time.in.force = NULL,
  new.order.resp.type = NULL,
  side.effect.type = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginOrderPost"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginOrderPost}{}}}
\subsection{Method \code{SapiV1MarginOrderPost()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginOrderPost(
  symbol,
  side,
  type,
  quantity,
  is.isolated = NULL,
  quote.order.qty = NULL,
  price = NULL,
  stop.price = NULL,
  new.client.order.id = NULL,
  iceberg.qty = NULL,
  new.order.resp.type = NULL,
  side.effect.type = NULL,
  time.in.force = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginOrderPostWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginOrderPostWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MarginOrderPostWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginOrderPostWithHttpInfo(
  symbol,
  side,
  type,
  quantity,
  is.isolated = NULL,
  quote.order.qty = NULL,
  price = NULL,
  stop.price = NULL,
  new.client.order.id = NULL,
  iceberg.qty = NULL,
  new.order.resp.type = NULL,
  side.effect.type = NULL,
  time.in.force = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginPairGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginPairGet}{}}}
\subsection{Method \code{SapiV1MarginPairGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginPairGet(symbol, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginPairGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginPairGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MarginPairGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginPairGetWithHttpInfo(symbol, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginPriceIndexGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginPriceIndexGet}{}}}
\subsection{Method \code{SapiV1MarginPriceIndexGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginPriceIndexGet(symbol, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginPriceIndexGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginPriceIndexGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MarginPriceIndexGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginPriceIndexGetWithHttpInfo(symbol, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginRepayGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginRepayGet}{}}}
\subsection{Method \code{SapiV1MarginRepayGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginRepayGet(
  asset,
  isolated.symbol = NULL,
  tx.id = NULL,
  start.time = NULL,
  end.time = NULL,
  current = NULL,
  size = NULL,
  archived = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginRepayGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginRepayGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MarginRepayGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginRepayGetWithHttpInfo(
  asset,
  isolated.symbol = NULL,
  tx.id = NULL,
  start.time = NULL,
  end.time = NULL,
  current = NULL,
  size = NULL,
  archived = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginRepayPost"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginRepayPost}{}}}
\subsection{Method \code{SapiV1MarginRepayPost()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginRepayPost(
  asset,
  amount,
  is.isolated = NULL,
  symbol = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginRepayPostWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginRepayPostWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MarginRepayPostWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginRepayPostWithHttpInfo(
  asset,
  amount,
  is.isolated = NULL,
  symbol = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginTransferGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginTransferGet}{}}}
\subsection{Method \code{SapiV1MarginTransferGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginTransferGet(
  asset = NULL,
  type = NULL,
  start.time = NULL,
  end.time = NULL,
  current = NULL,
  size = NULL,
  archived = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginTransferGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginTransferGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MarginTransferGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginTransferGetWithHttpInfo(
  asset = NULL,
  type = NULL,
  start.time = NULL,
  end.time = NULL,
  current = NULL,
  size = NULL,
  archived = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginTransferPost"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginTransferPost}{}}}
\subsection{Method \code{SapiV1MarginTransferPost()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginTransferPost(
  asset,
  amount,
  type = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1MarginTransferPostWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1MarginTransferPostWithHttpInfo}{}}}
\subsection{Method \code{SapiV1MarginTransferPostWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$SapiV1MarginTransferPostWithHttpInfo(
  asset,
  amount,
  type = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{MarginApi$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
