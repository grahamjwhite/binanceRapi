% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/blvt_api.R
\docType{class}
\name{BLVTApi}
\alias{BLVTApi}
\title{BLVT operations}
\format{
An \code{R6Class} generator object
}
\description{
binanceRapi.BLVT
}
\section{Methods}{

\describe{
\strong{ SapiV1BlvtRedeemPost } \emph{ Redeem BLVT (USER_DATA) }
Weight(IP): 1

\itemize{
\item \emph{ @param } token.name character
\item \emph{ @param } amount numeric
\item \emph{ @param } timestamp integer
\item \emph{ @param } signature character
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{InlineResponse200100} \cr


\item status code : 200 | Redemption record

\item return type : InlineResponse200100 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1BlvtRedeemRecordGet } \emph{ Redemption Record (USER_DATA) }
- Only the data of the latest 90 days is available  Weight(IP): 1

\itemize{
\item \emph{ @param } timestamp integer
\item \emph{ @param } signature character
\item \emph{ @param } token.name character
\item \emph{ @param } id integer
\item \emph{ @param } start.time integer
\item \emph{ @param } end.time integer
\item \emph{ @param } limit integer
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } list( \link{inline_response_200_101} ) \cr


\item status code : 200 | List of redemption record

\item return type : array[InlineResponse200101] 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1BlvtSubscribePost } \emph{ Subscribe BLVT (USER_DATA) }
Weight(IP): 1

\itemize{
\item \emph{ @param } token.name character
\item \emph{ @param } cost numeric
\item \emph{ @param } timestamp integer
\item \emph{ @param } signature character
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{InlineResponse20098} \cr


\item status code : 200 | Subscription Info

\item return type : InlineResponse20098 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1BlvtSubscribeRecordGet } \emph{ Query Subscription Record (USER_DATA) }
- Only the data of the latest 90 days is available  Weight(IP): 1

\itemize{
\item \emph{ @param } timestamp integer
\item \emph{ @param } signature character
\item \emph{ @param } token.name character
\item \emph{ @param } id integer
\item \emph{ @param } start.time integer
\item \emph{ @param } end.time integer
\item \emph{ @param } limit integer
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } \link{InlineResponse20099} \cr


\item status code : 200 | List of subscription record

\item return type : InlineResponse20099 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1BlvtTokenInfoGet } \emph{ BLVT Info (MARKET_DATA) }
Weight(IP): 1

\itemize{
\item \emph{ @param } token.name character
\item \emph{ @returnType } list( \link{inline_response_200_97} ) \cr


\item status code : 200 | List of token information

\item return type : array[InlineResponse20097] 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

\strong{ SapiV1BlvtUserLimitGet } \emph{ BLVT User Limit Info (USER_DATA) }
Weight(IP): 1

\itemize{
\item \emph{ @param } timestamp integer
\item \emph{ @param } signature character
\item \emph{ @param } token.name character
\item \emph{ @param } recv.window integer
\item \emph{ @returnType } list( \link{inline_response_200_102} ) \cr


\item status code : 200 | List of token limits

\item return type : array[InlineResponse200102] 
\item response headers :

\tabular{ll}{
}
\item status code : 400 | Bad Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Unauthorized Request

\item return type : Error 
\item response headers :

\tabular{ll}{
}
}

}
}

\examples{
\dontrun{
####################  SapiV1BlvtRedeemPost  ####################

library(binanceRapi)
var.token.name <- 'token.name_example' # character | BTCDOWN, BTCUP
var.amount <- 1.01 # numeric | 
var.timestamp <- 56 # integer | UTC timestamp in ms
var.signature <- 'signature_example' # character | Signature
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Redeem BLVT (USER_DATA)
api.instance <- BLVTApi$new()

#Configure API key authorization: ApiKeyAuth
api.instance$apiClient$apiKeys['X-MBX-APIKEY'] <- 'TODO_YOUR_API_KEY';

result <- api.instance$SapiV1BlvtRedeemPost(var.token.name, var.amount, var.timestamp, var.signature, recv.window=var.recv.window)


####################  SapiV1BlvtRedeemRecordGet  ####################

library(binanceRapi)
var.timestamp <- 56 # integer | UTC timestamp in ms
var.signature <- 'signature_example' # character | Signature
var.token.name <- 'token.name_example' # character | BTCDOWN, BTCUP
var.id <- 56 # integer | 
var.start.time <- 56 # integer | UTC timestamp in ms
var.end.time <- 56 # integer | UTC timestamp in ms
var.limit <- 56 # integer | default 1000, max 1000
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Redemption Record (USER_DATA)
api.instance <- BLVTApi$new()

#Configure API key authorization: ApiKeyAuth
api.instance$apiClient$apiKeys['X-MBX-APIKEY'] <- 'TODO_YOUR_API_KEY';

result <- api.instance$SapiV1BlvtRedeemRecordGet(var.timestamp, var.signature, token.name=var.token.name, id=var.id, start.time=var.start.time, end.time=var.end.time, limit=var.limit, recv.window=var.recv.window)


####################  SapiV1BlvtSubscribePost  ####################

library(binanceRapi)
var.token.name <- 'token.name_example' # character | BTCDOWN, BTCUP
var.cost <- 3.4 # numeric | Spot balance
var.timestamp <- 56 # integer | UTC timestamp in ms
var.signature <- 'signature_example' # character | Signature
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Subscribe BLVT (USER_DATA)
api.instance <- BLVTApi$new()

#Configure API key authorization: ApiKeyAuth
api.instance$apiClient$apiKeys['X-MBX-APIKEY'] <- 'TODO_YOUR_API_KEY';

result <- api.instance$SapiV1BlvtSubscribePost(var.token.name, var.cost, var.timestamp, var.signature, recv.window=var.recv.window)


####################  SapiV1BlvtSubscribeRecordGet  ####################

library(binanceRapi)
var.timestamp <- 56 # integer | UTC timestamp in ms
var.signature <- 'signature_example' # character | Signature
var.token.name <- 'token.name_example' # character | BTCDOWN, BTCUP
var.id <- 56 # integer | 
var.start.time <- 56 # integer | UTC timestamp in ms
var.end.time <- 56 # integer | UTC timestamp in ms
var.limit <- 500 # integer | Default 500; max 1000.
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#Query Subscription Record (USER_DATA)
api.instance <- BLVTApi$new()

#Configure API key authorization: ApiKeyAuth
api.instance$apiClient$apiKeys['X-MBX-APIKEY'] <- 'TODO_YOUR_API_KEY';

result <- api.instance$SapiV1BlvtSubscribeRecordGet(var.timestamp, var.signature, token.name=var.token.name, id=var.id, start.time=var.start.time, end.time=var.end.time, limit=var.limit, recv.window=var.recv.window)


####################  SapiV1BlvtTokenInfoGet  ####################

library(binanceRapi)
var.token.name <- 'token.name_example' # character | BTCDOWN, BTCUP

#BLVT Info (MARKET_DATA)
api.instance <- BLVTApi$new()

#Configure API key authorization: ApiKeyAuth
api.instance$apiClient$apiKeys['X-MBX-APIKEY'] <- 'TODO_YOUR_API_KEY';

result <- api.instance$SapiV1BlvtTokenInfoGet(token.name=var.token.name)


####################  SapiV1BlvtUserLimitGet  ####################

library(binanceRapi)
var.timestamp <- 56 # integer | UTC timestamp in ms
var.signature <- 'signature_example' # character | Signature
var.token.name <- 'token.name_example' # character | BTCDOWN, BTCUP
var.recv.window <- 5000 # integer | The value cannot be greater than 60000

#BLVT User Limit Info (USER_DATA)
api.instance <- BLVTApi$new()

#Configure API key authorization: ApiKeyAuth
api.instance$apiClient$apiKeys['X-MBX-APIKEY'] <- 'TODO_YOUR_API_KEY';

result <- api.instance$SapiV1BlvtUserLimitGet(var.timestamp, var.signature, token.name=var.token.name, recv.window=var.recv.window)


}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{apiClient}}{Handles the client-server communication.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{BLVTApi$new()}}
\item \href{#method-SapiV1BlvtRedeemPost}{\code{BLVTApi$SapiV1BlvtRedeemPost()}}
\item \href{#method-SapiV1BlvtRedeemPostWithHttpInfo}{\code{BLVTApi$SapiV1BlvtRedeemPostWithHttpInfo()}}
\item \href{#method-SapiV1BlvtRedeemRecordGet}{\code{BLVTApi$SapiV1BlvtRedeemRecordGet()}}
\item \href{#method-SapiV1BlvtRedeemRecordGetWithHttpInfo}{\code{BLVTApi$SapiV1BlvtRedeemRecordGetWithHttpInfo()}}
\item \href{#method-SapiV1BlvtSubscribePost}{\code{BLVTApi$SapiV1BlvtSubscribePost()}}
\item \href{#method-SapiV1BlvtSubscribePostWithHttpInfo}{\code{BLVTApi$SapiV1BlvtSubscribePostWithHttpInfo()}}
\item \href{#method-SapiV1BlvtSubscribeRecordGet}{\code{BLVTApi$SapiV1BlvtSubscribeRecordGet()}}
\item \href{#method-SapiV1BlvtSubscribeRecordGetWithHttpInfo}{\code{BLVTApi$SapiV1BlvtSubscribeRecordGetWithHttpInfo()}}
\item \href{#method-SapiV1BlvtTokenInfoGet}{\code{BLVTApi$SapiV1BlvtTokenInfoGet()}}
\item \href{#method-SapiV1BlvtTokenInfoGetWithHttpInfo}{\code{BLVTApi$SapiV1BlvtTokenInfoGetWithHttpInfo()}}
\item \href{#method-SapiV1BlvtUserLimitGet}{\code{BLVTApi$SapiV1BlvtUserLimitGet()}}
\item \href{#method-SapiV1BlvtUserLimitGetWithHttpInfo}{\code{BLVTApi$SapiV1BlvtUserLimitGetWithHttpInfo()}}
\item \href{#method-clone}{\code{BLVTApi$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BLVTApi$new(apiClient)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1BlvtRedeemPost"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1BlvtRedeemPost}{}}}
\subsection{Method \code{SapiV1BlvtRedeemPost()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BLVTApi$SapiV1BlvtRedeemPost(
  token.name,
  amount,
  timestamp,
  signature,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1BlvtRedeemPostWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1BlvtRedeemPostWithHttpInfo}{}}}
\subsection{Method \code{SapiV1BlvtRedeemPostWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BLVTApi$SapiV1BlvtRedeemPostWithHttpInfo(
  token.name,
  amount,
  timestamp,
  signature,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1BlvtRedeemRecordGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1BlvtRedeemRecordGet}{}}}
\subsection{Method \code{SapiV1BlvtRedeemRecordGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BLVTApi$SapiV1BlvtRedeemRecordGet(
  timestamp,
  signature,
  token.name = NULL,
  id = NULL,
  start.time = NULL,
  end.time = NULL,
  limit = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1BlvtRedeemRecordGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1BlvtRedeemRecordGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1BlvtRedeemRecordGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BLVTApi$SapiV1BlvtRedeemRecordGetWithHttpInfo(
  timestamp,
  signature,
  token.name = NULL,
  id = NULL,
  start.time = NULL,
  end.time = NULL,
  limit = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1BlvtSubscribePost"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1BlvtSubscribePost}{}}}
\subsection{Method \code{SapiV1BlvtSubscribePost()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BLVTApi$SapiV1BlvtSubscribePost(
  token.name,
  cost,
  timestamp,
  signature,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1BlvtSubscribePostWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1BlvtSubscribePostWithHttpInfo}{}}}
\subsection{Method \code{SapiV1BlvtSubscribePostWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BLVTApi$SapiV1BlvtSubscribePostWithHttpInfo(
  token.name,
  cost,
  timestamp,
  signature,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1BlvtSubscribeRecordGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1BlvtSubscribeRecordGet}{}}}
\subsection{Method \code{SapiV1BlvtSubscribeRecordGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BLVTApi$SapiV1BlvtSubscribeRecordGet(
  timestamp,
  signature,
  token.name = NULL,
  id = NULL,
  start.time = NULL,
  end.time = NULL,
  limit = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1BlvtSubscribeRecordGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1BlvtSubscribeRecordGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1BlvtSubscribeRecordGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BLVTApi$SapiV1BlvtSubscribeRecordGetWithHttpInfo(
  timestamp,
  signature,
  token.name = NULL,
  id = NULL,
  start.time = NULL,
  end.time = NULL,
  limit = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1BlvtTokenInfoGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1BlvtTokenInfoGet}{}}}
\subsection{Method \code{SapiV1BlvtTokenInfoGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BLVTApi$SapiV1BlvtTokenInfoGet(token.name = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1BlvtTokenInfoGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1BlvtTokenInfoGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1BlvtTokenInfoGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BLVTApi$SapiV1BlvtTokenInfoGetWithHttpInfo(token.name = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1BlvtUserLimitGet"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1BlvtUserLimitGet}{}}}
\subsection{Method \code{SapiV1BlvtUserLimitGet()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BLVTApi$SapiV1BlvtUserLimitGet(
  timestamp,
  signature,
  token.name = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SapiV1BlvtUserLimitGetWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-SapiV1BlvtUserLimitGetWithHttpInfo}{}}}
\subsection{Method \code{SapiV1BlvtUserLimitGetWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BLVTApi$SapiV1BlvtUserLimitGetWithHttpInfo(
  timestamp,
  signature,
  token.name = NULL,
  recv.window = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BLVTApi$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
